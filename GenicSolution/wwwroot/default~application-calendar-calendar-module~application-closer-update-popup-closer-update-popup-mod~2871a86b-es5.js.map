{"version":3,"sources":["webpack:///src/app/services/notification.service.ts","webpack:///src/app/ngb-time-to-string-adapter.ts","webpack:///src/app/ngb-date-to-string-adapter.ts"],"names":["NotificationService","http","SetNotificationDefault","SetNotificationTemplateDefault","NotificationTemplateList","NotificationData","Id","CreateTicketCustomer","CreateTicketEngineer","CreateTicketAdmin","AllocateTicketCustomer","AllocateTicketEngineer","AllocateTicketAdmin","ReAllocateTicketCustomer","ReAllocateTicketEngineer","ReAllocateTicketAdmin","RescheduleTicketCustomer","RescheduleTicketEngineer","RescheduleTicketAdmin","CompletionTicketCustomer","CompletionTicketAdmin","HoldTicketCustomer","HoldTicketAdmin","WorkOrderCustomer","WorkOrderAdmin","QuoteCustomer","QuoteAdmin","StartEndTicketCustomer","StartEndTicketAdmin","ReminRecurTicketCustomer","ReminRecurTicketEngineer","ReminRecurTicketAdmin","DailyNosOfTicketEngineer","CancelTicketCustomer","CancelTicketEngineer","CancelTicketAdmin","OnServiceDayCustomer","OnServiceDayEngineer","OnServiceDayAdmin","OnTheDayCustomer","OnTheDayTicketAdmin","NotificationTemplateData","TemplateName","ModuleName","CustomerMailBody","MobileNotification","IsRead","EngineerMailBody","AdminMailBody","IsActive","token","get","apiUrl","pipe","Response","put","response","post","CurrStatus","headers","observe","QuoteId","isCust","isAdmin","AdminId","CloserId","TicketId","oldEngList","OldDate","OldTime","providedIn","isInteger","value","isFinite","Math","floor","isString","NgbTimeToStringAdapter","year","Date","getUTCFullYear","month","getUTCMonth","day","getUTCDate","dateString","date","isValidDate","isNaN","valueOf","hour","getUTCHours","minute","getUTCMinutes","second","getUTCSeconds","time","toString","padStart","NgbDateToStringAdapter"],"mappings":"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","file":"default~application-calendar-calendar-module~application-closer-update-popup-closer-update-popup-mod~2871a86b-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Notification, NotificationTemplate } from './notification.module';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { map } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n  NotificationData: Notification;\n  NotificationTemplateData: NotificationTemplate;\n  NotificationTemplateList: NotificationTemplate[];\n\n  constructor(private http: HttpClient) {\n    this.SetNotificationDefault();\n    this.SetNotificationTemplateDefault();\n    this.NotificationTemplateList = [];\n   }\n\n  SetNotificationDefault() {\n    this.NotificationData = {\n    Id: '00000000-0000-0000-0000-000000000000',\n    CreateTicketCustomer: false,\n    CreateTicketEngineer: false,\n    CreateTicketAdmin: false,\n    AllocateTicketCustomer: false,\n    AllocateTicketEngineer: false,\n    AllocateTicketAdmin: false,\n    ReAllocateTicketCustomer: false,\n    ReAllocateTicketEngineer: false,\n    ReAllocateTicketAdmin: false,\n    RescheduleTicketCustomer: false,\n    RescheduleTicketEngineer: false,\n    RescheduleTicketAdmin: false,\n    CompletionTicketCustomer: false,\n    CompletionTicketAdmin: false,\n    HoldTicketCustomer: false,\n    HoldTicketAdmin: false,\n    WorkOrderCustomer: false,\n    WorkOrderAdmin: false,\n    QuoteCustomer: false,\n    QuoteAdmin: false,\n    StartEndTicketCustomer: false,\n    StartEndTicketAdmin: false,\n    ReminRecurTicketCustomer: false,\n    ReminRecurTicketEngineer: false,\n    ReminRecurTicketAdmin: false,\n    DailyNosOfTicketEngineer: false,\n    CancelTicketCustomer: false,\n    CancelTicketEngineer: false,\n    CancelTicketAdmin: false,\n    OnServiceDayCustomer: false,\n    OnServiceDayEngineer: false,\n    OnServiceDayAdmin: false,\n    OnTheDayCustomer: false,\n    OnTheDayTicketAdmin: false\n    }\n  }\n  SetNotificationTemplateDefault() {\n    this.NotificationTemplateData = {\n    Id: '00000000-0000-0000-0000-000000000000',\n    TemplateName: '',\n    ModuleName:'',\n    CustomerMailBody: '',\n    MobileNotification: '',\n    IsRead: false,\n    EngineerMailBody: '',\n    AdminMailBody: '',\n    IsActive: true\n    }\n  }\ngetNotification(token: string) {\n  return this.http.get(environment.apiUrl + '/api/Notifications/GetModuleNotification/' + token)\n      .pipe(map(\n          Response => {\n              return Response;\n  }));\n}\n\nputNotificationDetails(token: string) {\n  return this.http.put(environment.apiUrl + '/api/Notifications/putModuleNotifications/' + token, this.NotificationData)\n  .pipe(map(\n    response => {\n      return response;\n  }));\n}\n\n//-----------------------Email template Section ---------------------------------------------//\n//get template list\ngetEmailTemplateList() {\n  return this.http.get(environment.apiUrl + '/api/Notifications/getEmailTemplateList')\n      .pipe(map(\n          Response => {\n              return Response;\n  }));\n}\n\n//get template details\ngetEmailTemplate(Id) {\n  return this.http.get(environment.apiUrl + '/api/Notifications/getEmailTemplate/' + Id)\n      .pipe(map(\n          Response => {\n              return Response;\n  }));\n}\n// Add Email template\nAddEmailTemplate() {\n  return this.http.post(environment.apiUrl + '/api/Notifications/AddEmailTemplate', this.NotificationTemplateData)\n  .pipe(map(\n    response => {\n      return response;\n  }));\n}\n\n// Update Email template\nUpdateEmailTemplate() {\n  return this.http.put(environment.apiUrl + '/api/Notifications/UpdateEmailTemplate', this.NotificationTemplateData)\n  .pipe(map(\n    response => {\n      return response;\n  }));\n}\nchangeNotificationTemplateStatus(Id, CurrStatus) {\n  return this.http.post(environment.apiUrl + '/api/Notifications/changeNotificationTemplateStatus/' + Id + '/' + CurrStatus , null , {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' }), observe: 'response'\n  }).pipe();\n}\n\n// Send Quote Notification\nquoteEmailNotification(QuoteId?: string, isCust?: boolean, isAdmin?: boolean, AdminId?: string) {\n  return this.http.post(environment.apiUrl + '/api/Notifications/quoteEmailNotification/' + QuoteId + '/' +\n  isCust + '/' + isAdmin + '/' + AdminId , null)\n  .pipe(map(\n    response => {\n      return response;\n  }));\n}\n// Send Quote Notification\nupdateQuoteEmailNotification(QuoteId?: string, isCust?: boolean, isAdmin?: boolean, AdminId?: string) {\n  return this.http.post(environment.apiUrl + '/api/Notifications/UpdatequoteEmailNotification/' + QuoteId + '/' +\n   isCust + '/' + isAdmin + '/' + AdminId , null)\n  .pipe(map(\n    response => {\n      return response;\n  }));\n}\n//Send Work order Notification\nWorkOrderEmailNotification(CloserId?: string, AdminId?: string) {\n  return this.http.post(environment.apiUrl + '/api/Notifications/WorkOrderEmailNotification/' + CloserId + '/' + AdminId, null)\n  .pipe(map(\n    response => {\n      return response;\n  }));\n}\n//Send New Ticket  Notification\nNewTicketEmailNotification(TicketId?: string, isCust?: boolean, isAdmin?: boolean, AdminId?: string) {\n  return this.http.post(environment.apiUrl + '/api/Notifications/TicketEmailNotification/' + TicketId + '/' +\n  isCust + '/' + isAdmin + '/' + AdminId , null)\n  .pipe(map(\n    response => {\n      return response;\n  }));\n}\n//Re-Schedule ticket notification\nReScheduleTicketEmailNotification(oldEngList, TicketId?: string, AdminId?: string, OldDate?: Date, OldTime?: string) {\n  return this.http.post(environment.apiUrl + '/api/Notifications/ReScheduleTicketBodyTemplate/' + TicketId+ '/' + AdminId +'/' + OldDate + '/' + OldTime , oldEngList)\n  .pipe(map(\n    response => {\n      return response;\n  }));\n}\n//Completion ticket notification\nStartTicketEmailNotification(TicketId?: string) {\n  return this.http.post(environment.apiUrl + '/api/Notifications/StartTicketEmailNotification/' + TicketId , null)\n  .pipe(map(\n    response => {\n      return response;\n  }));\n}\n//Completion ticket notification\nCompletionTicketEmailNotification(CloserId?: string) {\n  return this.http.post(environment.apiUrl + '/api/Notifications/CompletionTicketEmailNotification/' + CloserId, null)\n  .pipe(map(\n    response => {\n      return response;\n  }));\n}\n//Completion ticket notification\nHoldTicketEmailNotification(CloserId?: string) {\n  return this.http.post(environment.apiUrl + '/api/Notifications/HoldTicketEmailNotification/' + CloserId , null)\n  .pipe(map(\n    response => {\n      return response;\n  }));\n}\n//Cancelled ticket notification\nCancelledTicketEmailNotification(TicketId?: string, AdminId?: string) {\n  return this.http.post(environment.apiUrl + '/api/Notifications/CancelledTicketEmailNotification/' + TicketId+ '/' + AdminId , null)\n  .pipe(map(\n    response => {\n      return response;\n  }));\n}\n//Re-Allocation ticket notification\nReAllocationTicketEmailNotification(oldEngList, TicketId, isCust, isAdmin, AdminId) {\n  return this.http.post(environment.apiUrl + '/api/Notifications/ReAllocationTicketEmailNotificationss/'\n  + TicketId + '/' + isCust + '/' + isAdmin + '/' + AdminId , oldEngList)\n  .pipe(map(\n    response => {\n      return response;\n  }));\n}\n}\n","/** Outer dependencies */\r\nimport { Injectable } from '@angular/core';\r\nimport { NgbTimeStruct, NgbTimeAdapter } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nfunction isInteger(value: any): value is number {\r\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\r\n}\r\n\r\nfunction isString(value: any): value is string {\r\n  return typeof value === 'string';\r\n}\r\n\r\n@Injectable()\r\nexport class NgbTimeToStringAdapter extends NgbTimeAdapter<string> {\r\n  private year: number = new Date().getUTCFullYear();\r\n  private month: number = new Date().getUTCMonth() + 1;\r\n  private day: number = new Date().getUTCDate();\r\n\r\n  /**\r\n   * Converts user-model date into an NgbTimeStruct for internal use in the library\r\n   */\r\n  public fromModel(dateString: string): NgbTimeStruct {\r\n    const date = new Date(dateString);\r\n    const isValidDate = !isNaN(date.valueOf());\r\n\r\n    if (!dateString || !isString(dateString) || !isValidDate) {\r\n      return null;\r\n    }\r\n\r\n    this.year = date.getUTCFullYear();\r\n    this.month = date.getUTCMonth() + 1;\r\n    this.day = date.getUTCDate();\r\n\r\n    return { hour: date.getUTCHours(), minute: date.getUTCMinutes(), second: date.getUTCSeconds() };\r\n  }\r\n\r\n  /**\r\n   * Converts internal time value NgbTimeStruct to user-model date\r\n   * The returned type is supposed to be of the same type as fromModel() input-value param\r\n   */\r\n  public toModel(time: NgbTimeStruct): string {\r\n    if (time && isInteger(time.hour) && isInteger(time.minute) && isInteger(time.second)) {\r\n      const year = this.year.toString().padStart(2, '0');\r\n      const month = this.month.toString().padStart(2, '0');\r\n      const day = this.day.toString().padStart(2, '0');\r\n\r\n      const hour = time.hour.toString().padStart(2, '0');\r\n      const minute = time.minute.toString().padStart(2, '0');\r\n      const second = time.second.toString().padStart(2, '0');\r\n\r\n      return `${year}-${month}-${day}T${hour}:${minute}:${second}Z`;\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n","/** Outer dependencies */\r\nimport { Injectable } from '@angular/core';\r\nimport { NgbDateStruct, NgbDateAdapter } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nfunction isInteger(value: any): value is number {\r\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\r\n}\r\n\r\nfunction isString(value: any): value is string {\r\n  return typeof value === 'string';\r\n}\r\n\r\n@Injectable()\r\nexport class NgbDateToStringAdapter extends NgbDateAdapter<string> {\r\n  private hour = 0;\r\n  private minute = 0;\r\n  private second = 0;\r\n\r\n  /**\r\n   * Converts user-model date into an NgbDateStruct for internal use in the library\r\n   */\r\n  public fromModel(dateString: string): NgbDateStruct {\r\n    const date = new Date(dateString);\r\n\r\n    const isValidDate = (!isNaN(date.valueOf()));\r\n\r\n    if (!dateString || !isString(dateString) || !isValidDate) {\r\n      return null;\r\n    }\r\n\r\n    this.hour = date.getUTCHours();\r\n    this.minute = date.getUTCMinutes();\r\n    this.second = date.getUTCSeconds();\r\n\r\n    return { year: date.getUTCFullYear(), month: date.getUTCMonth() + 1, day: date.getUTCDate() };\r\n  }\r\n\r\n  /**\r\n   * Converts internal date value NgbDateStruct to user-model date\r\n   * The returned type is supposed to be of the same type as fromModel() input-value param\r\n   */\r\n  public toModel(date: NgbDateStruct): string {\r\n    if (date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)) {\r\n      const year = date.year.toString().padStart(2, '0');\r\n      const month = date.month.toString().padStart(2, '0');\r\n      const day = date.day.toString().padStart(2, '0');\r\n\r\n      const hour = this.hour.toString().padStart(2, '0');\r\n      const minute = this.minute.toString().padStart(2, '0');\r\n      const second = this.second.toString().padStart(2, '0');\r\n\r\n      return `${year}-${month}-${day}T${hour}:${minute}:${second}Z`;\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n"]}