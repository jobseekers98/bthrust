{"version":3,"sources":["webpack:///src/app/application/reports/visits/visits.component.ts","webpack:///src/app/application/reports/visits/visits.component.html","webpack:///src/app/generic-utils/Ticket-Status-Component/TicketStatusComponent.module.ts","webpack:///src/app/application/reports/tickets/report-ticket.component.ts","webpack:///src/app/application/reports/tickets/report-ticket.component.html","webpack:///src/app/application/reports/report-engineers/report-engineers.component.ts","webpack:///src/app/application/reports/report-engineers/report-engineers.component.html","webpack:///src/app/application/reports/report-engineer-attendance/report-engineer-attendance.component.ts","webpack:///src/app/application/reports/report-engineer-attendance/report-engineer-attendance.component.html","webpack:///src/app/application/reports/report-engineer-time-sheet/report-engineer-time-sheet.component.ts","webpack:///src/app/application/reports/report-engineer-time-sheet/report-engineer-time-sheet.component.html","webpack:///src/app/generic-utils/Ticket-Status-Component/TicketStatusComponent.component.ts","webpack:///src/app/ngb-time-to-string-adapter.ts","webpack:///src/app/application/reports/reports.component.ts","webpack:///src/app/ngb-date-to-string-adapter.ts","webpack:///src/app/application/reports/reports.module.ts"],"names":["VisitsComponent","service","titleService","downloadService","engineerservice","genicprofileservice","loginservice","router","toastr","dtOptions","dtTrigger","date","Date","firstDay","getFullYear","getMonth","firstdate","toString","padStart","getDate","lastDay","lastdate","currentUser","subscribe","x","data","ticketlist","ticketlisttemp","Permissions","ReportVisit","navigate","setTitle","TicketFilter","IsReady","IsReadyQuote","IsReadyInvoice","pagingType","paging","lengthMenu","getEngineerListSync","Token","res","response","Message","Engineerlist","result","warning","MessageDescription","error","console","log","ReportsFilter","StartDate","EndDate","Status","Engineer","Id","cursDate","cureDate","sDate","split","replace","eDate","loaddata","setTimeout","sdate","edate","type","eid","tid","dtElement","undefined","dtInstance","then","destroy","err","refrestVisitsReports","next","isSearch","unsubscribe","exceldata","forEach","element","push","TicketDetails","TicketId","TicketType","Scheduled","Start","End","Duration","VisitStart","VisitEnd","VisitDuration","CustomerCompanyName","CustomerName","CustomerEmail","CustomerAddress","VisitEngineerName","exportAsExcelFile","provide","useClass","selector","templateUrl","styles","providers","TicketStatusComponentModule","imports","declarations","exports","ReportTicketComponent","customerlist","ReportTicket","Ticket","Type","Department","customerlisttemp","status","refrestTicketReports","ticketType","ReportEngineersComponent","ReportEngineer","refrestEngineerReports","datewise","ReportEngineerAttendanceComponent","modal","ordering","TODAY_DATE_IN_STRING","refrestEngineerAttendanceReports","tempImg","Object","open","modalpopup","size","dismissAll","ReportEngineerTimeSheetComponent","indx","isClick","datae","refrestEngineerwiseReports","EId","i","refrestEngineerwise2Reports","TicketStatusComponent","template","OverDueDays","isInteger","value","isFinite","Math","floor","isString","NgbTimeToStringAdapter","year","getUTCFullYear","month","getUTCMonth","day","getUTCDate","dateString","isValidDate","isNaN","valueOf","hour","getUTCHours","minute","getUTCMinutes","second","getUTCSeconds","time","ReportsComponent","NgbDateToStringAdapter","routes","path","component","children","ReportsModule","forChild"],"mappings":"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","file":"application-reports-reports-module-es5.js","sourcesContent":["import { Component, OnInit, OnDestroy, AfterViewInit, ViewChild } from '@angular/core';\nimport { NgbDateAdapter, NgbTimeAdapter } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbDateToStringAdapter } from 'src/app/ngb-date-to-string-adapter';\nimport { NgbTimeToStringAdapter } from 'src/app/ngb-time-to-string-adapter';\nimport { DownloadService } from 'src/app/services/downloads.service';\nimport { EngineerService } from 'src/app/services/engineer.service';\nimport { ReportService } from 'src/app/services/report.service';\nimport { Subject } from 'rxjs/internal/Subject';\nimport { DataTableDirective } from 'angular-datatables';\nimport { ReportsFilter } from 'src/app/services/report.module';\nimport { Engineer } from 'src/app/services/engineer.module';\nimport { ToastrService } from 'ngx-toastr';\nimport { GenicProfileService } from 'src/app/services/genicprofile.service';\nimport { Router } from '@angular/router';\nimport { Login, AuthenticationService } from 'src/app/services';\nimport { Title } from '@angular/platform-browser';\n@Component({\n  selector: 'app-visits',\n  templateUrl: './visits.component.html',\n  styles: [],\n  providers: [\n    { provide: NgbDateAdapter, useClass: NgbDateToStringAdapter },\n    { provide: NgbTimeAdapter, useClass: NgbTimeToStringAdapter }\n],\n})\nexport class VisitsComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n\n  date = new Date();\n  firstDay = new Date(this.date.getFullYear(), this.date.getMonth(), 1);\n  firstdate = this.firstDay.getFullYear().toString().padStart(4, '0') + '-' +\n             (this.firstDay.getMonth() + 1).toString().padStart(2, '0') + '-' +\n             this.firstDay.getDate().toString().padStart(2, '0');\n\n  lastDay = new Date(this.date.getFullYear(), this.date.getMonth() + 1 , 0);\n  lastdate = this.lastDay.getFullYear().toString().padStart(4, '0') + '-' +\n            (this.lastDay.getMonth() + 1).toString().padStart(2, '0') + '-' +\n            this.lastDay.getDate().toString().padStart(2, '0');\n  currentUser: Login;\n  data: any;\n  ticketlist: any; ticketlisttemp: any;\n  constructor(\n    public service: ReportService,\n    public titleService: Title,\n    private downloadService: DownloadService,\n    public engineerservice: EngineerService,\n    public genicprofileservice: GenicProfileService,\n    public loginservice: AuthenticationService,\n    private router: Router,\n    private toastr: ToastrService\n  ) {\n    this.loginservice.currentUser.subscribe(x => this.currentUser = x);\n    this.data = [];\n    this.ticketlist = [];\n    this.ticketlisttemp = [];\n   }\n\n  ngOnInit() {\n    if (!this.currentUser.Permissions.ReportVisit) { this.router.navigate(['/dashboard']); }\n    this.titleService.setTitle('Report Visits | Genic Solution');\n    this.genicprofileservice.TicketFilter.IsReady = false;\n    this.genicprofileservice.TicketFilter.IsReadyQuote = false;\n    this.genicprofileservice.TicketFilter.IsReadyInvoice = false;\n    this.dtOptions = { pagingType: 'full_numbers', paging: true, lengthMenu: [ 5, 10, 25, 50, 75, 100 ] };\n    this.engineerservice.getEngineerListSync(this.currentUser.Token).subscribe( res => {\n        if (res) { const response = res as any;\n                   if (response.Message === 'success') {\n                    this.engineerservice.Engineerlist = response.result as Engineer[];\n                    }\n                   if (response.Message === 'failure') {\n                    this.toastr.warning('warning', response.MessageDescription);\n                    }\n        }}, error =>  console.log(error));\n    this.service.ReportsFilter = new ReportsFilter();\n    this.service.ReportsFilter.StartDate = this.firstdate;\n    this.service.ReportsFilter.EndDate = this.lastdate;\n    this.service.ReportsFilter.Status = 'ALL';\n    this.service.ReportsFilter.Engineer = '00000000-0000-0000-0000-000000000000';\n    this.service.ReportsFilter.Id = '00000000-0000-0000-0000-000000000000';\n\n    const cursDate = this.service.ReportsFilter.StartDate;\n    const cureDate = this.service.ReportsFilter.EndDate;\n    const sDate = cursDate.split('T')[0].replace(/-/g, '');\n    const eDate = cureDate.split('T')[0].replace(/-/g, '');\n    this.loaddata(sDate, eDate, this.service.ReportsFilter.Status, this.service.ReportsFilter.Engineer, this.service.ReportsFilter.Id);\n    setTimeout(() => {\n      this.ticketlisttemp = this.ticketlist;\n    }, 1000);\n  }\n  ngAfterViewInit() {\n  }\n  loaddata(sdate: string, edate: string, type: string, eid: string, tid: string) {\n    if (this.dtElement !==  undefined && this.dtElement.dtInstance !== undefined) {\n      this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n        dtInstance.destroy();\n      }).catch(err => console.error(err));\n    }\n    this.service.refrestVisitsReports(this.currentUser.Token, sdate, edate, type, eid, tid).subscribe( res => {\n      if (res) { const response = res as any;\n                 if (response.Message === 'success') {\n                  this.data = response.result;\n                  this.ticketlist = response.ticketlist;\n                  this.dtTrigger.next();\n                  }\n                 if (response.Message === 'failure') {\n                    this.toastr.warning('warning', response.MessageDescription);\n                  }\n    }}, error =>  console.log(error));\n  }\n  refreshVisitsList(isSearch: boolean) {\n    if (isSearch) {\n      if (this.service.ReportsFilter.StartDate === '00000000') { this.toastr.warning('Please select From date'); return false; }\n      if (this.service.ReportsFilter.EndDate === '00000000') { this.toastr.warning('Please select to date'); return false; }\n      const cursDate = this.service.ReportsFilter.StartDate;\n      const cureDate = this.service.ReportsFilter.EndDate;\n      const sDate = cursDate.split('T')[0].replace(/-/g, '');\n      const eDate = cureDate.split('T')[0].replace(/-/g, '');\n      this.loaddata(sDate, eDate, this.service.ReportsFilter.Status, this.service.ReportsFilter.Engineer, this.service.ReportsFilter.Id);\n    } else {\n      this.service.ReportsFilter = new ReportsFilter();\n      this.service.ReportsFilter.StartDate = this.firstdate;\n      this.service.ReportsFilter.EndDate = this.lastdate;\n      this.service.ReportsFilter.Status = 'ALL';\n      this.service.ReportsFilter.Engineer = '00000000-0000-0000-0000-000000000000';\n      this.service.ReportsFilter.Id = '00000000-0000-0000-0000-000000000000';\n\n      const sDate = this.firstdate.split('T')[0].replace(/-/g, '');\n      const eDate = this.lastdate.split('T')[0].replace(/-/g, '');\n      setTimeout(() => {\n        this.loaddata(sDate, eDate, this.service.ReportsFilter.Status, this.service.ReportsFilter.Engineer, this.service.ReportsFilter.Id);\n      }, 100);\n    }\n}\n  ngOnDestroy() {\n    this.dtTrigger.unsubscribe();\n  }\nexportAsXLSX(): void {\n  let exceldata = [];\n  this.data.forEach(element => {\n    exceldata.push ({ \n      'TicketId': element.TicketDetails.TicketId,\n      'Status': element.TicketDetails.Status,\n      'Ticket Type': element.TicketDetails.TicketType,\n      'Scheduled Start': element.Scheduled.Start,\n      'Scheduled End': element.Scheduled.End,\n      'Scheduled Duration': element.Scheduled.Duration,\n      'Visit Start': element.VisitStart,\n      'Visit End': element.VisitEnd,\n      'Visit Duration': element.VisitDuration,\n      'Company': element.TicketDetails.CustomerCompanyName,\n      'Company name': element.TicketDetails.CustomerName,\n      'Company Email': element.TicketDetails.CustomerEmail,\n      'Company Address': element.TicketDetails.CustomerAddress,\n      'Engineers': element.VisitEngineerName,\n    })\n    });\n    this.downloadService.exportAsExcelFile(exceldata, 'report_visits');\n  }\n}\n","<div class=\"kt-content kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n    <div class=\"kt-subheader kt-grid__item\" id=\"kt_subheader\">\n        <div class=\"kt-container kt-container--fluid \">\n            <div class=\"kt-subheader__main\">\n                <h3 class=\"kt-subheader__title\">\n                    <a href=\"javascript:;\" routerLink=\"/dashboard\">\n                        Dashboard\n                    </a>\n                </h3>\n                <span class=\"kt-subheader__separator kt-hidden\"></span>\n                    <div class=\"kt-subheader__breadcrumbs\">\n                      <i class=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>\n                      <span class=\"kt-subheader__breadcrumbs-separator\"></span> \n                       Reports <span class=\"kt-subheader__breadcrumbs-separator\"></span> \n                </div>\n                <span class=\"kt-subheader__separator kt-hidden\"></span>\n                    <div class=\"kt-subheader__breadcrumbs\">\n                      <i class=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>\n                      <span class=\"kt-subheader__breadcrumbs-separator\"></span> \n                     Visits\n                    </div>\n            </div>\n\n        </div>\n    </div>\n    <div class=\"customer-list-main-section\">\n\n        <div class=\"kt-widget17\">\n            <div class=\"kt-widget17__visual kt-widget17__visual--chart kt-portlet-fit--top kt-portlet-fit--sides\"\n                style=\"background-color: #fd397a\">\n\n            </div>\n            <div class=\"kt-widget17__stats\">\n                <div class=\"kt-section kt-drop-section\">                    \n                    <div class=\"kt-portlet__body customer-listing-datatable\">\n                        <div *ngIf=\"!data\" class=\"row\">\n                            <div class=\"col-sm-4 col-md-4 col-lg-4\"></div>\n                            <div class=\"col-sm-4 col-md-4 col-lg-4\">\n                                <div class=\"progress\">\n                                    <div class=\"progress-bar progress-bar-striped progress-bar-animated\" role=\"progressbar\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 100%\">\n                                        Loading...</div>\n                                  </div>\n                            </div>\n                            <div class=\"col-sm-4 col-md-4 col-lg-4\"></div>\n                        </div>\n                        <div *ngIf=\"data\" class=\"panel panel-primary list-panel\" id=\"list-panel\">\n                            <div class=\"panel-heading list-panel-heading\">\n                                <h1 class=\"panel-title list-panel-title\"><i class=\"fa fa-list\"></i> Visit List</h1>\n                                <div class=\"btnexport\" >\n                                    <a href=\"javascript:void(0)\" (click)=\"exportAsXLSX()\"\n                                        class=\"btnexportToExcel\">Export to Excel</a>\n                                </div>\n                            </div>\n                            <div class=\"row filterstrong\">\n                                <div class=\"col-md-3\">\n                                    <div class=\"row\">\n                                        <div class=\"col-md-6 padd-right-0\">\n                                            <div class=\"input-group\">\n                                                <input readonly placeholder=\"yyyy-mm-dd (From Date)\"\n                                                    class=\"form-control\"\n                                                    name=\"service.ReportsFilter.StartDate\" #service.ReportsFilter.StartDate=\"ngModel\"\n                                                    [(ngModel)]=\"service.ReportsFilter.StartDate\"\n                                                    ngbDatepicker\n                                                    (click)=\"datePickerfromdate.toggle()\"\n                                                    #datePickerfromdate=\"ngbDatepicker\"\n                                                    >\n                                            </div>\n                                        </div>\n                                        <div class=\"col-md-6 padd-right-0\">\n                                            <div class=\"input-group\">\n                                                <input readonly placeholder=\"yyyy-mm-dd  (To Date)\"\n                                                    class=\"form-control\"\n                                                    name=\"service.ReportsFilter.EndDate\" #service.ReportsFilter.EndDate=\"ngModel\"\n                                                    [(ngModel)]=\"service.ReportsFilter.EndDate\"\n                                                    ngbDatepicker\n                                                    (click)=\"datePickertodate.toggle()\"\n                                                    #datePickertodate=\"ngbDatepicker\"\n                                                    >\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-md-2 padd-right-0\">\n                                        <div class=\"input-group\">\n                                            <select   name=\"service.ReportsFilter.Status\" #service.ReportsFilter.Status=\"ngModel\"\n                                            [(ngModel)]=\"service.ReportsFilter.Status\" class=\"form-control\" >\n                                                    <option value=\"ALL\"> ALL </option>\n                                                    <option value=\"HOLD\">HOLD</option>\n                                                    <option value=\"CLOSED\">CLOSED</option>\n                                              </select>\n                                    </div>\n                                </div>\n                                <div class=\"col-md-2 padd-right-0\">\n                                        <div class=\"input-group\">\n                                        <select  name=\"service.ReportsFilter.Engineer\" #service.ReportsFilter.Engineer=\"ngModel\"\n                                        [(ngModel)]=\"service.ReportsFilter.Engineer\" class=\"form-control\">                                            \n                                                <option value=\"00000000-0000-0000-0000-000000000000\"> ALL {{this.currentUser.Engineer}} </option>\n                                                <option *ngFor=\"let x of engineerservice.Engineerlist\" value=\"{{x.Id}}\"> {{x.EngineerName}} </option>\n                                                </select>\n                                    </div>\n                                </div>\n                                <div class=\"col-md-2 padd-right-0\">\n                                    <div class=\"input-group\">\n                                    <select  name=\"service.ReportsFilter.Id\" #service.ReportsFilter.Id=\"ngModel\"\n                                    [(ngModel)]=\"service.ReportsFilter.Id\" class=\"form-control\">                                            \n                                            <option value=\"00000000-0000-0000-0000-000000000000\"> ALL {{this.currentUser.Ticket}} </option>\n                                            <option *ngFor=\"let x of ticketlisttemp\" value=\"{{x.Id}}\"> {{x.TicketId}} </option>\n                                            </select>\n                                </div>\n                            </div>\n                                <div class=\"col-md-1\">                                                                                   \n                                    <div class=\"input-group\">\n                                    <a href=\"javascript:;\" (click)=\"refreshVisitsList(true)\" class=\"btnprimary\" >Search</a>\n                                    </div>\n                                </div>\n                                    <div class=\"col-md-2\" style=\"right: 0;\">\n                                        <div class=\"input-group\">\n                                        <a href=\"javascript:;\" class=\"btnexportToExcel\" (click)=\"refreshVisitsList(false)\" >Clear Filter</a>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"panel-body\">\n                                <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\"\n                                    class=\"table table-striped- table-bordered table-hover table-checkable\"\n                                    >\n                                    <thead>\n                                        <tr>\n                                            <th>#</th>\n                                            <th>{{this.currentUser.Ticket}} Details</th>\n                                            <th>Scheduled Details</th>\n                                            <th>Visit Details</th>\n                                            <th>Company Details</th>\n                                            <th>{{this.currentUser.Engineer}} Name</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr *ngFor=\"let x of data; let i=index; async\"\n                                            class=\"ticket-list-view-info\">\n                                            <td style=\"width: 2%;\">{{i+1}}</td>\n                                            <td style=\"width: 22%;\">\n                                                <strong>{{this.currentUser.Ticket}} No: </strong> {{ x.TicketDetails.TicketId }} <br>\n                                                <strong>Status: </strong><generic-ticket-status [(Status)]=\"x.TicketDetails.Status\"></generic-ticket-status> <br>\n                                                <strong>{{this.currentUser.Ticket}} Type: </strong> {{ x.TicketDetails.TicketType }}\n                                            </td>\n                                            <td style=\"width: 18%;\">\n                                                <span>  <strong> Start: </strong>{{ x.Scheduled.Start | date:'MMM d, y HH:mm':'+0000' }}<br>\n                                                    <strong> End: </strong>{{ x.Scheduled.End | date:'MMM d, y HH:mm':'+0000' }}<br>\n                                                    <strong> Duration: </strong>{{ x.Scheduled.Duration }}\n                                                </span>\n                                            </td>\n                                            <td style=\"width: 18%;\">\n                                                <span> <strong> Start: </strong>{{ x.VisitStart | date:'MMM d, y HH:mm':'+0000' }} <br>\n                                                    <strong> End: </strong>{{ x.VisitEnd | date:'MMM d, y HH:mm':'+0000' }}<br>\n                                                    <strong> Duration: </strong>{{ x.VisitDuration.substring(0, 8) }}\n                                                </span>\n                                            </td>\n                                            <td style=\"width: 30%;\">\n                                                <strong> Company: </strong>{{ x.TicketDetails.CustomerCompanyName }}<br>\n                                                <strong> Name: </strong>{{ x.TicketDetails.CustomerName }}<br>\n                                                <strong> Email: </strong>{{ x.TicketDetails.CustomerEmail }}<br>\n                                                <strong> Address: </strong>{{ x.TicketDetails.CustomerAddress }}\n                                            </td>\n                                            <td style=\"width: 10%;\">{{ x.VisitEngineerName }} </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TicketStatusComponent } from './TicketStatusComponent.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule],\r\n  declarations: [TicketStatusComponent],\r\n  exports: [TicketStatusComponent]\r\n})\r\nexport class TicketStatusComponentModule {}\r\n","import { Component, OnInit, AfterViewInit, OnDestroy, ViewChild } from '@angular/core';\nimport { DownloadService } from 'src/app/services/downloads.service';\nimport { ReportService } from 'src/app/services/report.service';\nimport { Subject } from 'rxjs/internal/Subject';\nimport { Login, AuthenticationService } from 'src/app/services';\nimport { ReportsFilter } from 'src/app/services/report.module';\nimport { DataTableDirective } from 'angular-datatables';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgbDateAdapter, NgbTimeAdapter } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbDateToStringAdapter } from 'src/app/ngb-date-to-string-adapter';\nimport { NgbTimeToStringAdapter } from 'src/app/ngb-time-to-string-adapter';\nimport { GenicProfileService } from 'src/app/services/genicprofile.service';\nimport { Router } from '@angular/router';\nimport { Title } from '@angular/platform-browser';\n@Component({\n  templateUrl: './report-ticket.component.html',\n  styles: [],\n  providers: [\n    { provide: NgbDateAdapter, useClass: NgbDateToStringAdapter },\n    { provide: NgbTimeAdapter, useClass: NgbTimeToStringAdapter }\n],\n})\nexport class ReportTicketComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  subTotal: number;\n  currentUser: Login;\n  date = new Date();\n  firstDay = new Date(this.date.getFullYear(), this.date.getMonth(), 1);\n  firstdate = this.firstDay.getFullYear().toString().padStart(4, '0') + '-' +\n             (this.firstDay.getMonth() + 1).toString().padStart(2, '0') + '-' +\n             this.firstDay.getDate().toString().padStart(2, '0');\n\n  lastDay = new Date(this.date.getFullYear(), this.date.getMonth() + 1 , 0);\n  lastdate = this.lastDay.getFullYear().toString().padStart(4, '0') + '-' +\n            (this.lastDay.getMonth() + 1).toString().padStart(2, '0') + '-' +\n            this.lastDay.getDate().toString().padStart(2, '0');\n  data: any;\n  customerlist: any; customerlisttemp: any;\n  constructor(public service: ReportService,\n    public titleService: Title,\n              private downloadService: DownloadService,\n              public genicprofileservice: GenicProfileService,\n              private toastr: ToastrService,\n              private router: Router,\n              public loginservice: AuthenticationService) {\n                this.loginservice.currentUser.subscribe(x => this.currentUser = x);\n                this.data = [];\n                this.customerlist = [];\n              }\n\n  ngOnInit() {\n    if (!this.currentUser.Permissions.ReportTicket) { this.router.navigate(['/dashboard']); }\n    this.titleService.setTitle('Report ' + this.currentUser.Ticket + ' | Genic Solution');\n    this.genicprofileservice.TicketFilter.IsReady = false;\n    this.genicprofileservice.TicketFilter.IsReadyQuote = false;\n    this.genicprofileservice.TicketFilter.IsReadyInvoice = false;\n    this.dtOptions = { pagingType: 'full_numbers', paging: true, lengthMenu: [ 5, 10, 25, 50, 75, 100 ] };\n\n    this.service.ReportsFilter = new ReportsFilter();\n    this.service.ReportsFilter.StartDate = this.firstdate;\n    this.service.ReportsFilter.EndDate = this.lastdate;\n    this.service.ReportsFilter.Status = 'ALL';\n    this.service.ReportsFilter.Engineer = '00000000-0000-0000-0000-000000000000';\n    this.service.ReportsFilter.Type = 'One-Off Ticket';\n    this.service.ReportsFilter.Department = 0;\n\n    const cursDate = this.service.ReportsFilter.StartDate;\n    const cureDate = this.service.ReportsFilter.EndDate;\n    const sDate = cursDate.split('T')[0].replace(/-/g, '');\n    const eDate = cureDate.split('T')[0].replace(/-/g, '');\n    this.loaddata(sDate, eDate, 'false', this.service.ReportsFilter.Engineer, this.service.ReportsFilter.Status);\n    setTimeout(() => {\n      this.customerlisttemp = this.customerlist;\n    }, 1000);\n  }\n\n  loaddata(sdate: string, edate: string, type: string, eid: string, status) {\n    if (this.dtElement !==  undefined && this.dtElement.dtInstance !== undefined) {\n      this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n        dtInstance.destroy();\n      }).catch(err => console.error(err));\n    }\n    this.service.refrestTicketReports(this.currentUser.Token, sdate, edate, type, eid, status).subscribe( res => {\n      if (res) { const response = res as any;\n                 if (response.Message === 'success') {\n                    this.data = response.result;\n                    this.customerlist = response.customerlist;\n                    this.dtTrigger.next();\n                  }\n                 if (response.Message === 'failure') {\n                    this.toastr.warning('warning', response.MessageDescription);\n                  }\n    }}, error =>  console.log(error));\n  }\n  refreshVisitsList(isSearch: boolean) {\n    if (isSearch) {\n      if (this.service.ReportsFilter.StartDate === '00000000') { this.toastr.warning('Please select From date'); return false; }\n      if (this.service.ReportsFilter.EndDate === '00000000') { this.toastr.warning('Please select to date'); return false; }\n      const cursDate = this.service.ReportsFilter.StartDate;\n      const cureDate = this.service.ReportsFilter.EndDate;\n      const sDate = cursDate.split('T')[0].replace(/-/g, '');\n      const eDate = cureDate.split('T')[0].replace(/-/g, '');\n\n      let ticketType: boolean;\n      if (this.service.ReportsFilter.Type === 'One-Off Ticket') {\n        ticketType = false;\n      } else {\n        ticketType = true;\n      }\n      this.loaddata(sDate, eDate, ticketType.toString(), this.service.ReportsFilter.Engineer, this.service.ReportsFilter.Status);\n    } else {\n      this.service.ReportsFilter = new ReportsFilter();\n      this.service.ReportsFilter.StartDate = this.firstdate;\n      this.service.ReportsFilter.EndDate = this.lastdate;\n      this.service.ReportsFilter.Status = 'ALL';\n      this.service.ReportsFilter.Engineer = '00000000-0000-0000-0000-000000000000';\n      this.service.ReportsFilter.Type = 'One-Off Ticket';\n      this.service.ReportsFilter.Department = 0 ;\n      const sDate = this.firstdate.split('T')[0].replace(/-/g, '');\n      const eDate = this.lastdate.split('T')[0].replace(/-/g, '');\n      setTimeout(() => {\n        this.loaddata(sDate, eDate, isSearch.toString(), this.service.ReportsFilter.Engineer,\n          this.service.ReportsFilter.Status);\n      }, 100);\n    }\n}\n  ngAfterViewInit() {\n  }\n  ngOnDestroy() {\n    this.dtTrigger.unsubscribe();\n  }\n  exportAsXLSX(): void {\n   this.downloadService.exportAsExcelFile(this.data, 'report_' + this.currentUser.Ticket + '-oneoff');\n  }\n}\n","<div class=\"kt-content kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n    <div class=\"kt-subheader kt-grid__item\" id=\"kt_subheader\">\n        <div class=\"kt-container kt-container--fluid \">\n            <div class=\"kt-subheader__main\">\n                <h3 class=\"kt-subheader__title\">\n                    <a href=\"javascript:;\" routerLink=\"/dashboard\">\n                        Dashboard\n                    </a>\n                </h3>\n                <span class=\"kt-subheader__separator kt-hidden\"></span>\n                    <div class=\"kt-subheader__breadcrumbs\">\n                      <i class=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>\n                      <span class=\"kt-subheader__breadcrumbs-separator\"></span> \n                       Reports <span class=\"kt-subheader__breadcrumbs-separator\"></span> \n                </div>\n                <span class=\"kt-subheader__separator kt-hidden\"></span>\n                    <div class=\"kt-subheader__breadcrumbs\">\n                      <i class=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>\n                      <span class=\"kt-subheader__breadcrumbs-separator\"></span> \n                      {{this.currentUser.Ticket}}s\n                    </div>\n            </div>\n\n        </div>\n    </div>\n    <div class=\"customer-list-main-section\">\n\n        <div class=\"kt-widget17\">\n            <div class=\"kt-widget17__visual kt-widget17__visual--chart kt-portlet-fit--top kt-portlet-fit--sides\"\n                style=\"background-color: #fd397a\">\n\n            </div>\n            <div class=\"kt-widget17__stats\">\n\n                <div class=\"kt-section kt-drop-section\">\n                    <div class=\"kt-section__content\">\n                        <div class=\"row\">\n                            <div class=\"col-md-12 no-spacing\">\n                                <div class=\"\">\n                                    <div class=\"col\">\n                                        <div class=\"btn-group\">\n                                            <!-- <select class=\"form-control kt-selectpicker btn btn-label-success\"\n                                                data-style=\"btn-success\">\n                                                <option value=\"ALL\">All Tickets</option>\n                                                <option value=\"1\">Option 1</option>\n                                                <option value=\"2\">Option 1</option>\n                                            </select> -->\n                                        </div>\n                                    </div>\n                                </div>\n                                <div>\n                                    <!-- <div\n                                        class=\"kt-header__topbar-item kt-header__topbar-item--search dropdown bootm-filter\">\n                                        <div class=\"kt-header__topbar-wrapper\">\n                                            <div class=\"kt-input-icon kt-input-icon--right kt-subheader__search\">\n                                                <button (click)=\"exportAsXLSX()\"\n                                                    class=\"kt-selectpicker btn btn-label-success pull-right\"><i\n                                                        class=\"fa fa-file-excel btn-label-success\"></i> Export to\n                                                    excel</button>\n                                            </div>\n                                        </div>\n                                    </div> -->\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"kt-portlet__body customer-listing-datatable\">\n                        <div *ngIf=\"!data\" class=\"row\">\n                            <div class=\"col-sm-4 col-md-4 col-lg-4\"></div>\n                            <div class=\"col-sm-4 col-md-4 col-lg-4\">\n                                <div class=\"progress\">\n                                    <div class=\"progress-bar progress-bar-striped progress-bar-animated\" role=\"progressbar\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 100%\">\n                                        Loading...</div>\n                                  </div>\n                            </div>\n                            <div class=\"col-sm-4 col-md-4 col-lg-4\"></div>\n                        </div>\n                        <div *ngIf=\"data\" class=\"panel panel-primary list-panel\" id=\"list-panel\">\n                            <div class=\"panel-heading list-panel-heading\">\n                                <h1 class=\"panel-title list-panel-title\"><i class=\"fa fa-list\"></i> One-off-{{this.currentUser.Ticket}}s</h1>\n                                <div class=\"btnexport\">\n                                    <a href=\"javascript:void(0)\" (click)=\"exportAsXLSX()\" class=\"btnexportToExcel\">Export to Excel</a>\n                                </div>\n                            </div>\n                            <div class=\"row filterstrong\">\n                                <div class=\"col padd-right-0\">\n                                    <div class=\"input-group\">\n                                        <input readonly placeholder=\"yyyy-mm-dd (From Date)\"\n                                            class=\"form-control\"\n                                            name=\"service.ReportsFilter.StartDate\" #service.ReportsFilter.StartDate=\"ngModel\"\n                                            [(ngModel)]=\"service.ReportsFilter.StartDate\"\n                                            ngbDatepicker\n                                            (click)=\"datePickerfromdate.toggle()\"\n                                            #datePickerfromdate=\"ngbDatepicker\"\n                                            >\n                                    </div>\n                                </div>\n                                <div class=\"col padd-right-0\">\n                                    <div class=\"input-group\">\n                                        <input readonly placeholder=\"yyyy-mm-dd  (To Date)\"\n                                            class=\"form-control\"\n                                            name=\"service.ReportsFilter.EndDate\" #service.ReportsFilter.EndDate=\"ngModel\"\n                                            [(ngModel)]=\"service.ReportsFilter.EndDate\"\n                                            ngbDatepicker\n                                            (click)=\"datePickertodate.toggle()\"\n                                            #datePickertodate=\"ngbDatepicker\"\n                                            >\n                                    </div>\n                                </div>\n                                <div class=\"col padd-right-0\">\n                                        <div class=\"input-group\">\n                                            <select   name=\"service.ReportsFilter.Status\" #service.ReportsFilter.Status=\"ngModel\"\n                                            [(ngModel)]=\"service.ReportsFilter.Status\" class=\"form-control\" >\n                                                    <option value=\"ALL\"> ALL </option>\n                                                    <option value=\"UPCOMING\">UPCOMING</option>\n                                                    <option value=\"HOLD\">HOLD</option>\n                                                    <option value=\"INPROGRESS\">INPROGRESS</option>\n                                                    <option value=\"OVERDUE\">OVERDUE</option>\n                                                    <option value=\"CLOSED\">CLOSED</option>\n                                              </select>\n                                    </div>\n                                </div>\n                                <div class=\"col padd-right-0\">\n                                        <div class=\"input-group\">\n                                        <select  name=\"service.ReportsFilter.Engineer\" #service.ReportsFilter.Engineer=\"ngModel\"\n                                        [(ngModel)]=\"service.ReportsFilter.Engineer\" class=\"form-control\">                                            \n                                                <option value=\"00000000-0000-0000-0000-000000000000\"> ALL Customer </option>\n                                                <option *ngFor=\"let x of customerlisttemp\" value=\"{{x.Id}}\"> {{x.Name}} {{x.FirstName}} {{x.LastName}} </option>\n                                                </select>\n                                    </div>\n                                </div>\n                                <div class=\"col padd-right-0\">\n                                    <div class=\"input-group\">\n                                        <select   name=\"service.ReportsFilter.Type\" #service.ReportsFilter.Type=\"ngModel\"\n                                        [(ngModel)]=\"service.ReportsFilter.Type\" class=\"form-control\" >\n                                                <option value=\"One-Off Ticket\"> One-Off {{this.currentUser.Ticket}} </option>\n                                                <option value=\"Recurring Ticket\">Recurring {{this.currentUser.Ticket}}</option>                                              \n                                          </select>\n                                </div>\n                            </div>\n                            \n                            <div class=\"col\">                                                                                   \n                                <div class=\"input-group\">\n                                <a href=\"javascript:;\" (click)=\"refreshVisitsList(true)\" class=\"btnprimary\" >Search</a>&nbsp;&nbsp;\n                                \n                                    <a href=\"javascript:;\" class=\"btnexportToExcel\" (click)=\"refreshVisitsList(false)\" >Clear Filter</a>\n                                </div>\n                            </div>\n                                    \n                            </div>  \n                            <div class=\"panel-body\">\n                                \n                        <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped- table-bordered table-hover table-checkable\"\n                           >\n                            <thead>\n                                <tr>\n                                    <th>{{this.currentUser.Ticket}} Id</th>\n                                    <th>Created</th>\n                                    <th>Company Info</th>\n                                    <th>Title</th>\n                                    <th>Scheduled</th>\n                                    <th>Status</th>                                    \n                                    <th>{{this.currentUser.Engineer}}</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr *ngFor=\"let x of data; let i=index; async\"\n                                    class=\"ticket-list-view-info\">\n                                    <td>{{ x.TicketId }} </td>\n                                    <td>{{ x.Created | date }} </td>\n                                    <td><strong>{{ x.CustomerCompanyName }}</strong> <br /> {{ x.CustomerName }} </td>\n                                    <td>{{ x.Title }} </td>\n                                    <td>{{ x.AppointmentStart | date:'MMM d, y HH:mm a':'+0000'}} - {{ x.AppointmentEnd |  date:'HH:mm a':'+0000' }} </td>\n                                    <td>{{ x.Status }} </td>                                    \n                                    <td>{{ x.EngineerName }} </td>\n                                </tr>\n                            </tbody>                            \n                        </table>\n                    </div>\n                </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, AfterViewInit, OnDestroy, ViewChild } from '@angular/core';\nimport { ReportService } from 'src/app/services/report.service';\nimport { DownloadService } from 'src/app/services/downloads.service';\nimport { NgbDateAdapter, NgbTimeAdapter } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbDateToStringAdapter } from 'src/app/ngb-date-to-string-adapter';\nimport { NgbTimeToStringAdapter } from 'src/app/ngb-time-to-string-adapter';\nimport { Subject } from 'rxjs/internal/Subject';\nimport { Login, AuthenticationService } from 'src/app/services';\nimport { ToastrService } from 'ngx-toastr';\nimport { ReportsFilter } from 'src/app/services/report.module';\nimport { DataTableDirective } from 'angular-datatables';\nimport { GenicProfileService } from 'src/app/services/genicprofile.service';\nimport { Router } from '@angular/router';\nimport { Title } from '@angular/platform-browser';\n@Component({\n  selector: 'app-report-engineers',\n  templateUrl: './report-engineers.component.html',\n  styles: [],\n  providers: [\n    { provide: NgbDateAdapter, useClass: NgbDateToStringAdapter },\n    { provide: NgbTimeAdapter, useClass: NgbTimeToStringAdapter }\n],\n})\nexport class ReportEngineersComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  currentUser: Login;\n  data: any;\n  constructor(public service: ReportService,\n    public titleService: Title,\n              private downloadService: DownloadService,\n              public loginservice: AuthenticationService,\n              public genicprofileservice: GenicProfileService,\n              private router: Router,\n              private toastr: ToastrService) {\n                this.loginservice.currentUser.subscribe(x => this.currentUser = x);\n                this.data = [];\n              }\n  ngOnInit() {\n    if (!this.currentUser.Permissions.ReportEngineer) { this.router.navigate(['/dashboard']); }\n    this.titleService.setTitle('Report Engineer | Genic Solution');\n    this.genicprofileservice.TicketFilter.IsReady = false;\n    this.genicprofileservice.TicketFilter.IsReadyQuote = false;\n    this.genicprofileservice.TicketFilter.IsReadyInvoice = false;\n    this.dtOptions = { pagingType: 'full_numbers', paging: true, lengthMenu: [ 5, 10, 25, 50, 75, 100 ] };\n    this.service.ReportsFilter = new ReportsFilter();\n    this.service.ReportsFilter.Department = 0;\n    this.loaddata('00000000', '00000000', 'alldata');\n  }\n  loaddata(sdate: string, edate: string, type: string) {\n    if (this.dtElement !==  undefined && this.dtElement.dtInstance !== undefined) {\n      this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n        dtInstance.destroy();\n      }).catch(err => console.error(err));\n    }\n    this.service.refrestEngineerReports(this.currentUser.Token, sdate, edate, type).subscribe( res => {\n      if (res) { const response = res as any;\n                 if (response.Message === 'success') {\n                    this.data = response.result;\n                    this.dtTrigger.next();\n                  }\n                 if (response.Message === 'failure') {\n                    this.toastr.warning('warning', response.MessageDescription);\n                  }\n    }}, error =>  console.log(error));\n  }\n  ngAfterViewInit() {\n  }\n  ngOnDestroy() {\n    this.dtTrigger.unsubscribe();\n  }\n\n  refreshEngineerData(datewise: string) {\n    if (datewise === 'datewise') {\n      if (this.service.ReportsFilter.StartDate === undefined) { this.toastr.warning('Please select From date'); return false; }\n      if (this.service.ReportsFilter.EndDate === undefined) { this.toastr.warning('Please select to date'); return false; }\n      const cursDate = this.service.ReportsFilter.StartDate;\n      const cureDate = this.service.ReportsFilter.EndDate;\n      const sDate = cursDate.split('T')[0].replace(/-/g, '');\n      const eDate = cureDate.split('T')[0].replace(/-/g, '');\n      this.loaddata(sDate, eDate, datewise);\n    } else {\n      this.service.ReportsFilter = new ReportsFilter();\n      this.loaddata('00000000', '00000000', 'alldata');\n    }\n  }\n  exportAsXLSX(): void {\n    this.downloadService.exportAsExcelFile(this.data, 'report_' + this.currentUser.Engineer + 's');\n  }\n}\n","<div class=\"kt-content kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n    <div class=\"kt-subheader kt-grid__item\" id=\"kt_subheader\">\n        <div class=\"kt-container kt-container--fluid \">\n            <div class=\"kt-subheader__main\">\n                <h3 class=\"kt-subheader__title\">\n                    <a href=\"javascript:;\" routerLink=\"/dashboard\">\n                        Dashboard\n                    </a>\n                </h3>\n                <span class=\"kt-subheader__separator kt-hidden\"></span>\n                    <div class=\"kt-subheader__breadcrumbs\">\n                      <i class=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>\n                      <span class=\"kt-subheader__breadcrumbs-separator\"></span> \n                       Reports <span class=\"kt-subheader__breadcrumbs-separator\"></span> \n                </div>\n                <span class=\"kt-subheader__separator kt-hidden\"></span>\n                    <div class=\"kt-subheader__breadcrumbs\">\n                      <i class=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>\n                      <span class=\"kt-subheader__breadcrumbs-separator\"></span> \n                      {{this.currentUser.Engineer}}\n                    </div>\n            </div>\n\n        </div>\n    </div>\n    <div class=\"customer-list-main-section\">\n\n        <div class=\"kt-widget17\">\n            <div class=\"kt-widget17__visual kt-widget17__visual--chart kt-portlet-fit--top kt-portlet-fit--sides\"\n                style=\"background-color: #fd397a\">\n\n            </div>\n            <div class=\"kt-widget17__stats\">\n\n                <div class=\"kt-section kt-drop-section\">\n                    <div class=\"kt-section__content\">                            \n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-12\">\n                            <div class=\"kt-portlet__body customer-listing-datatable\">\n                                <div *ngIf=\"!data\" class=\"row\">\n                                    <div class=\"col-sm-4 col-md-4 col-lg-4\"></div>\n                                    <div class=\"col-sm-4 col-md-4 col-lg-4\">\n                                        <div class=\"progress\">\n                                            <div class=\"progress-bar progress-bar-striped progress-bar-animated\" role=\"progressbar\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 100%\">\n                                                Loading...</div>\n                                          </div>\n                                    </div>\n                                    <div class=\"col-sm-4 col-md-4 col-lg-4\"></div>\n                                </div>\n                               \n                                <div *ngIf=\"data\" class=\"panel panel-primary list-panel\" id=\"list-panel\">\n                                    <div class=\"panel-heading list-panel-heading\">\n                                        <h1 class=\"panel-title list-panel-title\"><i class=\"fa fa-list\"></i> {{this.currentUser.Engineer}}'s Report List</h1>\n                                        <div class=\"btnexport\">\n                                            <a href=\"javascript:void(0)\" (click)=\"exportAsXLSX()\" class=\"btnexportToExcel\">Export to Excel</a>\n                                        </div>\n                                    </div>\n                                    <div class=\"row filterstrong\">\n                                        <div class=\"col-md-2\">\n                                            <div class=\"input-group\">\n                                                <input readonly placeholder=\"yyyy-mm-dd\"\n                                                    class=\"form-control\"\n                                                    name=\"service.ReportsFilter.StartDate\" #service.ReportsFilter.StartDate=\"ngModel\"\n                                                    [(ngModel)]=\"service.ReportsFilter.StartDate\"\n                                                    ngbDatepicker\n                                                    (click)=\"datePickerfromdate.toggle()\"\n                                                    #datePickerfromdate=\"ngbDatepicker\"\n                                                    >\n                                            </div>\n                                        </div>\n                                        <div class=\"col-md-2\">\n                                            <div class=\"input-group\">\n                                                <input readonly placeholder=\"yyyy-mm-dd\"\n                                                    class=\"form-control\"\n                                                    name=\"service.ReportsFilter.EndDate\" #service.ReportsFilter.EndDate=\"ngModel\"\n                                                    [(ngModel)]=\"service.ReportsFilter.EndDate\"\n                                                    ngbDatepicker\n                                                    (click)=\"datePickertodate.toggle()\"\n                                                    #datePickertodate=\"ngbDatepicker\"\n                                                    >\n                                            </div>\n                                        </div>\n                                        \n                                        <div class=\"col-md-1\">                                                                                   \n                                        <div class=\"input-group\">\n                                        <a href=\"javascript:;\" (click)=\"refreshEngineerData('datewise')\" class=\"btnprimary\" >Search</a>\n                                        </div>\n                                    </div>\n                                        <div class=\"col-md-2\" style=\"right: 0;\">\n                                            <div class=\"input-group\">\n                                            <a href=\"javascript:;\" class=\"btnexportToExcel\" (click)=\"refreshEngineerData('alldata')\" >Clear Filter</a>\n                                        </div>\n                                    </div>\n                                    </div>\n                                    <div class=\"panel-body\">\n                                       \n                                        <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\"\n                                        class=\"table table-striped- table-bordered table-hover table-checkable\"\n                                        >\n                                        <thead>\n                                            <tr>\n                                                <th style=\"width: 2%;\">#</th>\n                                                <th >{{this.currentUser.Engineer}} Details</th>\n                                                <th >{{this.currentUser.Ticket}} Summary</th>\n                                                <th >Time Summary</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            <tr *ngFor=\"let x of data; let i=index; async\"\n                                                class=\"ticket-list-view-info\">\n                                                <td>{{i+1}}</td>\n                                                <td>\n                                                    <strong>{{this.currentUser.Engineer}} Id: </strong>   {{ x.EngineerId }}<br>\n                                                    <strong>Name: </strong>   {{ x.EngineerName }}\n                                                </td>\n                                                <td>\n                                                    <strong>Alloted: </strong> {{ x.TotalAlloted }} {{this.currentUser.Ticket}}s<br>\n                                                    <strong>Closed: </strong> {{ x.TotalCompleted }} {{this.currentUser.Ticket}}s<br>\n                                                </td>\n                                                <td>\n                                                    <strong>Total Time: </strong>  {{ x.TotalTimeTaken }} Minutes <br>\n                                                    <strong>Average Time: </strong>  {{ x.AverageTimeTakenTicket }} Minutes\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                            </div>\n                        </div>\n                            </div>\n                        </div>\n                    </div>\n                    \n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, OnDestroy, ViewChild, TemplateRef } from '@angular/core';\nimport { ReportService } from 'src/app/services/report.service';\nimport { DownloadService } from 'src/app/services/downloads.service';\nimport { NgbDateAdapter, NgbModal, NgbTimeAdapter } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbDateToStringAdapter } from 'src/app/ngb-date-to-string-adapter';\nimport { NgbTimeToStringAdapter } from 'src/app/ngb-time-to-string-adapter';\nimport { Subject } from 'rxjs/internal/Subject';\nimport { Login, AuthenticationService } from 'src/app/services';\nimport { ToastrService } from 'ngx-toastr';\nimport { ReportsFilter } from 'src/app/services/report.module';\nimport { DataTableDirective } from 'angular-datatables';\nimport { GenicProfileService } from 'src/app/services/genicprofile.service';\nimport { Router } from '@angular/router';\nimport { EngineerService } from 'src/app/services/engineer.service';\nimport { Engineer } from 'src/app/services/engineer.module';\n@Component({\n  selector: 'app-report-engineer-attendance',\n  templateUrl: './report-engineer-attendance.component.html',\n  providers: [\n    { provide: NgbDateAdapter, useClass: NgbDateToStringAdapter },\n    { provide: NgbTimeAdapter, useClass: NgbTimeToStringAdapter }\n],\n})\nexport class ReportEngineerAttendanceComponent implements OnInit, OnDestroy {\n  @ViewChild('modalpopup', { static: true }) modalpopup: TemplateRef<any>;\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  currentUser: Login;\n  data: any;\n  tempImg: any;\n  constructor(public service: ReportService,\n              public engineerservice: EngineerService,\n              private downloadService: DownloadService,\n              public loginservice: AuthenticationService,\n              public genicprofileservice: GenicProfileService,\n              private router: Router,\n              private modal: NgbModal,\n              private toastr: ToastrService) {\n                this.loginservice.currentUser.subscribe(x => this.currentUser = x);;\n                this.data = [];\n              }\n  ngOnInit() {\n    if (!this.currentUser.Permissions.ReportEngineer) { this.router.navigate(['/dashboard']); }\n    this.genicprofileservice.TicketFilter.IsReady = false;\n    this.genicprofileservice.TicketFilter.IsReadyQuote = false;\n    this.genicprofileservice.TicketFilter.IsReadyInvoice = false;\n    this.dtOptions = { pagingType: 'full_numbers', paging: true, ordering: false, lengthMenu: [ 5, 10, 25, 50, 75, 100 ] };\n    this.engineerservice.getEngineerListSync(this.currentUser.Token).subscribe( res => {\n      if (res) { const response = res as any;\n                 if (response.Message === 'success') {\n                  this.engineerservice.Engineerlist = response.result as Engineer[];\n                  }\n      }}, error =>  console.log(error));\n    this.service.ReportsFilter = new ReportsFilter();\n    this.service.ReportsFilter.Department = 0;\n    this.service.ReportsFilter.Engineer = '00000000-0000-0000-0000-000000000000';\n    this.service.ReportsFilter.StartDate = this.genicprofileservice.TODAY_DATE_IN_STRING;\n    this.service.ReportsFilter.EndDate = this.genicprofileservice.TODAY_DATE_IN_STRING;\n  }\n  loaddata(sdate: string, edate: string) {\n    if (this.dtElement !==  undefined && this.dtElement.dtInstance !== undefined) {\n      this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n        dtInstance.destroy();\n      }).catch(err => console.error(err));\n    }\n    this.service.refrestEngineerAttendanceReports(this.currentUser.Token, sdate, edate,this.service.ReportsFilter.Engineer).subscribe( res => {\n      if (res) { const response = res as any;\n                 if (response.Message === 'success') {\n                    this.data = response.result;\n                    this.dtTrigger.next();\n                  }\n                 if (response.Message === 'failure') {\n                    this.toastr.warning('warning', response.MessageDescription);\n                  }\n    }}, error =>  console.log(error));\n  }\n  ngOnDestroy() {\n    this.dtTrigger.unsubscribe();\n  }\n  refreshEngineerData() {\n    if (this.service.ReportsFilter.StartDate === undefined) { this.toastr.warning('Please select From date'); return false; }\n    if (this.service.ReportsFilter.EndDate === undefined) { this.toastr.warning('Please select to date'); return false; }\n    const cursDate = this.service.ReportsFilter.StartDate;\n    const cureDate = this.service.ReportsFilter.EndDate;\n    const sDate = cursDate.split('T')[0].replace(/-/g, '');\n    const eDate = cureDate.split('T')[0].replace(/-/g, '');\n    this.loaddata(sDate, eDate);\n  }\n  openimg(x: any) {\n    this.tempImg = new Object();\n    this.tempImg = x;\n    this.modal.open(this.modalpopup, { size: 'xl' });\n  }\n  closeimg() {\n    this.modal.dismissAll();\n  }\n  exportAsXLSX(): void {\n    this.downloadService.exportAsExcelFile(this.data, 'report_' + this.currentUser.Engineer + 's');\n  }\n}\n","<div class=\"kt-content kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n    <div class=\"kt-subheader kt-grid__item\" id=\"kt_subheader\">\n        <div class=\"kt-container kt-container--fluid \">\n            <div class=\"kt-subheader__main\">\n                <h3 class=\"kt-subheader__title\">\n                    <a href=\"javascript:;\" routerLink=\"/dashboard\">\n                        Dashboard\n                    </a>\n                </h3>\n                <span class=\"kt-subheader__separator kt-hidden\"></span>\n                <div class=\"kt-subheader__breadcrumbs\">\n                    <i class=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>\n                    <span class=\"kt-subheader__breadcrumbs-separator\"></span>\n                    Reports <span class=\"kt-subheader__breadcrumbs-separator\"></span>\n                </div>\n                <span class=\"kt-subheader__separator kt-hidden\"></span>\n                <div class=\"kt-subheader__breadcrumbs\">\n                    <i class=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>\n                    <span class=\"kt-subheader__breadcrumbs-separator\"></span>\n                    {{this.currentUser.Engineer}} Attendance\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"customer-list-main-section\">\n\n        <div class=\"kt-widget17\">\n            <div class=\"kt-widget17__visual kt-widget17__visual--chart kt-portlet-fit--top kt-portlet-fit--sides\"\n                style=\"background-color: #fd397a\">\n            </div>\n            <div class=\"kt-widget17__stats\">\n                <div class=\"kt-section kt-drop-section\">\n                    <div class=\"kt-section__content\">\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-12\">\n                            <div class=\"kt-portlet__body customer-listing-datatable\">\n                                <div *ngIf=\"!data\" class=\"row\">\n                                    <div class=\"col-sm-4 col-md-4 col-lg-4\"></div>\n                                    <div class=\"col-sm-4 col-md-4 col-lg-4\">\n                                        <div class=\"progress\">\n                                            <div class=\"progress-bar progress-bar-striped progress-bar-animated\"\n                                                role=\"progressbar\" aria-valuenow=\"100\" aria-valuemin=\"0\"\n                                                aria-valuemax=\"100\" style=\"width: 100%\">\n                                                Loading...</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-sm-4 col-md-4 col-lg-4\"></div>\n                                </div>\n                                <div *ngIf=\"data\" class=\"panel panel-primary list-panel\" id=\"list-panel\">\n                                    <div class=\"panel-heading list-panel-heading\">\n                                        <h1 class=\"panel-title list-panel-title\"><i class=\"fa fa-list\"></i> {{this.currentUser.Engineer}}\n                                            Attendance Report</h1>\n                                        <div class=\"btnexport\">\n                                            <a href=\"javascript:void(0)\" (click)=\"exportAsXLSX()\"\n                                                class=\"btnexportToExcel\">Export to Excel</a>\n                                        </div>\n                                    </div>\n                                    <div class=\"row filterstrong\">\n                                        <div class=\"col-md-2\">\n                                            <div class=\"input-group\">\n                                                <input readonly placeholder=\"yyyy-mm-dd\" class=\"form-control\"\n                                                    name=\"service.ReportsFilter.StartDate\"\n                                                    #service.ReportsFilter.StartDate=\"ngModel\"\n                                                    [(ngModel)]=\"service.ReportsFilter.StartDate\" ngbDatepicker\n                                                    (click)=\"datePickerfromdate.toggle()\"\n                                                    #datePickerfromdate=\"ngbDatepicker\">\n                                            </div>\n                                        </div>\n                                        <div class=\"col-md-2\">\n                                            <div class=\"input-group\">\n                                                <input readonly placeholder=\"yyyy-mm-dd\" class=\"form-control\"\n                                                    name=\"service.ReportsFilter.EndDate\"\n                                                    #service.ReportsFilter.EndDate=\"ngModel\"\n                                                    [(ngModel)]=\"service.ReportsFilter.EndDate\" ngbDatepicker\n                                                    (click)=\"datePickertodate.toggle()\"\n                                                    #datePickertodate=\"ngbDatepicker\">\n                                            </div>\n                                        </div>\n                                        <div class=\"col-md-2 padd-right-0\">\n                                            <div class=\"input-group\">\n                                            <select  name=\"service.ReportsFilter.Engineer\" #service.ReportsFilter.Engineer=\"ngModel\"\n                                            [(ngModel)]=\"service.ReportsFilter.Engineer\" class=\"form-control\">                                            \n                                                    <option value=\"00000000-0000-0000-0000-000000000000\"> ALL {{this.currentUser.Engineer}} </option>\n                                                    <option *ngFor=\"let x of engineerservice.Engineerlist\" value=\"{{x.Id}}\"> {{x.EngineerName}} </option>\n                                                    </select>\n                                        </div>\n                                    </div>\n                                        <div class=\"col-md-1\">\n                                            <div class=\"input-group\">\n                                                <a href=\"javascript:;\" (click)=\"refreshEngineerData()\"\n                                                    class=\"btnprimary\">Search</a>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"panel-body\" style=\"overflow: auto;\">\n                                        <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\"\n                                            class=\"table table-striped- table-bordered table-hover table-checkable\">\n                                            <thead>\n                                                <tr>\n                                                    <th style=\"width: 2%;\">#</th>\n                                                    <th>{{this.currentUser.Engineer}} Name</th>\n                                                    <th>Start info</th>\n                                                    <th>Stop info</th>\n                                                    <th>Images</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                <tr *ngFor=\"let x of data; let i=index; async\">\n                                                    <td>{{i+1}}</td>\n                                                    <td>{{x.EngineerName}}</td>\n                                                    <td>\n                                                        <strong>IP : </strong> {{x.StartIP}}<br>\n                                                        <strong>Date : </strong> {{x.StartDate | date:'MMM d, y h:mm a':'+0000'}}<br>\n                                                        <strong>Address : </strong> {{x.StartAddress}}\n                                                    </td>\n                                                    <td>\n                                                        <strong>IP : </strong> {{x.EndIP}}<br>\n                                                        <strong>Date : </strong> {{x.EndDate | date:'MMM d, y h:mm a':'+0000'}}<br>\n                                                        <strong>Address : </strong> {{x.EndAddress}}\n                                                    </td>\n                                                    <td>\n                                                        <a href=\"javascript:;\" (click)=\"openimg(x)\" > {{x.EngineerAttendanceImage.length}} Images</a>\n                                                    </td>\n                                                </tr>                                           \n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<ng-template #modalpopup let-close=\"close\">\n    <div class=\"row cus-model-header\" style=\"margin:0\">\n        <div class=\"col-md-9\">\n            <h5 class=\"modal-title\" style=\"font-size: 2em;color: black;font-weight: 600;\">\n                {{this.tempImg.EngineerName}}\n            </h5>\n        </div>\n        <div class=\"col-md-3\">\n            <div class=\"btn-group\" style=\"float: right;\">\n                <button type=\"button\" class=\"btn btn-danger btn-sm text-white\" (click)=\"closeimg()\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class=\"modal-body\" id=\"month-2-modal\">\n        <div class=\"row\">\n            <table class=\"table table-bordered\" style=\"font-size: 16px;\">\n                <tbody>\n                    <tr>\n                        <th><h2>Start on {{this.tempImg.StartDate | date:'h:mm a':'+0000'}}</h2></th>\n                    </tr>\n                    <tr>\n                        <th><h4>{{this.tempImg.StartAddress}}</h4></th>\n                    </tr>\n                    <tr>\n                        <th>\n                            <div id=\"wrapper\">\n                                <div id=\"innerwrapper\">\n                                    <div class=\"wrapper-img\" *ngFor=\"let x of tempImg.EngineerAttendanceImage; let i=index; async\">\n                                        <img *ngIf=\"x.Status === 'Start'\" src=\"{{x.Image}}\" />\n                                    </div>\n                                 \n                                </div>\n                              </div>\n                        </th>\n                    </tr>\n                    <tr>\n                        <th><hr></th>\n                    </tr>\n                    <tr>\n                        <th><h2>stop on {{this.tempImg.EndDate | date:'h:mm a':'+0000'}}</h2></th>\n                    </tr>\n                    <tr>\n                        <th><h4>{{this.tempImg.EndAddress}}</h4></th>\n                    </tr>\n                    <tr>\n                        <th>\n                            <div id=\"wrapper\">\n                                <div id=\"innerwrapper\">\n                                    <div class=\"wrapper-img\" *ngFor=\"let x of tempImg.EngineerAttendanceImage; let i=index; async\">\n                                        <img *ngIf=\"x.Status === 'Stop'\" src=\"{{x.Image}}\" />\n                                    </div>\n                                 \n                                </div>\n                              </div>\n                        </th>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</ng-template>","import { Component, OnInit, AfterViewInit, OnDestroy, ViewChild } from '@angular/core';\nimport { ReportService } from 'src/app/services/report.service';\nimport { DownloadService } from 'src/app/services/downloads.service';\nimport { NgbDateAdapter, NgbTimeAdapter } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbDateToStringAdapter } from 'src/app/ngb-date-to-string-adapter';\nimport { NgbTimeToStringAdapter } from 'src/app/ngb-time-to-string-adapter';\nimport { Subject } from 'rxjs/internal/Subject';\nimport { Login, AuthenticationService } from 'src/app/services';\nimport { ToastrService } from 'ngx-toastr';\nimport { ReportsFilter } from 'src/app/services/report.module';\nimport { DataTableDirective } from 'angular-datatables';\nimport { GenicProfileService } from 'src/app/services/genicprofile.service';\nimport { Router } from '@angular/router';\nimport { EngineerService } from 'src/app/services/engineer.service';\nimport { Engineer } from 'src/app/services/engineer.module';\n@Component({\n  selector: 'app-report-engineer-time-sheet',\n  templateUrl: './report-engineer-time-sheet.component.html',\n  providers: [\n    { provide: NgbDateAdapter, useClass: NgbDateToStringAdapter },\n    { provide: NgbTimeAdapter, useClass: NgbTimeToStringAdapter }\n],\n})\nexport class ReportEngineerTimeSheetComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  currentUser: Login;\n  data: any;\n  datae: any;\n  indx = -1;\n  isClick = false;\n  date = new Date();\n  firstDay = new Date(this.date.getFullYear(), this.date.getMonth(), 1);\n  firstdate = this.firstDay.getFullYear().toString().padStart(4, '0') + '-' +\n             (this.firstDay.getMonth() + 1).toString().padStart(2, '0') + '-' +\n             this.firstDay.getDate().toString().padStart(2, '0');\n\n  lastDay = new Date(this.date.getFullYear(), this.date.getMonth() + 1 , 0);\n  lastdate = this.lastDay.getFullYear().toString().padStart(4, '0') + '-' +\n            (this.lastDay.getMonth() + 1).toString().padStart(2, '0') + '-' +\n            this.lastDay.getDate().toString().padStart(2, '0');\n  constructor(public service: ReportService,\n              public engineerservice: EngineerService,\n              private downloadService: DownloadService,\n              public loginservice: AuthenticationService,\n              public genicprofileservice: GenicProfileService,\n              private router: Router,\n              private toastr: ToastrService) {\n                this.loginservice.currentUser.subscribe(x => this.currentUser = x);;\n                this.data = [];\n                this.datae = [];\n              }\n  ngOnInit() {\n    if (!this.currentUser.Permissions.ReportEngineer) { this.router.navigate(['/dashboard']); }\n    this.genicprofileservice.TicketFilter.IsReady = false;\n    this.genicprofileservice.TicketFilter.IsReadyQuote = false;\n    this.genicprofileservice.TicketFilter.IsReadyInvoice = false;\n    this.dtOptions = { pagingType: 'full_numbers', paging: true, ordering: false, lengthMenu: [ 5, 10, 25, 50, 75, 100 ] };\n    this.engineerservice.getEngineerListSync(this.currentUser.Token).subscribe( res => {\n      if (res) { const response = res as any;\n                 if (response.Message === 'success') {\n                  this.engineerservice.Engineerlist = response.result as Engineer[];\n                  }\n                 if (response.Message === 'failure') {\n                  this.toastr.warning('warning', response.MessageDescription);\n                  }\n      }}, error =>  console.log(error));\n    this.service.ReportsFilter = new ReportsFilter();\n    this.service.ReportsFilter.Department = 0;\n    this.service.ReportsFilter.Engineer = '00000000-0000-0000-0000-000000000000';\n    this.service.ReportsFilter.StartDate = this.firstdate;\n    this.service.ReportsFilter.EndDate = this.lastdate;\n  }\n  loaddata(sdate: string, edate: string) {\n    if (this.dtElement !==  undefined && this.dtElement.dtInstance !== undefined) {\n      this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n        dtInstance.destroy();\n      }).catch(err => console.error(err));\n    }\n    this.service.refrestEngineerwiseReports(this.currentUser.Token, sdate, edate,this.service.ReportsFilter.Engineer).subscribe( res => {\n      if (res) { const response = res as any;\n                 if (response.Message === 'success') {\n                    this.data = response.result;\n                    this.dtTrigger.next();\n                  }\n                 if (response.Message === 'failure') {\n                    this.toastr.warning('warning', response.MessageDescription);\n                  }\n    }}, error =>  console.log(error));\n  }\n  ngAfterViewInit() {\n  }\n  ngOnDestroy() {\n    this.dtTrigger.unsubscribe();\n  }\n  refreshEngineerData() {\n    this.isClick = false;\n    this.indx = -1;\n    if (this.service.ReportsFilter.StartDate === undefined) { this.toastr.warning('Please select From date'); return false; }\n    if (this.service.ReportsFilter.EndDate === undefined) { this.toastr.warning('Please select to date'); return false; }\n    const cursDate = this.service.ReportsFilter.StartDate;\n    const cureDate = this.service.ReportsFilter.EndDate;\n    const sDate = cursDate.split('T')[0].replace(/-/g, '');\n    const eDate = cureDate.split('T')[0].replace(/-/g, '');\n    this.loaddata(sDate, eDate);\n  }\n  getEngineerWise2Reports(EId: string, i: number) {\n    if (this.service.ReportsFilter.StartDate === undefined) { this.toastr.warning('Please select From date'); return false; }\n    if (this.service.ReportsFilter.EndDate === undefined) { this.toastr.warning('Please select to date'); return false; }\n    this.indx = i;\n    this.isClick = true;\n    const cursDate = this.service.ReportsFilter.StartDate;\n    const cureDate = this.service.ReportsFilter.EndDate;\n    const sDate = cursDate.split('T')[0].replace(/-/g, '');\n    const eDate = cureDate.split('T')[0].replace(/-/g, '');\n    this.service.refrestEngineerwise2Reports(this.currentUser.Token, sDate, eDate, EId).subscribe( res => {\n      if (res) { const response = res as any;\n                 if (response.Message === 'success') {\n                    this.datae = response.result;\n                  }\n    }}, error =>  console.log(error));\n  }\n  exportAsXLSX(): void {\n    this.downloadService.exportAsExcelFile(this.data, 'report_' + this.currentUser.Engineer + 's');\n  }\n}\n","<div class=\"kt-content kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n    <div class=\"kt-subheader kt-grid__item\" id=\"kt_subheader\">\n        <div class=\"kt-container kt-container--fluid \">\n            <div class=\"kt-subheader__main\">\n                <h3 class=\"kt-subheader__title\">\n                    <a href=\"javascript:;\" routerLink=\"/dashboard\">\n                        Dashboard\n                    </a>\n                </h3>\n                <span class=\"kt-subheader__separator kt-hidden\"></span>\n                <div class=\"kt-subheader__breadcrumbs\">\n                    <i class=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>\n                    <span class=\"kt-subheader__breadcrumbs-separator\"></span>\n                    Reports <span class=\"kt-subheader__breadcrumbs-separator\"></span>\n                </div>\n                <span class=\"kt-subheader__separator kt-hidden\"></span>\n                <div class=\"kt-subheader__breadcrumbs\">\n                    <i class=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>\n                    <span class=\"kt-subheader__breadcrumbs-separator\"></span>\n                    {{this.currentUser.Engineer}} Time Sheet\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"customer-list-main-section\">\n\n        <div class=\"kt-widget17\">\n            <div class=\"kt-widget17__visual kt-widget17__visual--chart kt-portlet-fit--top kt-portlet-fit--sides\"\n                style=\"background-color: #fd397a\">\n            </div>\n            <div class=\"kt-widget17__stats\">\n                <div class=\"kt-section kt-drop-section\">\n                    <div class=\"kt-section__content\">\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-12\">\n                            <div class=\"kt-portlet__body customer-listing-datatable\">\n                                <div *ngIf=\"!data\" class=\"row\">\n                                    <div class=\"col-sm-4 col-md-4 col-lg-4\"></div>\n                                    <div class=\"col-sm-4 col-md-4 col-lg-4\">\n                                        <div class=\"progress\">\n                                            <div class=\"progress-bar progress-bar-striped progress-bar-animated\"\n                                                role=\"progressbar\" aria-valuenow=\"100\" aria-valuemin=\"0\"\n                                                aria-valuemax=\"100\" style=\"width: 100%\">\n                                                Loading...</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-sm-4 col-md-4 col-lg-4\"></div>\n                                </div>\n                                <div *ngIf=\"data\" class=\"panel panel-primary list-panel\" id=\"list-panel\">\n                                    <div class=\"panel-heading list-panel-heading\">\n                                        <h1 class=\"panel-title list-panel-title\"><i class=\"fa fa-list\"></i> {{this.currentUser.Engineer}}\n                                           Time Sheet Report</h1>\n                                        <div class=\"btnexport\">\n                                            <a href=\"javascript:void(0)\" (click)=\"exportAsXLSX()\"\n                                                class=\"btnexportToExcel\">Export to Excel</a>\n                                        </div>\n                                    </div>\n                                    <div class=\"row filterstrong\">\n                                        <div class=\"col-md-2\">\n                                            <div class=\"input-group\">\n                                                <input readonly placeholder=\"yyyy-mm-dd\" class=\"form-control\"\n                                                    name=\"service.ReportsFilter.StartDate\"\n                                                    #service.ReportsFilter.StartDate=\"ngModel\"\n                                                    [(ngModel)]=\"service.ReportsFilter.StartDate\" ngbDatepicker\n                                                    (click)=\"datePickerfromdate.toggle()\"\n                                                    #datePickerfromdate=\"ngbDatepicker\">\n                                            </div>\n                                        </div>\n                                        <div class=\"col-md-2\">\n                                            <div class=\"input-group\">\n                                                <input readonly placeholder=\"yyyy-mm-dd\" class=\"form-control\"\n                                                    name=\"service.ReportsFilter.EndDate\"\n                                                    #service.ReportsFilter.EndDate=\"ngModel\"\n                                                    [(ngModel)]=\"service.ReportsFilter.EndDate\" ngbDatepicker\n                                                    (click)=\"datePickertodate.toggle()\"\n                                                    #datePickertodate=\"ngbDatepicker\">\n                                            </div>\n                                        </div>\n                                        <div class=\"col-md-2 padd-right-0\">\n                                            <div class=\"input-group\">\n                                            <select  name=\"service.ReportsFilter.Engineer\" #service.ReportsFilter.Engineer=\"ngModel\"\n                                            [(ngModel)]=\"service.ReportsFilter.Engineer\" class=\"form-control\">                                            \n                                                    <option value=\"00000000-0000-0000-0000-000000000000\"> ALL {{this.currentUser.Engineer}} </option>\n                                                    <option *ngFor=\"let x of engineerservice.Engineerlist\" value=\"{{x.Id}}\"> {{x.EngineerName}} </option>\n                                                    </select>\n                                        </div>\n                                    </div>\n                                        <div class=\"col-md-1\">\n                                            <div class=\"input-group\">\n                                                <a href=\"javascript:;\" (click)=\"refreshEngineerData()\"\n                                                    class=\"btnprimary\">Search</a>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"panel-body\" style=\"overflow: auto;\">\n                                        <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\"\n                                            class=\"table table-striped- table-bordered table-hover table-checkable\">\n                                            <thead>\n                                                <tr>\n                                                    <th style=\"width: 2%;\">#</th>\n                                                    <th>{{this.currentUser.Engineer}} Name</th>\n                                                    <th>Total {{this.currentUser.Ticket}}</th>\n                                                    <th>Total Time</th>\n                                                    <th style=\"text-align: center;\" colspan=\"3\">Time Bifurcation (DD.HH:MM:SS)</th>\n                                                </tr>\n                                                <tr>\n                                                    <th></th>\n                                                    <th></th>\n                                                    <th></th>\n                                                    <th><sup>(DD.HH:MM:SS)</sup> </th>\n                                                    <th>Regular</th>\n                                                    <th>OT</th>\n                                                    <th>Weekly off/PH</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                <tr  *ngFor=\"let x of data; let i=index; async\"\n                                                (click)=\"getEngineerWise2Reports(x.EId, i)\"\n                                                [ngClass]=\"{'InactiveBackColor2': i===indx}\"\n                                                style=\"cursor: pointer;\"\n                                                    class=\"ticket-list-view-info\">\n                                                    <td>{{i+1}}</td>\n                                                    <td>\n                                                        {{ x.EngineerName }}\n                                                    </td>\n                                                    <td>\n                                                        {{ x.TotalTicket }} \n                                                    </td>\n                                                    <td>\n                                                        {{ x.TotalTime }}\n                                                    </td>\n                                                    <td>\n                                                        {{ x.TBRegular }}\n                                                    </td>\n                                                    <td>\n                                                        {{ x.TBOT }}\n                                                    </td>\n                                                    <td>\n                                                        {{ x.WeekOffPHTime }}\n                                                    </td>\n                                                </tr>                                              \n                                            </tbody>\n                                            <tfoot *ngIf=\"isClick\">\n                                                <tr>\n                                                    <td colspan=\"7\" ></td>\n                                                </tr>\n                                                <tr style=\"background-color: #e1bf3ab8;\">\n                                                    <td colspan=\"7\">\n                                                        <table class=\"table table-striped properies-table-info ng-star-inserted\">\n                                                            <thead  *ngIf=\"datae.length > 0\">\n                                                              <tr>\n                                                                <th>S No</th>\n                                                                <th>{{this.currentUser.Engineer}} Name</th>\n                                                                <th>{{this.currentUser.Ticket}} # & Date</th>\n                                                                <th>Customer</th>\n                                                                <th>Location</th>\n                                                                <th>Time-in</th>\n                                                                <th>Time-out</th>\n                                                                <th>Total Time</th>\n                                                                <th style=\"text-align: center;\" colspan=\"3\">Time Bifurcation (DD.HH:MM:SS)</th>\n                                                              </tr>\n                                                              <tr>\n                                                                <th></th>\n                                                                <th></th>\n                                                                <th></th>\n                                                                <th></th>\n                                                                <th></th>\n                                                                <th></th>\n                                                                <th></th>\n                                                                <th><sup>(DD.HH:MM:SS)</sup> </th>\n                                                                <th>Regular</th>\n                                                                <th>OT</th>\n                                                                <th>Weekly off/PH</th>\n                                                            </tr>\n                                                            </thead>\n                                                            <tbody>\n                                                              <tr *ngFor=\"let f of datae; let ii=index;\">\n                                                                <td>{{ii+1}}</td>\n                                                                  <td>{{f.EngineerName}}</td>\n                                                                  <td>{{f.Ticket.TicketId}} <br> {{f.Ticket.OneOffAppointmentDate | date}} </td>\n                                                                  <td>{{f.Ticket.CustomerCompanyName}}</td>\n                                                                  <td>{{f.Ticket.CustomerAddress}}</td>\n                                                                  <td>{{f.TimeInOut.StartDate | date: 'MMMM d, y, h:mm:ss a':'+0000'}}</td>\n                                                                  <td>{{f.TimeInOut.EndDate | date: 'MMMM d, y, h:mm:ss a':'+0000'}}</td>\n                                                                  <td>{{ f.TotalTime }}</td>\n                                                                  <td>{{ f.TBRegular }}</td>\n                                                                  <td>{{ f.TBOT }}</td>\n                                                                  <td>{{ f.WeekOffPHTime }}</td>\n                                                              </tr>\n                                                            </tbody>\n                                                            <tfoot *ngIf=\"datae.length === 0\">record not inserted yet</tfoot>\n                                                          </table>\n                                                    </td>\n                                                </tr>\n                                            </tfoot>\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  // tslint:disable-next-line: component-selector\r\n  selector: 'generic-ticket-status',\r\n  template: `\r\n     <span *ngIf=\"Status ==='NEW JOB REQUEST'\" class=\"ticketstatus statusnewjobrequest\">NEW&nbsp;JOB&nbsp;REQUEST</span>\r\n     <span *ngIf=\"Status ==='DEFECT JOB'\" class=\"ticketstatus statusnewjobrequest\">DEFECT&nbsp;JOB</span>\r\n    <span *ngIf=\"Status ==='CANCELLED'\" class=\"ticketstatus statuscancelled\">CANCELLED</span>\r\n    <span *ngIf=\"Status ==='UPCOMING'\" class=\"ticketstatus statusupcoming\">UPCOMING</span>\r\n    <span *ngIf=\"Status ==='CLOSED'\" class=\"ticketstatus statusclosed\">CLOSED</span>\r\n    <span *ngIf=\"Status ==='CLOSEDQUOTED'\" class=\"ticketstatus statusclosednQuoted\">CLOSED & QUOTED</span>\r\n    <span *ngIf=\"Status ==='CLOSEDINVOICED'\" class=\"ticketstatus statusclosednInvoised\">CLOSED & INVOICED</span>\r\n    <span *ngIf=\"Status ==='OVERDUE'\" class=\"ticketstatus statusoverdue\">OVERDUE</span>\r\n    <span *ngIf=\"Status ==='OVERDUE'\" class=\"ticketstatus statusoverdueday\">By {{OverDueDays}}\r\n\t<span *ngIf=\"OverDueDays === 1\">&nbsp;Day</span>\r\n\t<span *ngIf=\"OverDueDays > 1\">&nbsp;Days</span></span>\r\n    <span *ngIf=\"Status ==='HOLD'\" class=\"ticketstatus statushold\">HOLD</span>\r\n    <span *ngIf=\"Status ==='INPROGRESS'\" class=\"ticketstatus statusinprogress\">INPROGRESS</span>\r\n    <span *ngIf=\"Status === 'UNSCHEDULED'\" class=\"ticketstatus statusunschedulled\">UNSCHEDULED</span>\r\n  `\r\n})\r\nexport class TicketStatusComponent {\r\n  @Input() Status: string;\r\n  @Input() OverDueDays: number;\r\n}\r\n","/** Outer dependencies */\r\nimport { Injectable } from '@angular/core';\r\nimport { NgbTimeStruct, NgbTimeAdapter } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nfunction isInteger(value: any): value is number {\r\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\r\n}\r\n\r\nfunction isString(value: any): value is string {\r\n  return typeof value === 'string';\r\n}\r\n\r\n@Injectable()\r\nexport class NgbTimeToStringAdapter extends NgbTimeAdapter<string> {\r\n  private year: number = new Date().getUTCFullYear();\r\n  private month: number = new Date().getUTCMonth() + 1;\r\n  private day: number = new Date().getUTCDate();\r\n\r\n  /**\r\n   * Converts user-model date into an NgbTimeStruct for internal use in the library\r\n   */\r\n  public fromModel(dateString: string): NgbTimeStruct {\r\n    const date = new Date(dateString);\r\n    const isValidDate = !isNaN(date.valueOf());\r\n\r\n    if (!dateString || !isString(dateString) || !isValidDate) {\r\n      return null;\r\n    }\r\n\r\n    this.year = date.getUTCFullYear();\r\n    this.month = date.getUTCMonth() + 1;\r\n    this.day = date.getUTCDate();\r\n\r\n    return { hour: date.getUTCHours(), minute: date.getUTCMinutes(), second: date.getUTCSeconds() };\r\n  }\r\n\r\n  /**\r\n   * Converts internal time value NgbTimeStruct to user-model date\r\n   * The returned type is supposed to be of the same type as fromModel() input-value param\r\n   */\r\n  public toModel(time: NgbTimeStruct): string {\r\n    if (time && isInteger(time.hour) && isInteger(time.minute) && isInteger(time.second)) {\r\n      const year = this.year.toString().padStart(2, '0');\r\n      const month = this.month.toString().padStart(2, '0');\r\n      const day = this.day.toString().padStart(2, '0');\r\n\r\n      const hour = time.hour.toString().padStart(2, '0');\r\n      const minute = time.minute.toString().padStart(2, '0');\r\n      const second = time.second.toString().padStart(2, '0');\r\n\r\n      return `${year}-${month}-${day}T${hour}:${minute}:${second}Z`;\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n@Component({template: '<router-outlet></router-outlet>'})\nexport class ReportsComponent implements OnInit  {\n  ngOnInit() {}\n}\n","/** Outer dependencies */\r\nimport { Injectable } from '@angular/core';\r\nimport { NgbDateStruct, NgbDateAdapter } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nfunction isInteger(value: any): value is number {\r\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\r\n}\r\n\r\nfunction isString(value: any): value is string {\r\n  return typeof value === 'string';\r\n}\r\n\r\n@Injectable()\r\nexport class NgbDateToStringAdapter extends NgbDateAdapter<string> {\r\n  private hour = 0;\r\n  private minute = 0;\r\n  private second = 0;\r\n\r\n  /**\r\n   * Converts user-model date into an NgbDateStruct for internal use in the library\r\n   */\r\n  public fromModel(dateString: string): NgbDateStruct {\r\n    const date = new Date(dateString);\r\n\r\n    const isValidDate = (!isNaN(date.valueOf()));\r\n\r\n    if (!dateString || !isString(dateString) || !isValidDate) {\r\n      return null;\r\n    }\r\n\r\n    this.hour = date.getUTCHours();\r\n    this.minute = date.getUTCMinutes();\r\n    this.second = date.getUTCSeconds();\r\n\r\n    return { year: date.getUTCFullYear(), month: date.getUTCMonth() + 1, day: date.getUTCDate() };\r\n  }\r\n\r\n  /**\r\n   * Converts internal date value NgbDateStruct to user-model date\r\n   * The returned type is supposed to be of the same type as fromModel() input-value param\r\n   */\r\n  public toModel(date: NgbDateStruct): string {\r\n    if (date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)) {\r\n      const year = date.year.toString().padStart(2, '0');\r\n      const month = date.month.toString().padStart(2, '0');\r\n      const day = date.day.toString().padStart(2, '0');\r\n\r\n      const hour = this.hour.toString().padStart(2, '0');\r\n      const minute = this.minute.toString().padStart(2, '0');\r\n      const second = this.second.toString().padStart(2, '0');\r\n\r\n      return `${year}-${month}-${day}T${hour}:${minute}:${second}Z`;\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common'; \r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\n\r\nimport { ReportsComponent } from './reports.component';\r\nimport { ReportEngineersComponent } from './report-engineers/report-engineers.component';\r\nimport { ReportTicketComponent } from './tickets/report-ticket.component';\r\nimport { VisitsComponent } from './visits/visits.component';\r\nimport { TicketStatusComponentModule } from 'src/app/generic-utils/Ticket-Status-Component/TicketStatusComponent.module';\r\nimport { ReportEngineerTimeSheetComponent } from './report-engineer-time-sheet/report-engineer-time-sheet.component';\r\nimport { ReportEngineerAttendanceComponent } from './report-engineer-attendance/report-engineer-attendance.component';\r\nconst routes: Routes = [\r\n  { path: '', component: ReportsComponent,\r\n            children: [\r\n              { path: 'report-engineer-time-sheet', component: ReportEngineerTimeSheetComponent },\r\n              { path: 'report-engineer-attendance', component: ReportEngineerAttendanceComponent },\r\n              { path: 'report-engineers', component: ReportEngineersComponent },\r\n              { path: 'report-ticket', component: ReportTicketComponent },\r\n              { path: 'visits', component: VisitsComponent }\r\n            ]},\r\n];\r\n@NgModule({\r\n  declarations: [\r\n    ReportsComponent,\r\n    ReportEngineerTimeSheetComponent,\r\n    ReportEngineerAttendanceComponent,\r\n    ReportEngineersComponent,\r\n    ReportTicketComponent,\r\n    VisitsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    DataTablesModule,\r\n    FormsModule,\r\n    MatDialogModule,\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatNativeDateModule,\r\n    MatInputModule,\r\n    NgbModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(routes),\r\n    TicketStatusComponentModule\r\n  ],\r\n  exports: [\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatNativeDateModule,\r\n    MatInputModule\r\n  ],\r\n})\r\nexport class ReportsModule { }\r\n"]}