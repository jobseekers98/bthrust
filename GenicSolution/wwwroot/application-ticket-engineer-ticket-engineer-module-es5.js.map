{"version":3,"sources":["webpack:///src/app/application/ticket-engineer/ticket-engineer.module.ts","webpack:///src/app/application/ticket-engineer/ticket-engineer.component.ts","webpack:///src/app/application/ticket-engineer/ticket-engineer.component.html"],"names":["TicketEngineerModule","declarations","imports","exports","TicketEngineerComponent","service","ticketservice","loginservice","currentUser","subscribe","x","localPrependUrl","apiUrl","Engineerlist","setTimeout","refrestAssinedEngineersList","Token","formData","Id","selector","templateUrl","styles"],"mappings":"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","file":"application-ticket-engineer-ticket-engineer-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common'; \r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TicketEngineerComponent } from './ticket-engineer.component';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\n@NgModule({\r\n  declarations: [TicketEngineerComponent],\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatDialogModule,\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatNativeDateModule,\r\n    MatInputModule,\r\n  ],\r\n  exports: [\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatNativeDateModule,\r\n    MatInputModule,\r\n  ],\r\n})\r\nexport class TicketEngineerModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { EngineerService } from 'src/app/services/engineer.service';\nimport { Login } from 'src/app/services/login.mudule';\nimport { AuthenticationService } from 'src/app/services';\nimport { environment } from 'src/environments/environment';\nimport { TicketService } from 'src/app/services/ticket.service';\n\n@Component({\n  selector: 'app-ticket-engineer',\n  templateUrl: './ticket-engineer.component.html',\n  styles: []\n})\nexport class TicketEngineerComponent implements OnInit {\n  currentUser: Login;\n  localPrependUrl: string;\n  constructor(public service: EngineerService,\n              public ticketservice: TicketService,\n              public loginservice: AuthenticationService,\n              ) {\n                this.loginservice.currentUser.subscribe(x => this.currentUser = x);\n                this.localPrependUrl = environment.apiUrl;\n              }\n  ngOnInit() {\n    this.service.Engineerlist = [];\n    setTimeout(() => {\n       this.service.refrestAssinedEngineersList(this.currentUser.Token, this.ticketservice.formData.Id);\n    }, 200);\n  }\n}\n","<style>\n.model-header{background: #c3e7fa;padding: 5px;}\n.model-header .btn{padding: 0.25rem 0.25rem;}\n.tableBodyScroll tbody {\n \n  overflow-y: scroll;\n  overflow-x: hidden;\n}\n\n.tableBodyScroll thead,\ntbody tr {\n  width: 100%;\n  table-layout: fixed;\n}\n</style>\n<div>\n    <h2>\n      {{this.currentUser.Ticket}} Team &nbsp;&nbsp;<span style=\"color:#ff0909;\">|</span> &nbsp;&nbsp;  {{this.currentUser.Ticket}}: # {{ticketservice.formData.TicketId}}\n          <button class=\"btn text-danger pull-right\" [mat-dialog-close]><b>X</b></button>\n        </h2>\n\n</div>\n<hr>\n  <div class=\"form-row\">\n    <div class=\"form-group col-md-12\">\n        <table class=\"table\"\n        *ngIf=\"service.Engineerlist.length > 0\" >\n        <thead>\n            <tr>\n                <th style=\"width: 5%\">SNo</th>\n                <th style=\"width: 10%\">Image</th>\n                <th style=\"width: 40%\">Name</th>\n                <th style=\"width: 20%\">Phone</th>\n                <th style=\"width: 25%\">Email</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let x of service.Engineerlist; let i=index; async\">\n            <td>{{i + 1}}</td>\n                <td class=\"engineer-list-class\"> \n                    <img *ngIf=\"x.EngineerLogo.length === 0\" width=\"30px\"\n                    src=\"{{localPrependUrl}}/assets/svg/noimage.svg\" />\n                <img *ngIf=\"x.EngineerLogo.length > 0\" width=\"30px\"\n                    src=\"{{x.EngineerLogo}}\">\n                </td>\n                <td>{{x.EngineerName}}<br>\n                </td>\n                <td>{{x.EngineerPhone}}</td>\n                <td>{{x.EngineerEmail}}</td>\n            </tr>\n        </tbody>\n    </table><hr>\n    <div class=\"row\">\n        <i *ngIf=\"!service.Engineerlist\" class=\"fa fa-spinner fa-spin\" ></i>\n    </div>\n    </div>\n  </div>\n"]}