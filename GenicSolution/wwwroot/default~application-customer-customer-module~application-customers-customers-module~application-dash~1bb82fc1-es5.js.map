{"version":3,"sources":["webpack:///src/app/generic-utils/Ticket-Date-Time-Format/TicketDateTimeFormat.module.ts","webpack:///src/app/generic-utils/Ticket-Team-List/TicketTeamList.module.ts","webpack:///src/app/generic-utils/Ticket-Status-Component/TicketStatusComponent.module.ts","webpack:///src/app/services/ticket.module.ts","webpack:///src/app/generic-utils/Ticket-Team-List/TicketTeamList.component.ts","webpack:///src/app/generic-utils/Ticket-Status-Component/TicketStatusComponent.component.ts","webpack:///src/app/services/CommanExtendsClass.module.ts","webpack:///src/app/generic-utils/Ticket-Date-Time-Format/TicketDateTimeFormat.component.ts","webpack:///src/app/application/ticket-engineer/ticket-engineer.component.ts","webpack:///src/app/application/ticket-engineer/ticket-engineer.component.html"],"names":["TicketDateTimeFormatModule","imports","declarations","exports","TicketTeamListModule","TicketStatusComponentModule","Ticket","TicketTeam","TicketItem","TicketAttachment","TicketIssueType","TicketWiseIssueType","TicketTimer","TicketReminder","TicketEquipment","TicketEquipmentMasterData","TicketRecurringHelper","TicketTeamListComponent","service","dialog","TicketTeams","Id","TicketId","formData","dialogConfig","autoFocus","width","height","data","open","selector","template","styles","localPrependUrl","Reallocate","TicketStatusComponent","Status","OverDueDays","ReminderBase","TicketDateTimeFormatComponent","loginservice","currentUser","subscribe","x","T","A","B","C","TicketEngineerComponent","ticketservice","apiUrl","Engineerlist","setTimeout","refrestAssinedEngineersList","Token","templateUrl"],"mappings":"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","file":"default~application-customer-customer-module~application-customers-customers-module~application-dash~1bb82fc1-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TicketDateTimeFormatComponent } from './TicketDateTimeFormat.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule],\r\n  declarations: [TicketDateTimeFormatComponent],\r\n  exports: [TicketDateTimeFormatComponent]\r\n})\r\nexport class TicketDateTimeFormatModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TicketTeamListComponent } from './TicketTeamList.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule],\r\n  declarations: [TicketTeamListComponent],\r\n  exports: [TicketTeamListComponent]\r\n})\r\nexport class TicketTeamListModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TicketStatusComponent } from './TicketStatusComponent.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule],\r\n  declarations: [TicketStatusComponent],\r\n  exports: [TicketStatusComponent]\r\n})\r\nexport class TicketStatusComponentModule {}\r\n","import { ReminderBase } from './CommanExtendsClass.module';\nimport { Customer } from './customer.model';\nimport { Property } from './property.model';\n\nexport class Ticket {\n    Id?: string;\n    RecurringId?: number;\n    TicketUniqueID?: number;\n    TicketId?: string;\n    CustomerId?: string;\n    PropertyId?: string;\n    CustomerName?: string;\n    CustomerContactNo: string;\n    CustomerEmail?: string;\n    CustomerAddress?: string;\n    CustomerCompanyName?: string;\n    Title?: string;\n    Description?: string;\n    TicketType?: string;\n    OneOffScheduled?: boolean;\n    OneOffAppointmentDate?: string;\n    OneOffStartTime?: string;\n    OneOffEndTime?: string;\n    AppointmentStart: string;\n    AppointmentEnd: string;\n    OneOffInvoice?: boolean;\n    RecurringScheduled?: boolean;\n    RecurringStartDate?: string;\n    RecurringEndDate?: string;\n    RecurringDuration?: number;\n    RecurringVisitFrequency?: number;\n    RecurringTotalVisit?: number;\n    RecurringInvoice?: string;\n    Status?: string;\n    InternalNoteDescription?: string;\n    TermsAndConditions?: string;\n    InternalNoteQuote?: boolean;\n    InternalNoteTicket?: boolean;\n    InternalNoteInvoice?: boolean;\n    InternalNoteAllowPayment?: boolean;\n    WhenInvoiceClosed?: boolean;\n    CreatedUtcDate?: string;\n    Rescheduled?: boolean;\n    Reallocate?: boolean;\n    RequestId?: string;\n    IsRequestExists?: boolean;\n    Priority?: number;\n    OverDueDays?: number;\n    NetAmount?: number;\n    InvoiceId?: string;\n    InvoiceNo?: string;\n    QuoteId?: string;\n    TicketConvertedFrom?: string;\n    TicketConvertedID?: string;\n    Customers?: Customer;\n    Properties?: Property;\n    TicketTeams?: TicketTeam[];\n    TicketTeamList?: TicketTeam[];\n    TicketItems?: TicketItem[];\n    TicketItemList?: TicketItem[];\n    TicketAttachments?: TicketAttachment[];\n    TicketAttachmentList?: TicketAttachment[];\n    TicketWiseIssueType?: TicketWiseIssueType[];\n    TicketClosedDate?: string;\n    CreatedBy?: string;\n    SMTPId?: number;\n    DepartmentName?: string;\n    TicketReminder?: TicketReminder[];\n    Rating?: number;\n    RatingFeedback?: string;\n}\nexport class TicketTeam {\n    Id?: number;\n    TicketId?: string;\n    EngineerId?: string;\n    EngineerName?: string;\n    EngineerLogo?: string;\n    TicketAssignDate?: Date;\n    Type?: number;\n}\nexport class TicketItem {\n    Id?: number;\n    TicketId?: string;\n    ItemName?: string;\n    Type?: string;\n    ItemDescription?: string;\n    ItemQuantity?: number;\n    ItemUnitCost?: number;\n    ItemTotalCost?: number;\n    IsPriseRevised?: boolean;\n    ItemAddredBy?: boolean;\n    ItemAddredById?: string;\n    ItemAddredByName?: string;\n    ItemBatch?: string;\n    BatchQty?: string;\n    UniqId?: string;\n    InWarranty?: boolean;\n    WarrantyDays?: number;\n    InstallationDate?: Date;\n    IsMaintance?: boolean;\n    MaintanceRemarks?: string;\n}\nexport class TicketAttachment {\n    Id?: number;\n    AttachmentName?: string;\n    TicketId?: string;\n    AttachmentPath?: string;\n    AttachmentSize?: number;\n}\nexport class TicketIssueType {\n    Id?: number;\n    Name?: string;\n    IsAssigned: boolean;\n}\nexport class TicketWiseIssueType {\n    Id?: number;\n    TicketId?: string;\n    TicketIssueTypeId?: number;\n    IssueTypeName?: string;\n}\nexport class TicketTimer {\n    ID?: number;\n    EngineerID?: string;\n    TicketID?: string;\n    StartDate?: Date;\n    EndDate?: Date;\n    StartTime?: string;\n    EndTime?: string;\n    Status?: number;\n    }\nexport class TicketReminder extends ReminderBase {\n    Id?: number; \n    TicketId?: string;\n}\nexport class TicketEquipment {\n    Id: number;\n    TicketId: string;\n    Name: string;\n    Remark: string;\n    Quantity: number;\n}\nexport class TicketEquipmentMasterData {\n    Id: number;\n    Name: string;\n    IsActive: boolean;\n}\nexport class TicketRecurringHelper {\n    Id?: number;\n    Type?: number;\n    IsFor: number;\n    RecurringStartDate?: string;\n    RecurringDuration?: number;\n    RecurringVisitFrequency?: number;\n    SundayIsActive?: boolean;\n    MondayIsActive?: boolean;\n    TuesdayIsActive?: boolean;\n    WednesdayIsActive?: boolean;\n    ThursdayIsActive?: boolean;\n    FridayIsActive?: boolean;\n    SaturdayIsActive?: boolean;\n    Date1?: boolean;\n    Date2?: boolean;\n    Date3?: boolean;\n    Date4?: boolean;\n    Date5?: boolean;\n    Date6?: boolean;\n    Date7?: boolean;\n    Date8?: boolean;\n    Date9?: boolean;\n    Date10?: boolean;\n    Date11?: boolean;\n    Date12?: boolean;\n    Date13?: boolean;\n    Date14?: boolean;\n    Date15?: boolean;\n    Date16?: boolean;\n    Date17?: boolean;\n    Date18?: boolean;\n    Date19?: boolean;\n    Date20?: boolean;\n    Date21?: boolean;\n    Date22?: boolean;\n    Date23?: boolean;\n    Date24?: boolean;\n    Date25?: boolean;\n    Date26?: boolean;\n    Date27?: boolean;\n    Date28?: boolean;\n    Date29?: boolean;\n    Date30?: boolean;\n    Date31?: boolean;\n    }\n","import { Component, Input } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { TicketEngineerComponent } from 'src/app/application/ticket-engineer/ticket-engineer.component';\r\nimport { Ticket } from 'src/app/services/ticket.module';\r\nimport { TicketService } from 'src/app/services/ticket.service';\r\n\r\n@Component({\r\n  selector: 'generic-ticket-team-list',\r\n  template: `\r\n    <span *ngIf=\"TicketTeams.length === 0\"\r\n        class=\"ticketstatus statusnotassigned\">Not&nbsp;Assigned</span>\r\n    <div *ngIf=\"TicketTeams.length > 0\" class=\"team-inner-1\">\r\n        <ul class=\"btn-group\">\r\n\r\n            <li *ngIf=\"TicketTeams.length === 1\">\r\n                <img *ngIf=\"TicketTeams[0].EngineerLogo.length === 0\"\r\n                    width=\"20pTicketTeams\" height=\"20pTicketTeams\"\r\n                    src=\"{{localPrependUrl}}/assets/svg/noimage.svg\" />\r\n                <img *ngIf=\"TicketTeams[0].EngineerLogo.length > 0\"\r\n                    width=\"20pTicketTeams\" height=\"20pTicketTeams\"\r\n                    src=\"{{TicketTeams[0].EngineerLogo}}\">\r\n                <span *ngIf=\"TicketTeams[0].EngineerName.length > 5\" title=\"{{TicketTeams[0].EngineerName}}\">\r\n                    {{(TicketTeams[0].EngineerName).substring(0,5)}}...</span>\r\n                <span *ngIf=\"TicketTeams[0].EngineerName.length <= 5\">\r\n                    {{TicketTeams[0].EngineerName}}</span>\r\n            </li>\r\n            <li *ngIf=\"TicketTeams.length > 1\">\r\n                <img *ngIf=\"TicketTeams[0].EngineerLogo.length === 0\"\r\n                    width=\"20pTicketTeams\" height=\"20pTicketTeams\"\r\n                    src=\"{{localPrependUrl}}/assets/svg/noimage.svg\" />\r\n                <img *ngIf=\"TicketTeams[0].EngineerLogo.length > 0\"\r\n                    width=\"20pTicketTeams\" height=\"20pTicketTeams\"\r\n                    src=\"{{TicketTeams[0].EngineerLogo}}\">\r\n                <span *ngIf=\"TicketTeams[0].EngineerName.length > 5\" title=\"{{TicketTeams[0].EngineerName}}\">\r\n                    {{(TicketTeams[0].EngineerName).substring(0,5)}}...</span>\r\n                <span *ngIf=\"TicketTeams[0].EngineerName.length <= 5\">\r\n                    {{TicketTeams[0].EngineerName}}</span>\r\n            </li>\r\n            <li *ngIf=\"TicketTeams.length > 1\">\r\n                <a href=\"javascript:;\" class=\"moreenglisthover\"\r\n                    (click)=\"OpenAssinedEngineerDialog(Id, TicketId)\">\r\n                    +{{TicketTeams.length - 1}}</a>\r\n            </li>\r\n\r\n        </ul>\r\n    </div>\r\n    <span *ngIf=\"Reallocate\" class=\"ticketstatus statusreallocated\">REALLOCATED</span>\r\n  `,\r\n  styles: [`\r\n    .team-inner-1 ul{padding-left:0;list-style-type:none;margin-bottom:0px;;}\r\n    .team-inner-1 ul li{color:black;display: inline-block;padding: 8px 8px;}\r\n    .team-inner-1 ul li img{ border-radius:40%; height: 20;width: 20; }\r\n    .team-inner-1 ul li .close{font-size: 10px; padding-left: 8px; padding-top: 6px;}\r\n    .moreenglisthover:hover {color: red;background-color: #e4d4c0;border-radius: 50%;padding: 2px;}\r\n    .btn-group {background-color: rgba(77,89,149,.06);}\r\n    `]\r\n})\r\nexport class TicketTeamListComponent {\r\n  @Input() TicketTeams: any;\r\n  @Input() localPrependUrl: string;\r\n  @Input() Reallocate: boolean;\r\n  @Input() Id: string;\r\n  @Input() TicketId: string;\r\n  \r\n  constructor(\r\n    public service: TicketService,\r\n    private dialog: MatDialog\r\n  ) { this.TicketTeams = new Ticket(); }\r\n  OpenAssinedEngineerDialog(Id: string, TicketId: string) {\r\n    this.service.formData.Id =  Id;\r\n    this.service.formData.TicketId =  TicketId;\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.autoFocus = true;\r\n    dialogConfig.width = '640px';\r\n    dialogConfig.height = '460px';\r\n    dialogConfig.data = { };\r\n    this.dialog.open(TicketEngineerComponent, dialogConfig);\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  // tslint:disable-next-line: component-selector\r\n  selector: 'generic-ticket-status',\r\n  template: `\r\n     <span *ngIf=\"Status ==='NEW JOB REQUEST'\" class=\"ticketstatus statusnewjobrequest\">NEW&nbsp;JOB&nbsp;REQUEST</span>\r\n     <span *ngIf=\"Status ==='DEFECT JOB'\" class=\"ticketstatus statusnewjobrequest\">DEFECT&nbsp;JOB</span>\r\n    <span *ngIf=\"Status ==='CANCELLED'\" class=\"ticketstatus statuscancelled\">CANCELLED</span>\r\n    <span *ngIf=\"Status ==='UPCOMING'\" class=\"ticketstatus statusupcoming\">UPCOMING</span>\r\n    <span *ngIf=\"Status ==='CLOSED'\" class=\"ticketstatus statusclosed\">CLOSED</span>\r\n    <span *ngIf=\"Status ==='CLOSEDQUOTED'\" class=\"ticketstatus statusclosednQuoted\">CLOSED & QUOTED</span>\r\n    <span *ngIf=\"Status ==='CLOSEDINVOICED'\" class=\"ticketstatus statusclosednInvoised\">CLOSED & INVOICED</span>\r\n    <span *ngIf=\"Status ==='OVERDUE'\" class=\"ticketstatus statusoverdue\">OVERDUE</span>\r\n    <span *ngIf=\"Status ==='OVERDUE'\" class=\"ticketstatus statusoverdueday\">By {{OverDueDays}}\r\n\t<span *ngIf=\"OverDueDays === 1\">&nbsp;Day</span>\r\n\t<span *ngIf=\"OverDueDays > 1\">&nbsp;Days</span></span>\r\n    <span *ngIf=\"Status ==='HOLD'\" class=\"ticketstatus statushold\">HOLD</span>\r\n    <span *ngIf=\"Status ==='INPROGRESS'\" class=\"ticketstatus statusinprogress\">INPROGRESS</span>\r\n    <span *ngIf=\"Status === 'UNSCHEDULED'\" class=\"ticketstatus statusunschedulled\">UNSCHEDULED</span>\r\n  `\r\n})\r\nexport class TicketStatusComponent {\r\n  @Input() Status: string;\r\n  @Input() OverDueDays: number;\r\n}\r\n","export class ReminderBase {\r\n    Subject: string;\r\n    Body: string;\r\n    MailTo: string;\r\n    RecurringStartDate?: string;\r\n    RecurringEndDate?: string;\r\n    Duration: number;\r\n    VisitFrequency: number;\r\n    ReminderDate: string;\r\n    IsActive: boolean;\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { AuthenticationService, Login } from 'src/app/services';\r\n@Component({\r\n  selector: 'generic-ticket-date-time-format',\r\n  template: `\r\n  <div *ngIf=\"T === 1\">\r\n  <strong>{{this.currentUser.Ticket}} Date: </strong> {{ C | date:'MMM d, y':'+0000' }} <br>\r\n    <strong>Appointment</strong><br>\r\n    <strong>Start:</strong> {{ A | date:'MMM d, y HH:mm':'+0000' }}<br>\r\n    <strong>End:</strong> {{ B | date:'MMM d, y HH:mm':'+0000' }}\r\n  </div>\r\n  <div *ngIf=\"T === 11\">\r\n    {{ C | date:'MMM d, y':'+0000' }}\r\n  </div>\r\n  <div *ngIf=\"T === 12\">\r\n  {{ A | date:'MMM d, y h:mm a':'+0000' }} - {{ B | date:'h:mm a':'+0000' }}\r\n  </div>\r\n  `\r\n})\r\nexport class TicketDateTimeFormatComponent {\r\n  @Input() A: string;\r\n  @Input() B: string;\r\n  @Input() C?: string;\r\n  @Input() T?: number; // Format Type\r\n  currentUser: Login;\r\n  constructor(public loginservice: AuthenticationService) { \r\n    this.loginservice.currentUser.subscribe(x => this.currentUser = x);\r\n    if (this.T === null) {\r\n      this.T = 1;\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { EngineerService } from 'src/app/services/engineer.service';\nimport { Login } from 'src/app/services/login.mudule';\nimport { AuthenticationService } from 'src/app/services';\nimport { environment } from 'src/environments/environment';\nimport { TicketService } from 'src/app/services/ticket.service';\n\n@Component({\n  selector: 'app-ticket-engineer',\n  templateUrl: './ticket-engineer.component.html',\n  styles: []\n})\nexport class TicketEngineerComponent implements OnInit {\n  currentUser: Login;\n  localPrependUrl: string;\n  constructor(public service: EngineerService,\n              public ticketservice: TicketService,\n              public loginservice: AuthenticationService,\n              ) {\n                this.loginservice.currentUser.subscribe(x => this.currentUser = x);\n                this.localPrependUrl = environment.apiUrl;\n              }\n  ngOnInit() {\n    this.service.Engineerlist = [];\n    setTimeout(() => {\n       this.service.refrestAssinedEngineersList(this.currentUser.Token, this.ticketservice.formData.Id);\n    }, 200);\n  }\n}\n","<style>\n.model-header{background: #c3e7fa;padding: 5px;}\n.model-header .btn{padding: 0.25rem 0.25rem;}\n.tableBodyScroll tbody {\n \n  overflow-y: scroll;\n  overflow-x: hidden;\n}\n\n.tableBodyScroll thead,\ntbody tr {\n  width: 100%;\n  table-layout: fixed;\n}\n</style>\n<div>\n    <h2>\n      {{this.currentUser.Ticket}} Team &nbsp;&nbsp;<span style=\"color:#ff0909;\">|</span> &nbsp;&nbsp;  {{this.currentUser.Ticket}}: # {{ticketservice.formData.TicketId}}\n          <button class=\"btn text-danger pull-right\" [mat-dialog-close]><b>X</b></button>\n        </h2>\n\n</div>\n<hr>\n  <div class=\"form-row\">\n    <div class=\"form-group col-md-12\">\n        <table class=\"table\"\n        *ngIf=\"service.Engineerlist.length > 0\" >\n        <thead>\n            <tr>\n                <th style=\"width: 5%\">SNo</th>\n                <th style=\"width: 10%\">Image</th>\n                <th style=\"width: 40%\">Name</th>\n                <th style=\"width: 20%\">Phone</th>\n                <th style=\"width: 25%\">Email</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let x of service.Engineerlist; let i=index; async\">\n            <td>{{i + 1}}</td>\n                <td class=\"engineer-list-class\"> \n                    <img *ngIf=\"x.EngineerLogo.length === 0\" width=\"30px\"\n                    src=\"{{localPrependUrl}}/assets/svg/noimage.svg\" />\n                <img *ngIf=\"x.EngineerLogo.length > 0\" width=\"30px\"\n                    src=\"{{x.EngineerLogo}}\">\n                </td>\n                <td>{{x.EngineerName}}<br>\n                </td>\n                <td>{{x.EngineerPhone}}</td>\n                <td>{{x.EngineerEmail}}</td>\n            </tr>\n        </tbody>\n    </table><hr>\n    <div class=\"row\">\n        <i *ngIf=\"!service.Engineerlist\" class=\"fa fa-spinner fa-spin\" ></i>\n    </div>\n    </div>\n  </div>\n"]}