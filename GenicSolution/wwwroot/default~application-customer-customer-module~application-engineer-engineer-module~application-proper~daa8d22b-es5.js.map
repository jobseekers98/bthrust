{"version":3,"sources":["webpack:///src/app/generic-utils/Ticket-Icon-Attachment/TicketIconAttachment.module.ts","webpack:///src/app/services/closerDetails.module.ts","webpack:///src/app/generic-utils/Ticket-Icon-Attachment/TicketIconAttachment.component.ts","webpack:///src/app/services/serviceform.service.ts"],"names":["TicketIconAttachmentModule","imports","declarations","exports","CloserDetails","CloserAttachment","CloserAttachmentAduio","TicketIconAttachmentComponent","localPrependUrl","apiUrl","Name","length","ext","toLowerCase","split","pop","selector","template","Path","Status","ServiceformService","http","loginservice","TicketWiseServiceFormData","TicketServiceID","MasterServiceFormID","ServicePrefix","ServiceFormName","Description","TicketId","TicketNo","IsActive","IsPreview","ServiceFormSequenceId","ServiceDate","Date","TicketDate","EngineerId","EngineerName","IsHTML","ClientformIdOnSave","CloserId","CloserDetailsData","SetBlankServiceFormValue","FSMServiceFormData","Id","SelectOne","MaintenanceContract","Request","Diagnose","JobDone","Remark","ServiceTicketStatus","token","pipe","response","post","tempTicketwiseServiceFormList","get","toPromise","then","res","Response","closerid","ispreview","put","SequenceId","providedIn"],"mappings":"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","file":"default~application-customer-customer-module~application-engineer-engineer-module~application-proper~daa8d22b-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TicketIconAttachmentComponent } from './TicketIconAttachment.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule],\r\n  declarations: [TicketIconAttachmentComponent],\r\n  exports: [TicketIconAttachmentComponent]\r\n})\r\nexport class TicketIconAttachmentModule {}\r\n","export class CloserDetails {\n    CloserID: string;\n    CloserPrefix: string;\n    TicketId: string;\n    TicketNo: string;\n    TimerID: number;\n    EngineerId: string;\n    EnginnerName: string;\n    CustomerSignature: string;\n    EngineerSignature: string;\n    StartDate: Date;\n    EndDate: Date;\n    StartTime: string;\n    EndTime: string;\n    TotalDuration: string;\n    Remarks: string;\n    TicketFlag: string;\n    IsReady: boolean;\n    PaymentCollected: boolean;\n    CloserAmount?: number;\n    CloserGSTAmount?: number;\n    CloserTotalAmount?: number;\n    PaymentMode?: string;\n    AmountPaid?: number;\n    PaymentRemarks?: string;\n    NameOfSignatory?:string;\n    ICNo?:string;\n    EngineerName?: string;\n    ServiceBy?: string;\n    attentionName?: string;\n    attentionEmail?: string;\n    otherAttentionName?: string;\n    IsTested: boolean;\n    CheckedBy?: string;\n    WithCustomerSignature: boolean;\n    CloserAttachmentList: CloserAttachment[];\n}\nexport class CloserAttachment {\n    CAID: number;\n    CloserID: string;\n    AttachmentExtenstion: string;\n    AttachmentFile: string;\n    AttachmentSize: number;\n\tAttachmentExtenstionAfter: string;\n    AttachmentFileAfter: string;\n    AttachmentSizeAfter: number;\n    Remarks: string;\n    CloserAttachmentAduioList: CloserAttachmentAduio[];\n}\nexport class CloserAttachmentAduio {\n    AttachmentAudioId: string;\n    CloserID?: string;\n    CAID: number;\n    AttachmentAudioName: string;\n    AudioAttachment: string;\n    AudiotSize: number;\n    CreatedDate: Date;\n}\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n@Component({\r\n  selector: 'generic-ticket-icon-attachment',\r\n  template: `\r\n   \t<div class=\"col-md-12\" *ngIf=\"Status === 1\">\r\n        <img title=\"{{Name}}\" style=\"width:100px;\" src=\"{{localPrependUrl}}/assets/svg/{{ext}}.svg\">\r\n    </div>\r\n    <div class=\"col-md-12\" *ngIf=\"Status === 2\">\r\n        <div [ngSwitch]=\"ext\">\r\n              <div *ngSwitchCase=\"'png'\"><img title=\"{{Name}}\" style=\"width:100px;\" src=\"{{Path}}\"></div>\r\n              <div *ngSwitchCase=\"'jpg'\"><img title=\"{{Name}}\" style=\"width:100px;\" src=\"{{Path}}\"></div>\r\n              <div *ngSwitchCase=\"'jpeg'\"><img title=\"{{Name}}\" style=\"width:100px;\" src=\"{{Path}}\"></div>\r\n              <div *ngSwitchDefault><img title=\"{{Name}}\" style=\"width:100px;\" src=\"{{localPrependUrl}}/assets/svg/{{ext}}.svg\"></div>\r\n        </div>\r\n    </div>\r\n  `\r\n})\r\nexport class TicketIconAttachmentComponent implements OnInit {\r\n  @Input() Name: string;\r\n  @Input() Path: string;\r\n  @Input() Status: number;\r\n  localPrependUrl: string;\r\n  ext: string;\r\n  constructor() {\r\n    this.localPrependUrl =  environment.apiUrl;\r\n   }\r\n   ngOnInit() { \r\n         if(this.Name?.length > 0) {\r\n            this.ext = this.Name.toLowerCase().split('.').pop();\r\n            } else { this.ext = 'noimage'; }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Ticket } from './ticket.module';\nimport { FSMServiceForm, TicketWiseServiceForm } from './serviceform.module';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { Login } from 'src/app/services/login.mudule';\nimport { CloserDetails } from './closerDetails.module';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceformService {\n  currentUser: Login;\n  TicketForData: Ticket;\n  Ticketlist: Ticket[];\n  TicketWiseServiceFormList: TicketWiseServiceForm[];\n  TicketWiseServiceFormData: TicketWiseServiceForm;\n  tempTicketwiseServiceFormList: TicketWiseServiceForm[];\n  CloserDetailsData: CloserDetails;\n  FSMServiceFormData: FSMServiceForm;\n  constructor(private http: HttpClient, public loginservice: AuthenticationService) {\n    this.TicketWiseServiceFormData = {\n      TicketServiceID: 0,\n      MasterServiceFormID: 0,\n      ServicePrefix: '',\n      ServiceFormName: '',\n      Description: '',\n      TicketId: '00000000-0000-0000-0000-000000000000',\n      TicketNo: '',\n      IsActive: false,\n      IsPreview: true,\n      ServiceFormSequenceId: 0,\n      ServiceDate: new Date(),\n      TicketDate: new Date(),\n      EngineerId: '00000000-0000-0000-0000-000000000000',\n      EngineerName: '',\n      IsHTML: false,\n      ClientformIdOnSave: 0,\n      CloserId: '00000000-0000-0000-0000-000000000000'\n    };\n    \n    this.CloserDetailsData = new CloserDetails();\n    this.SetBlankServiceFormValue();\n  }\n  SetBlankServiceFormValue() {\n    this.FSMServiceFormData = {\n      Id: 0,\n      SelectOne: 'Service Call',\n      MaintenanceContract: 'No',\n      Request: '',\n      Diagnose: '',\n      JobDone: '',\n      Remark: '',\n      ServiceTicketStatus: 'Pending',\n      CloserId:''\n    };\n  }\n  removeAssignedServiceForm(token: string, Id: string) {\n    return this.http.delete(environment.apiUrl + '/api/Services/DeleteAssignedServiceForm/' + token + '/' + Id).pipe(map(response => response));\n  }\n  asignServiceformToTicket(token: string) {\n    return this.http.post(environment.apiUrl + '/api/Services/asignServiceformToTicket/' + token, this.tempTicketwiseServiceFormList).pipe(map(response => response));\n  }\n  getAssignedServiceFormListByTicket(token: string, TicketId: string) {\n    return this.http.get(environment.apiUrl + '/api/Services/GetAssignedServiceFormByTicket/' + token + '/' + TicketId).pipe(map(response => response));\n  }\n  // GET: Closer Details form cliend service form\n  getCloserDetailsFormServiceForm(TicketId: string) {\n    this.http.get(environment.apiUrl + '/api/Services/getCloserDetailsFormServiceForm/' + TicketId).toPromise().then(res => this.CloserDetailsData = res as CloserDetails);\n  }\n  downoadServiceFormPDF(CloserId) {\n    return this.http.get(environment.apiUrl + '/api/Services/getServiceFormPDF/' + CloserId).pipe(map(Response => {return Response;}));\n  }\n  // downloadFileXHR(filePath, fileName) {\n  //   var xhh = new XMLHttpRequest()\n  //   xhh.setRequestHeader('Accept', '*/*');\n  //   xhh.open('get', filePath)\n  //   xhh.responseType = 'blob'\n  //   xhh.onreadystatechange = function () {\n  //     if (xhh.readyState === 4 && xhh.status === 200) {\n  //       var blob = new Blob([xhh.response])\n  //       var csvUrl = URL.createObjectURL(blob)\n  //       var link = document.createElement('a')\n  //       link.href = csvUrl\n  //       link.download = fileName\n  //       link.click()\n  //     }\n  //   }\n  //   xhh.send()\n  // }\n\n  // //#region Hypercom Service Form\n  // postServiceformData(token: string, TicketId: string, EngineerId: string, ServiceFormSequenceId: number) {\n  //   return this.http.post(environment.apiUrl + '/api/Services/postServiceForm/' + token + '/'\n  //   + TicketId + '/' + EngineerId + '/' + ServiceFormSequenceId, this.formDataList, {\n  //     headers: new HttpHeaders({ 'Content-Type': 'application/json'}),\n  //     observe: 'response' }).pipe();\n  // }\n  // viewServiceFormDetails(MasterServiceFormId: number, ServiceFormSequenceId: number, TicketId: string, EngineerId: string) {\n  //   return this.http.get(environment.apiUrl + '/api/Services/viewServiceFormDetails/' + MasterServiceFormId + '/' + ServiceFormSequenceId + '/' + TicketId + '/' + EngineerId).pipe(map(Response => Response));\n  // }\n  // getServiceForm(id: number) {\n  //   return this.http.get(environment.apiUrl + '/api/Services/getServiceForm/' + id).pipe(map(Response => Response));\n  // }\n  // getMasterServiceformList(token: string) {\n  //   return this.http.get(environment.apiUrl + '/api/Services/GetMasterServiceForm/' + token).pipe(map(Response => Response));\n  // }\n  CheckServiceFormStatus(token: string, closerid: string) {\n    return this.http.get(environment.apiUrl + '/api/Services/CheckServiceFormStatus/' + token + '/' + closerid)\n    .pipe(map(Response => Response));\n  }\n  // //#endregion\n\n//#region FSM Service Form\ngetFSMServiceFormById(token: string, Id: string, ) {\n  return this.http.get(environment.apiUrl + '/api/Services/GetServiceFormById/' + token + '/' + Id).pipe(map(response => response));\n}\nputFSMServiceFormDetails(token: string,  TicketId: string, ispreview: boolean) {\n  return this.http.put(environment.apiUrl + '/api/Services/PutServiceForm/' + token + '/' + TicketId + '/' + ispreview, this.FSMServiceFormData).pipe(map( response => response));\n}\npostFSMServiceFormDetails(token: string, TicketId: string, SequenceId: number, ispreview: boolean) {\n  return this.http.post(environment.apiUrl + '/api/Services/PostServiceForm/' + token + '/' + TicketId + '/' + SequenceId + '/' + ispreview, this.FSMServiceFormData)\n  .pipe(map( response => response));\n}\n//#endregion\n}\n"]}