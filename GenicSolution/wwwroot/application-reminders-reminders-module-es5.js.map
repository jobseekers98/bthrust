{"version":3,"sources":["webpack:///src/app/application/reminders/reminder/reminder.component.ts","webpack:///src/app/application/reminders/reminder/reminder.component.html","webpack:///src/app/services/reminder.service.ts","webpack:///src/app/application/reminders/reminders.component.ts","webpack:///src/app/application/reminders/reminders.module.ts"],"names":["ReminderComponent","titleService","reminderservice","loginservice","toastr","dtOptions","dtTrigger","dropdownbtnavgrev","dropdowntype","dropdowntypevalue","trname","currentUser","subscribe","x","pagingType","paging","ordering","lengthMenu","getAllReminders","Token","res","response","Message","data","tempdata","result","next","changetype","error","console","log","setTitle","t","filter","s","IsActive","dtElement","dtInstance","then","destroy","e","id","index","type","fire","title","text","showCancelButton","cancelButtonColor","confirmButtonColor","confirmButtonText","cancelButtonText","value","timer","loadData","dismiss","DismissReason","cancel","putReminderStatus","success","MessageDescription","target","checked","templateUrl","styleUrls","ReminderService","http","TicketReminder","Id","TicketId","Subject","Body","MailTo","RecurringStartDate","RecurringEndDate","Duration","VisitFrequency","ReminderDate","InvoiceReminder","InvoiceId","QuoteReminder","QuoteId","r","get","apiUrl","pipe","put","post","qid","providedIn","RemindersComponent","template","routes","path","component","children","RemindersModule","forRoot","apiKey","googleapiKey","forChild","declarations","imports"],"mappings":"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","file":"application-reminders-reminders-module-es5.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { Login } from 'src/app/services/login.mudule';\nimport { DataTableDirective } from 'angular-datatables';\nimport { Subject } from 'rxjs/internal/Subject';\nimport { ReminderService } from 'src/app/services/reminder.service';\nimport { ToastrService } from 'ngx-toastr';\nimport Swal from 'sweetalert2';\nimport { Title } from '@angular/platform-browser';\n@Component({\n  templateUrl: './reminder.component.html',\n  styleUrls: [],\n})\nexport class ReminderComponent implements OnInit {\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  currentUser: Login;\n  dropdownbtnavgrev: string;\n  trname: string;\n  dropdowntype: string;\n  dropdowntypevalue: number;\n  data: any;\n  tempdata: any;\n  constructor(\n    public titleService: Title,\n    public reminderservice: ReminderService,\n    public loginservice: AuthenticationService,\n    private toastr: ToastrService\n  ) {\n    this.dropdownbtnavgrev = 'Ticket Reminders';\n    this.dropdowntype = 'Active Reminders';\n    this.dropdowntypevalue = 1;\n    this.trname = 'ticket';\n    this.loginservice.currentUser.subscribe(x => this.currentUser = x);\n    this.dtOptions = { pagingType: 'full_numbers', paging: true, ordering: false, lengthMenu: [10, 25, 50, 75, 100] };\n  }\n\n  ngOnInit() {\n    this.reminderservice.getAllReminders(this.currentUser.Token, 'ticket').subscribe(res => {\n      if (res) {\n        const response = res as any;\n        if (response.Message === 'success') {\n          this.data = [];\n          this.tempdata = [];\n          this.data = response.result;\n          this.tempdata = response.result;\n          this.dtTrigger.next();\n          this.changetype(this.dropdowntypevalue);\n        }\n      }\n    }, error => console.log(error));\n    this.titleService.setTitle(this.dropdownbtnavgrev + ' | Genic Solution');\n  }\n\n  loadData(t: string) {\n    this.trname = t;\n    this.dropdownbtnavgrev = t;\n    this.reminderservice.getAllReminders(this.currentUser.Token, t).subscribe(res => {\n      if (res) {\n        const response = res as any;\n        if (response.Message === 'success') {\n          this.data = [];\n          this.tempdata = [];\n          this.data = response.result;\n          this.tempdata = response.result;\n          this.changetype(this.dropdowntypevalue);\n        }\n      }\n    }, error => console.log(error));\n    switch (t) {\n      case 'ticket': this.dropdownbtnavgrev = 'Ticket Reminders'; break;\n      case 'quote': this.dropdownbtnavgrev = 'Quotation Reminders'; break;\n      case 'invoice': this.dropdownbtnavgrev = 'Invoice Reminders'; break;\n      case 'warranty': this.dropdownbtnavgrev = 'Warranty Reminders'; break;\n    }\n  }\n  changetype(t: number) {\n    this.dropdowntypevalue = t;\n    switch (t) {\n      case 0: this.dropdowntype = 'InActive Reminders'; this.data = this.tempdata.filter(s => s.IsActive === false); break;\n      case 1: this.dropdowntype = 'Active Reminders'; this.data = this.tempdata.filter(s => s.IsActive === true); break;\n      case 2: this.dropdowntype = 'All Reminders'; this.data = this.tempdata; break;\n      default: this.dropdowntype = 'All Reminders'; this.data = this.tempdata; break;\n    }\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      dtInstance.destroy();\n      this.dtTrigger.next();\n    });\n  }\n  onWorkerStatusChange(e, id: number, index) {\n    let type = '';\n        switch (this.dropdownbtnavgrev) {\n          case 'Ticket Reminders': type = 'ticket'; break;\n          case 'Quotation Reminders': type = 'quote'; break;\n          case 'Invoice Reminders': type = 'invoice'; break;\n          case 'Warranty Reminders': type = 'warranty'; break;\n          default: type = 'ticket'; break;\n        }\n    Swal.fire({\n      title: 'Are you sure?',\n      text: 'Once a reminder is inactive you cannot revert it?',\n      type: 'warning',\n      showCancelButton: true,\n      cancelButtonColor: '#f8bb86',\n      confirmButtonColor: '#3085d6',\n      confirmButtonText: 'Cancel',\n      cancelButtonText: 'Yes, Inactive Reminder!',\n    }).then((result) => {\n      if (result.value) {\n        Swal.fire({\n          title: 'keep it!',\n          text: 'Action is skip by you.',\n          type: 'info',\n          timer: 2000\n        });\n        this.loadData(type);\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        this.reminderservice.putReminderStatus(this.currentUser.Token, id, type).subscribe(res => {\n          if (res) {\n            const response = res as any;\n            if (response.Message === 'success') {\n              this.toastr.success('success', response.MessageDescription);\n              this.data[index].IsActive = e.target.checked;\n              this.loadData(type);\n            }\n          }\n        }, error => console.log(error));\n      }\n    });\n  }\n}\n","<div class=\"kt-content kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n  <div class=\"kt-subheader kt-grid__item\" id=\"kt_subheader\">\n    <div class=\"kt-container kt-container--fluid \">\n      <div class=\"kt-subheader__main\">\n        <h3 class=\"kt-subheader__title\">\n          <a href=\"javascript:;\" routerLink=\"/dashboard\">\n            Dashboard\n          </a>\n        </h3>\n        <span class=\"kt-subheader__separator kt-hidden\"></span>\n        <div class=\"kt-subheader__breadcrumbs\">\n          <i class=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>\n          <span class=\"kt-subheader__breadcrumbs-separator\"></span> Reminders\n        </div>\n      </div>\n      <div class=\"kt-subheader__toolbar\">\n        <div class=\"kt-subheader__wrapper\">\n\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"customer-list-main-section\">\n    <div class=\"kt-widget17\">\n      <div class=\"kt-widget17__visual kt-widget17__visual--chart kt-portlet-fit--top kt-portlet-fit--sides\"\n        style=\"background-color: #fd397a\">\n      </div>\n      <div class=\"kt-widget17__stats\">\n        <div class=\"kt-widget17__items\">\n        </div>\n        <div class=\"kt-section kt-drop-section\">\n          <div class=\"kt-portlet__body customer-listing-datatable\">\n            <div class=\"panel panel-primary list-panel\" id=\"list-panel\">\n              <div class=\"panel-heading list-panel-heading\">\n                <h1 class=\"panel-title list-panel-title\"><i class=\"fa fa-list\"></i> Reminder List</h1>\n                <ul class=\"scFilter\">\n                  <li>\n                      <div class=\"btn-group btn-group-sm\">\n                          <a href=\"javascript:;\" class=\"btn btn-primary dropdown-toggle\"\n                              data-toggle=\"dropdown\">{{ dropdownbtnavgrev }} <span\n                                  class=\"caret\"></span></a>\n                          <ul class=\"dropdown-menu\" style=\"text-align: left;padding: 0;\">\n                              <li *ngIf=\"currentUser.Permissions.TicketView\" style=\"width: 100%;\"><a (click)=\"loadData('ticket')\" href=\"javascript:;\">{{this.currentUser.Ticket}} Reminders</a></li>\n                              <li *ngIf=\"currentUser.Permissions.QuoteView\" style=\"width: 100%;\"><a (click)=\"loadData('quote')\" href=\"javascript:;\">Quotation Reminders</a></li>\n                              <li *ngIf=\"currentUser.Permissions.InvoiceView\" style=\"width: 100%;\"><a (click)=\"loadData('invoice')\" href=\"javascript:;\">Invoice Reminders</a></li>\n                          </ul>\n                      </div>\n                  </li>\n                  <li>\n                    <div class=\"btn-group btn-group-sm\">\n                        <a href=\"javascript:;\" class=\"btn btn-primary dropdown-toggle\"\n                            data-toggle=\"dropdown\">{{ dropdowntype }} <span\n                                class=\"caret\"></span></a>\n                        <ul class=\"dropdown-menu\" style=\"text-align: left;padding: 0;\">\n                          <li style=\"width: 100%;\"><a (click)=\"changetype(2)\" href=\"javascript:;\">All Reminders</a></li>\n                          <li style=\"width: 100%;\"><a (click)=\"changetype(1)\" href=\"javascript:;\">Active Reminders</a></li>\n                          <li style=\"width: 100%;\"><a (click)=\"changetype(0)\" href=\"javascript:;\">InActive Reminders</a></li>\n                        </ul>\n                    </div>\n                </li>\n              </ul>\n              </div>\n              <div class=\"panel-body\">\n                <div *ngIf=\"!data\" class=\" col-md-12 alert alert-info\">Loading... </div>\n                <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\"\n                  class=\"table table-striped properies-table-info ng-star-inserted\">\n                  <thead>\n                    <tr role=\"row\">\n                      <th width=\"5%\">SNo</th>\n                      <th width=\"10%\">\n                        <span *ngIf=\"this.trname === 'quote'\">QuoteId</span>\n                        <span *ngIf=\"this.trname === 'invoice'\">InvoiceId</span>\n                        <span *ngIf=\"this.trname === 'ticket'\">{{this.currentUser.Ticket}}Id</span>\n                      </th>\n                      <th width=\"15%\">Subject</th>\n                      <th width=\"35%\">Body</th>\n                      <th width=\"10%\">Mail To</th>\n                      <th width=\"20%\">Reminder Date</th>\n                      <th width=\"5%\">IsActive</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr *ngFor=\"let x of data; let i=index; async\">\n                      <td>{{data.length - i}}</td>\n                      <td>{{x.RNo}}</td>\n                      <td>{{x.Subject}}</td>\n                      <td>{{x.Body}}</td>\n                      <td>{{x.MailTo}}</td>\n                      <td>{{x.ReminderDate | date:'EEEE, MMMM d, y':'+0000'}}</td>\n                      <td>\n                        <div *ngIf=\"x.IsActive\" class=\"custom-switch custom-switch-label-yesno pl-0\">\n                          <input class=\"custom-switch-input ng-valid ng-dirty ng-touched\"\n                            (change)=\"onWorkerStatusChange($event, x.Id, i)\" id=\"example_{{i}}\" name=\"x.IsActive\"\n                            #x.IsActive=\"ngModel\" [(ngModel)]=\"x.IsActive\" type=\"checkbox\">\n                          <label class=\"custom-switch-btn\" for=\"example_{{i}}\"></label>\n                        </div>\n                        <span *ngIf=\"!x.IsActive\"\n                        class=\"ticketstatus statusoverdue\">No</span>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { map } from 'rxjs/operators';\nimport { TicketReminder } from './ticket.module';\nimport { QuoteReminder } from './quote.module';\nimport { InvoiceReminder } from './invoice.module';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReminderService {\n  TicketReminder: TicketReminder;\n  TicketReminderList: TicketReminder[];\n  QuoteReminder: QuoteReminder;\n  QuoteReminderList: QuoteReminder[];\n  InvoiceReminder: InvoiceReminder;\n  InvoiceReminderList: InvoiceReminder[];\n  constructor(private http: HttpClient) {\n    this.TicketReminder = {\n      Id: 0,\n      TicketId: '00000000-0000-0000-0000-000000000000',\n      Subject: '',\n      Body: '',\n      MailTo: '',\n      RecurringStartDate: null,\n      RecurringEndDate: null,\n      Duration: 0,\n      VisitFrequency: 0,\n      ReminderDate: null,\n      IsActive: true\n    }\n    this.InvoiceReminder = {\n      Id: 0,\n      InvoiceId: '00000000-0000-0000-0000-000000000000',\n      Subject: '',\n      Body: '',\n      MailTo: '',\n      RecurringStartDate: null,\n      RecurringEndDate: null,\n      Duration: 0,\n      VisitFrequency: 0,\n      ReminderDate: null,\n      IsActive: true\n    }\n    this.QuoteReminder = {\n      Id: 0,\n      QuoteId: '00000000-0000-0000-0000-000000000000',\n      Subject: '',\n      Body: '',\n      MailTo: '',\n      RecurringStartDate: null,\n      RecurringEndDate: null,\n      Duration: 0,\n      VisitFrequency: 0,\n      ReminderDate: null,\n      IsActive: true\n    }\n   }\n  public getReminder(t: string, r: string, type: string) {\n    return this.http.get(environment.apiUrl + '/api/Reminder/GetReminders/' + t + '/' + r + '/' + type).pipe(map(response => {return response;}));\n  }\n  public getAllReminders(t: string, type: string) {\n    return this.http.get(environment.apiUrl + '/api/Reminder/GetAllReminders/' + t + '/' + type).pipe(map(response => {return response;}));\n  }\n  public putReminderStatus(t: string, id: number, type: string) {\n    return this.http.put(environment.apiUrl + '/api/Reminder/PutReminderStatus/' + t + '/' + id + '/' + type, null).pipe(map(response => {return response;}));\n  }\n  public postQuoteReminder(t: string, type: string) {\n    return this.http.post(environment.apiUrl + '/api/Reminder/PostReminder/' + t + '/' + type, this.QuoteReminder).pipe(map(response => {return response;}));\n  }\n  public removeQuoteReminder(t: string, id: number, qid: string, type: string) {\n    return this.http.delete(environment.apiUrl + '/api/Reminder/DeleteQuotationReminder/' + t + '/' + id  + '/' + qid + '/' + type).pipe(map(response => {return response;}));\n  }\n}\n\n","import { Component, OnInit } from '@angular/core';\n@Component({template: '<router-outlet></router-outlet>'})\nexport class RemindersComponent implements OnInit  {\n  ngOnInit() {}\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common'; \r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AgmCoreModule } from '@agm/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ReminderComponent } from './reminder/reminder.component';\r\nimport { RemindersComponent } from './reminders.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: RemindersComponent,\r\n            children: [\r\n              { path: 'reminder', component: ReminderComponent }\r\n            ]},\r\n];\r\n@NgModule({\r\n  declarations: [RemindersComponent,ReminderComponent],\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    DataTablesModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    AgmCoreModule.forRoot({ apiKey: environment.googleapiKey }),\r\n    RouterModule.forChild(routes)\r\n  ]\r\n})\r\nexport class RemindersModule { }\r\n"]}