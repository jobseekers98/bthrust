{"version":3,"sources":["./src/app/services/notification.service.ts","./src/app/ngb-time-to-string-adapter.ts","./src/app/ngb-date-to-string-adapter.ts"],"names":[],"mappings":"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","file":"default~application-calendar-calendar-module~application-closer-update-popup-closer-update-popup-mod~2871a86b-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Notification, NotificationTemplate } from './notification.module';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { map } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n  NotificationData: Notification;\n  NotificationTemplateData: NotificationTemplate;\n  NotificationTemplateList: NotificationTemplate[];\n\n  constructor(private http: HttpClient) {\n    this.SetNotificationDefault();\n    this.SetNotificationTemplateDefault();\n    this.NotificationTemplateList = [];\n   }\n\n  SetNotificationDefault() {\n    this.NotificationData = {\n    Id: '00000000-0000-0000-0000-000000000000',\n    CreateTicketCustomer: false,\n    CreateTicketEngineer: false,\n    CreateTicketAdmin: false,\n    AllocateTicketCustomer: false,\n    AllocateTicketEngineer: false,\n    AllocateTicketAdmin: false,\n    ReAllocateTicketCustomer: false,\n    ReAllocateTicketEngineer: false,\n    ReAllocateTicketAdmin: false,\n    RescheduleTicketCustomer: false,\n    RescheduleTicketEngineer: false,\n    RescheduleTicketAdmin: false,\n    CompletionTicketCustomer: false,\n    CompletionTicketAdmin: false,\n    HoldTicketCustomer: false,\n    HoldTicketAdmin: false,\n    WorkOrderCustomer: false,\n    WorkOrderAdmin: false,\n    QuoteCustomer: false,\n    QuoteAdmin: false,\n    StartEndTicketCustomer: false,\n    StartEndTicketAdmin: false,\n    ReminRecurTicketCustomer: false,\n    ReminRecurTicketEngineer: false,\n    ReminRecurTicketAdmin: false,\n    DailyNosOfTicketEngineer: false,\n    CancelTicketCustomer: false,\n    CancelTicketEngineer: false,\n    CancelTicketAdmin: false,\n    OnServiceDayCustomer: false,\n    OnServiceDayEngineer: false,\n    OnServiceDayAdmin: false,\n    OnTheDayCustomer: false,\n    OnTheDayTicketAdmin: false\n    }\n  }\n  SetNotificationTemplateDefault() {\n    this.NotificationTemplateData = {\n    Id: '00000000-0000-0000-0000-000000000000',\n    TemplateName: '',\n    ModuleName:'',\n    CustomerMailBody: '',\n    MobileNotification: '',\n    IsRead: false,\n    EngineerMailBody: '',\n    AdminMailBody: '',\n    IsActive: true\n    }\n  }\ngetNotification(token: string) {\n  return this.http.get(environment.apiUrl + '/api/Notifications/GetModuleNotification/' + token)\n      .pipe(map(\n          Response => {\n              return Response;\n  }));\n}\n\nputNotificationDetails(token: string) {\n  return this.http.put(environment.apiUrl + '/api/Notifications/putModuleNotifications/' + token, this.NotificationData)\n  .pipe(map(\n    response => {\n      return response;\n  }));\n}\n\n//-----------------------Email template Section ---------------------------------------------//\n//get template list\ngetEmailTemplateList() {\n  return this.http.get(environment.apiUrl + '/api/Notifications/getEmailTemplateList')\n      .pipe(map(\n          Response => {\n              return Response;\n  }));\n}\n\n//get template details\ngetEmailTemplate(Id) {\n  return this.http.get(environment.apiUrl + '/api/Notifications/getEmailTemplate/' + Id)\n      .pipe(map(\n          Response => {\n              return Response;\n  }));\n}\n// Add Email template\nAddEmailTemplate() {\n  return this.http.post(environment.apiUrl + '/api/Notifications/AddEmailTemplate', this.NotificationTemplateData)\n  .pipe(map(\n    response => {\n      return response;\n  }));\n}\n\n// Update Email template\nUpdateEmailTemplate() {\n  return this.http.put(environment.apiUrl + '/api/Notifications/UpdateEmailTemplate', this.NotificationTemplateData)\n  .pipe(map(\n    response => {\n      return response;\n  }));\n}\nchangeNotificationTemplateStatus(Id, CurrStatus) {\n  return this.http.post(environment.apiUrl + '/api/Notifications/changeNotificationTemplateStatus/' + Id + '/' + CurrStatus , null , {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' }), observe: 'response'\n  }).pipe();\n}\n\n// Send Quote Notification\nquoteEmailNotification(QuoteId?: string, isCust?: boolean, isAdmin?: boolean, AdminId?: string) {\n  return this.http.post(environment.apiUrl + '/api/Notifications/quoteEmailNotification/' + QuoteId + '/' +\n  isCust + '/' + isAdmin + '/' + AdminId , null)\n  .pipe(map(\n    response => {\n      return response;\n  }));\n}\n// Send Quote Notification\nupdateQuoteEmailNotification(QuoteId?: string, isCust?: boolean, isAdmin?: boolean, AdminId?: string) {\n  return this.http.post(environment.apiUrl + '/api/Notifications/UpdatequoteEmailNotification/' + QuoteId + '/' +\n   isCust + '/' + isAdmin + '/' + AdminId , null)\n  .pipe(map(\n    response => {\n      return response;\n  }));\n}\n//Send Work order Notification\nWorkOrderEmailNotification(CloserId?: string, AdminId?: string) {\n  return this.http.post(environment.apiUrl + '/api/Notifications/WorkOrderEmailNotification/' + CloserId + '/' + AdminId, null)\n  .pipe(map(\n    response => {\n      return response;\n  }));\n}\n//Send New Ticket  Notification\nNewTicketEmailNotification(TicketId?: string, isCust?: boolean, isAdmin?: boolean, AdminId?: string) {\n  return this.http.post(environment.apiUrl + '/api/Notifications/TicketEmailNotification/' + TicketId + '/' +\n  isCust + '/' + isAdmin + '/' + AdminId , null)\n  .pipe(map(\n    response => {\n      return response;\n  }));\n}\n//Re-Schedule ticket notification\nReScheduleTicketEmailNotification(oldEngList, TicketId?: string, AdminId?: string, OldDate?: Date, OldTime?: string) {\n  return this.http.post(environment.apiUrl + '/api/Notifications/ReScheduleTicketBodyTemplate/' + TicketId+ '/' + AdminId +'/' + OldDate + '/' + OldTime , oldEngList)\n  .pipe(map(\n    response => {\n      return response;\n  }));\n}\n//Completion ticket notification\nStartTicketEmailNotification(TicketId?: string) {\n  return this.http.post(environment.apiUrl + '/api/Notifications/StartTicketEmailNotification/' + TicketId , null)\n  .pipe(map(\n    response => {\n      return response;\n  }));\n}\n//Completion ticket notification\nCompletionTicketEmailNotification(CloserId?: string) {\n  return this.http.post(environment.apiUrl + '/api/Notifications/CompletionTicketEmailNotification/' + CloserId, null)\n  .pipe(map(\n    response => {\n      return response;\n  }));\n}\n//Completion ticket notification\nHoldTicketEmailNotification(CloserId?: string) {\n  return this.http.post(environment.apiUrl + '/api/Notifications/HoldTicketEmailNotification/' + CloserId , null)\n  .pipe(map(\n    response => {\n      return response;\n  }));\n}\n//Cancelled ticket notification\nCancelledTicketEmailNotification(TicketId?: string, AdminId?: string) {\n  return this.http.post(environment.apiUrl + '/api/Notifications/CancelledTicketEmailNotification/' + TicketId+ '/' + AdminId , null)\n  .pipe(map(\n    response => {\n      return response;\n  }));\n}\n//Re-Allocation ticket notification\nReAllocationTicketEmailNotification(oldEngList, TicketId, isCust, isAdmin, AdminId) {\n  return this.http.post(environment.apiUrl + '/api/Notifications/ReAllocationTicketEmailNotificationss/'\n  + TicketId + '/' + isCust + '/' + isAdmin + '/' + AdminId , oldEngList)\n  .pipe(map(\n    response => {\n      return response;\n  }));\n}\n}\n","/** Outer dependencies */\r\nimport { Injectable } from '@angular/core';\r\nimport { NgbTimeStruct, NgbTimeAdapter } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nfunction isInteger(value: any): value is number {\r\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\r\n}\r\n\r\nfunction isString(value: any): value is string {\r\n  return typeof value === 'string';\r\n}\r\n\r\n@Injectable()\r\nexport class NgbTimeToStringAdapter extends NgbTimeAdapter<string> {\r\n  private year: number = new Date().getUTCFullYear();\r\n  private month: number = new Date().getUTCMonth() + 1;\r\n  private day: number = new Date().getUTCDate();\r\n\r\n  /**\r\n   * Converts user-model date into an NgbTimeStruct for internal use in the library\r\n   */\r\n  public fromModel(dateString: string): NgbTimeStruct {\r\n    const date = new Date(dateString);\r\n    const isValidDate = !isNaN(date.valueOf());\r\n\r\n    if (!dateString || !isString(dateString) || !isValidDate) {\r\n      return null;\r\n    }\r\n\r\n    this.year = date.getUTCFullYear();\r\n    this.month = date.getUTCMonth() + 1;\r\n    this.day = date.getUTCDate();\r\n\r\n    return { hour: date.getUTCHours(), minute: date.getUTCMinutes(), second: date.getUTCSeconds() };\r\n  }\r\n\r\n  /**\r\n   * Converts internal time value NgbTimeStruct to user-model date\r\n   * The returned type is supposed to be of the same type as fromModel() input-value param\r\n   */\r\n  public toModel(time: NgbTimeStruct): string {\r\n    if (time && isInteger(time.hour) && isInteger(time.minute) && isInteger(time.second)) {\r\n      const year = this.year.toString().padStart(2, '0');\r\n      const month = this.month.toString().padStart(2, '0');\r\n      const day = this.day.toString().padStart(2, '0');\r\n\r\n      const hour = time.hour.toString().padStart(2, '0');\r\n      const minute = time.minute.toString().padStart(2, '0');\r\n      const second = time.second.toString().padStart(2, '0');\r\n\r\n      return `${year}-${month}-${day}T${hour}:${minute}:${second}Z`;\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n","/** Outer dependencies */\r\nimport { Injectable } from '@angular/core';\r\nimport { NgbDateStruct, NgbDateAdapter } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nfunction isInteger(value: any): value is number {\r\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\r\n}\r\n\r\nfunction isString(value: any): value is string {\r\n  return typeof value === 'string';\r\n}\r\n\r\n@Injectable()\r\nexport class NgbDateToStringAdapter extends NgbDateAdapter<string> {\r\n  private hour = 0;\r\n  private minute = 0;\r\n  private second = 0;\r\n\r\n  /**\r\n   * Converts user-model date into an NgbDateStruct for internal use in the library\r\n   */\r\n  public fromModel(dateString: string): NgbDateStruct {\r\n    const date = new Date(dateString);\r\n\r\n    const isValidDate = (!isNaN(date.valueOf()));\r\n\r\n    if (!dateString || !isString(dateString) || !isValidDate) {\r\n      return null;\r\n    }\r\n\r\n    this.hour = date.getUTCHours();\r\n    this.minute = date.getUTCMinutes();\r\n    this.second = date.getUTCSeconds();\r\n\r\n    return { year: date.getUTCFullYear(), month: date.getUTCMonth() + 1, day: date.getUTCDate() };\r\n  }\r\n\r\n  /**\r\n   * Converts internal date value NgbDateStruct to user-model date\r\n   * The returned type is supposed to be of the same type as fromModel() input-value param\r\n   */\r\n  public toModel(date: NgbDateStruct): string {\r\n    if (date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)) {\r\n      const year = date.year.toString().padStart(2, '0');\r\n      const month = date.month.toString().padStart(2, '0');\r\n      const day = date.day.toString().padStart(2, '0');\r\n\r\n      const hour = this.hour.toString().padStart(2, '0');\r\n      const minute = this.minute.toString().padStart(2, '0');\r\n      const second = this.second.toString().padStart(2, '0');\r\n\r\n      return `${year}-${month}-${day}T${hour}:${minute}:${second}Z`;\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}