{"version":3,"sources":["webpack:///src/app/auth/from-drive.component.ts","webpack:///src/app/auth/auth.component.ts","webpack:///src/app/auth/auth.component.html","webpack:///src/app/auth/customer-ticket-feedback.component.ts","webpack:///src/app/auth/customer-ticket-feedback.component.html","webpack:///src/app/auth/auth.module.ts","webpack:///src/app/auth/customer-quote-for-signature.component.ts","webpack:///src/app/auth/customer-quote-for-signature.component.html"],"names":["FromDriveComponent","service","router","route1","toastr","loading","currentUser","subscribe","x","token","snapshot","queryParamMap","get","aut","navigate","login","Token","Id","Drivelogin","res","response","Message","warning","MessageDescription","error","console","log","template","styles","AuthComponent","titleService","formBuilder","route","title","submitted","localPrependUrl","apiUrl","currentUserValue","loginForm","group","UserName","required","Password","returnUrl","queryParams","setTitle","controls","invalid","f","value","pipe","status","ErrorMessage","statusText","code","onSubmit","selector","templateUrl","CustomerTicketFeedbackComponent","loginservice","genericservice","isValid","IsLoading","_feedbackcount","ratingcount","alreadyfeedback","val","rating","text1","class1","_rating","Number","getTicketFreedback","result","Rating","tempdata","RatingFeedback","description","document","getElementById","putTicketFreedback","v","length","r","routes","path","component","AuthModule","forChild","declarations","imports","CustomerQuoteForSignatureComponent","logService","quoteService","CustomerSignaturePadOption","pecColor","backgroundcolor","canvasWidth","canvasHeight","temptQuoteStatus","getQuoteDetailsForSign","QuoteData","Status","CustBase64","CustomerSingnaturePad","toDataURL","CustomerSignature","updateQuoteSignaturewithRemark","clear"],"mappings":"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","file":"auth-auth-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Login } from '../services';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\n@Component({\r\n  template: `\r\n           <div *ngIf=\"loading\" class=\"row\" style=\"background-color: blue;font-size: 15px;color: white;\">\r\n              <div class=\"col text-center\">\r\n                <div class=\"spinner-grow text-success\" role=\"status\">\r\n                  <span class=\"sr-only\">Loading...</span>\r\n                </div>Authenticate...\r\n              </div>\r\n          </div>\r\n          `,\r\n  styles: [``]\r\n})\r\nexport class FromDriveComponent implements OnInit {\r\n  currentUser: Login;\r\n  loading: boolean = false;\r\n  constructor(\r\n    public service: AuthenticationService,\r\n    private router: Router,\r\n    private route1: ActivatedRoute,\r\n    private toastr: ToastrService\r\n    ) {\r\n        this.service.currentUser.subscribe(x => this.currentUser = x);\r\n       \r\n    }\r\n    ngOnInit(): void {\r\n      try {\r\n      const token = this.route1.snapshot.queryParamMap.get('t');\r\n      const aut = this.route1.snapshot.queryParamMap.get('a');\r\n      if (token === null) { this.router.navigate(['/auth/']); }\r\n      if (aut === null) { this.router.navigate(['/auth/']); }\r\n      if (this.currentUser === null) {\r\n          this.login(aut);\r\n      } else {\r\n        if(this.currentUser.Token === token) {\r\n          this.router.navigate(['/dashboard/']);\r\n          } else { this.login(aut); }\r\n      } \r\n    }\r\n    catch { this.router.navigate(['/auth/']); }\r\n  }\r\n\r\n  login(Id) {\r\n    this.loading = true;\r\n    this.service.Drivelogin(Id).subscribe(res => {\r\n      if (res) { const response = res as any;\r\n        if (response.Message === 'success') {\r\n          this.router.navigate(['/dashboard/']);\r\n          this.loading = false;\r\n        }\r\n        if (response.Message === 'failure') {\r\n          this.toastr.warning(response.MessageDescription);\r\n          this.loading = false;\r\n          }\r\n      }\r\n    }, error => { console.log(error); this.loading = false;  });\r\n  }\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Title } from '@angular/platform-browser';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { first } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { Login } from '../services';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styles: [``]\n})\nexport class AuthComponent implements OnInit {\n  currentUser: Login;\n  title = 'ClientApp';\n  loginForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n  error = '';\n  localPrependUrl: string;\n  constructor(\n    public titleService: Title,\n    public service: AuthenticationService,\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService\n    ) {\n        this.service.currentUser.subscribe(x => this.currentUser = x);\n        this.localPrependUrl = environment.apiUrl;\n        if (this.service.currentUserValue) {\n         // this.router.navigate(['/']);\n         }\n    }\n    ngOnInit(): void {\n      this.loginForm = this.formBuilder.group({\n          UserName: ['', Validators.required],\n          Password: ['', Validators.required]\n      });\n      this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n      this.titleService.setTitle('Login | Genic Solution');\n  }\n  get f() { return this.loginForm.controls; }\n\n    onSubmit() {\n        this.error = '';\n        this.submitted = true;\n        if (this.loginForm.invalid) { return; }\n        this.loading = true;\n        this.service.login(this.f.UserName.value, this.f.Password.value).pipe(first()).subscribe(\n                res => { this.router.navigate([this.returnUrl]); },\n                error => {\n                  switch (error.status) {\n                          case 404 : this.toastr.warning('warning', this.ErrorMessage(error.status));\n                                     this.error = this.ErrorMessage(error.status); break;\n                          case 401 : this.toastr.warning('warning', this.ErrorMessage(error.status));\n                                     this.error = this.ErrorMessage(error.status); break;\n                          case 400 : this.toastr.warning('warning', this.ErrorMessage(error.status));\n                                     this.error = this.ErrorMessage(error.status); break;\n                          default : this.toastr.error('error', error.statusText); break;\n                        }\n                });\n        this.loading = false;\n    }\n\nErrorMessage(code: number): string {\n  switch (code) {\n    case 404: return 'Invalid username & password';\n    case 401: return 'Your account is inactive';\n    case 400: return 'Make sure your Username and Password should be Case Sensitive';\n  }\n}\n}\n\n","<div class=\"auth\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"card\" >\n        <div *ngIf=\"error\" class=\"alert alert-danger\">{{error}}</div>\n        \n        <div class=\"card-body pt-0\">\n          <h2 class=\" white-text text-left py-4\">\n            <strong>Sign in</strong>  </h2>\n            <p>Enter your detail below to continue. </p>\n          <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" class=\"text-left\" style=\"color: #757575;\" action=\"#!\">\n            <div class=\"md-form\">\n              <label for=\"txtUserName\">E-mail</label>\n              <input type=\"text\" formControlName=\"UserName\" id=\"txtUserName\"\n                [ngClass]=\"{ 'is-invalid': submitted && f.UserName.errors }\" class=\"form-control\">\n               \n              <div *ngIf=\"submitted && f.UserName.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.UserName.errors.required\">Username is required</div>\n              </div>\n            </div>\n            <div class=\"md-form\">\n              <label for=\"txtPassword\">Password</label>\n              <input type=\"password\" formControlName=\"Password\" id=\"txtPassword\"\n                [ngClass]=\"{ 'is-invalid': submitted && f.Password.errors }\" class=\"form-control\">\n            \n              <div *ngIf=\"submitted && f.Password.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.Password.errors.required\">Password is required</div>\n              </div>\n            </div>\n            <div class=\"d-flex justify-content-between\">\n              <div>\n                <div class=\"form-check\">\n                  <input type=\"checkbox\" class=\"form-check-input\" formControlName=\"rememberMe\" id=\"rememberMe\">\n                  <label class=\"form-check-label\" for=\"materialLoginFormRemember\">Remember me</label>\n                </div>\n              </div>\n              <div>\n                <a href=\"javascript:;\" routerLink=\"/auth/users/forgot-password\">Forgot password?</a>\n              </div>\n            </div>\n            <button [disabled]=\"loading\" class=\"btn btn-outline-info btn-rounded btn-block my-4 waves-effect z-depth-0\"\n              type=\"submit\">\n              <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n              Sign in</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Login } from 'src/app/services/login.mudule';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { GenericService } from '../services/generic.service';\n\n@Component({\n  selector: 'app-customer-ticket-feedback',\n  templateUrl: 'customer-ticket-feedback.component.html',\n  styles: []\n})\nexport class CustomerTicketFeedbackComponent implements OnInit {\n  currentUser: Login;\n  class1: string;\n  text1: string;\n  isValid: boolean = false;\n  IsLoading: boolean = false;\n  tempdata: any;\n  _feedbackcount: number = 0;\n  ratingcount: number = 0;\n  alreadyfeedback: boolean = false;\n  val: string = '';\n  constructor(\n    private route1: ActivatedRoute,\n    public loginservice: AuthenticationService,\n    public genericservice: GenericService\n  ) { this.loginservice.currentUser.subscribe(x => this.currentUser = x); }\n  ngOnInit() {\n    const Id = this.route1.snapshot.queryParamMap.get('i');\n    const rating = this.route1.snapshot.queryParamMap.get('r');\n    const token = this.route1.snapshot.queryParamMap.get('t');\n    if(Id === null || rating === null || token === null) { \n      this.text1 = \"We're sorry. We were not able to find a match.\";\n      this.class1 = 'alert alert-danger display-4';\n     }\n     let _rating = Number(rating);\n     this.genericservice.ratingcount = _rating;\n    this.genericservice.getTicketFreedback(Id, _rating,  token).subscribe( res => {\n      if (res) { let response = res as any;\n        this.genericservice.ratingcount = response.result.Rating;\n        this.ratingcount = this.genericservice.ratingcount;\n        if(response.Message === 'success') {\n          this.tempdata = response\n          this.isValid = true;\n        }\n        if(response.Message === 'failure') {\n          this.text1 = response.MessageDescription;\n          this.class1 = 'alert alert-warning display-5';\n          this.alreadyfeedback = true;\n          //var description = <HTMLInputElement>document.getElementById('Description').valu;\n          this.val = response.result.RatingFeedback;\n          \n        }\n      }\n    }, error =>  console.log(error)) ;\n  }\n  submit() {\n    this.IsLoading = true;\n    const Id = this.route1.snapshot.queryParamMap.get('i');\n    const token = this.route1.snapshot.queryParamMap.get('t');\n    let _rating = this.genericservice.ratingcount;\n    var description = <HTMLInputElement>document.getElementById('Description');\n    this.genericservice.putTicketFreedback(Id, _rating, description.value, token).subscribe( res => {\n      if (res) { const response = res as any; \n        if(response.Message === 'success') {\n          this.text1 = response.MessageDescription;\n          this.class1 = 'alert alert-success display-4';\n          this.isValid = false;\n          this.IsLoading = false;\n        }\n        if(response.Message === 'failure') {\n          this.text1 = response.MessageDescription;\n          this.class1 = 'alert alert-warning display-4';\n          this.IsLoading = false;\n        }\n      }}, error =>  console.log(error));\n  }\n  onkeypress(v: string) {\n    this._feedbackcount = v.length;\n  }\n  rating(r: number) {\n    this.ratingcount = r;\n  }\n}\n","<div class=\"Container\">\n    <div class=\"row p-5\">\n        <div class=\"col-sm-0 col-md-1 col-lg-2 col-xl-3\"></div>\n        <div class=\"col-sm-12 col-md-10 col-lg-8 col-xl-6 border-1\">\n            <div class=\"display-4 text-center\">Job Feedback<span *ngIf=\"this.isValid\">(#{{tempdata.result.TicketId}})</span></div>\n            <hr>\n            <div class=\"form-row\" *ngIf=\"this.isValid\">\n                <div class=\"form-group col-md-12\">\n                    <generic-ticket-feedback [(ratingcount)]=\"ratingcount\" [Editable]=\"1\" [Status]=\"'CLOSED'\"></generic-ticket-feedback>\n                    <div class=\"row mt-5\">\n                        <div class=\"col\">\n                            <h3>please let me know your feedback</h3>\n                            <textarea rows=\"4\" id=\"Description\"\n                                (keydown)=\"onkeypress($event.target.value)\" (keyup)=\"onkeypress($event.target.value)\"\n                                class=\"form-control\" maxlength=\"500\"\n                                placeholder=\"please let me know your feedback\"></textarea>\n                            <div class=\"ticket-feedback\">{{_feedbackcount}}/500</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-row\" *ngIf=\"this.isValid\">\n                <button type=\"submit\" *ngIf=\"!this.IsLoading\" class=\"btn btn-primary btn-block\" (click)=\"submit()\">\n                  <strong>submit</strong></button>\n                <button disabled class=\"btn btn-success btn-block\" *ngIf=\"this.IsLoading\">Loading... Please\n                    wait</button>\n            </div>\n            <div *ngIf=\"alreadyfeedback\">\n                <div class=\"form-group col-md-12\">\n                    <generic-ticket-feedback [(ratingcount)]=\"ratingcount\" [Editable]=\"0\" [Status]=\"'CLOSED'\"></generic-ticket-feedback>\n                    <div class=\"row mt-5\">\n                        <div class=\"col\">\n                            <textarea rows=\"10\" id=\"Description\"\n                                class=\"form-control\" maxlength=\"500\" [value]=\"val\"\n                                placeholder=\"please let me know your feedback\" disabled></textarea>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-row text-center\">\n                <div class=\"col\">\n                    <div class=\"{{class1}}\">{{text1}}</div>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-sm-0 col-md-1 col-lg-2 col-xl-3\"></div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthComponent } from './auth.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FromDriveComponent } from './from-drive.component';\nimport { CustomerQuoteForSignatureComponent } from './customer-quote-for-signature.component';\nimport { SignaturePadModule } from 'angular2-signaturepad';\nimport { CustomerTicketFeedbackComponent } from './customer-ticket-feedback.component';\nimport { TicketFeedbackComponentModule } from '../generic-utils/Ticket-Feedback-Component/TicketFeedbackComponent.module';\n\nconst routes: Routes = [\n                        { path: '',\tcomponent: AuthComponent }, \n                        { path: 'from-drive',\tcomponent: FromDriveComponent },\n                        { path: 'customer-quote-for-signature', component: CustomerQuoteForSignatureComponent },\n                        { path: 'customer-ticket-feedback', component: CustomerTicketFeedbackComponent },\n                        \n                      ];\n@NgModule({\n  declarations: [AuthComponent, FromDriveComponent, CustomerQuoteForSignatureComponent, CustomerTicketFeedbackComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    SignaturePadModule,\n    TicketFeedbackComponentModule,\n    RouterModule.forChild(routes),\n  ]\n})\nexport class AuthModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Login } from 'src/app/services/login.mudule';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { UserlogService } from 'src/app/services/userlog.service';\nimport { QuoteService } from 'src/app/services/quote.service';\nimport { SignaturePad } from 'angular2-signaturepad';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-customer-quote-for-signature',\n  templateUrl: 'customer-quote-for-signature.component.html',\n  styles: []\n})\nexport class CustomerQuoteForSignatureComponent implements OnInit {\n  @ViewChild('SignaturePad2', { static: false }) CustomerSingnaturePad: SignaturePad;\n  CustomerSignaturePadOption = {\n    ' minWidth': 2, pecColor: 'rgb(66,133,244)', backgroundcolor: 'rgb(255,255,255)', canvasWidth: 500, canvasHeight: 200 };\n  currentUser: Login;\n  temptQuoteStatus = 0;\n  class1: string;\n  text1: string;\n  isValid: boolean = false;\n  IsLoading: boolean = false;\n  constructor(\n    private route1: ActivatedRoute,\n    public logService: UserlogService,\n    public loginservice: AuthenticationService,\n    public quoteService: QuoteService\n  ) {\n    this.loginservice.currentUser.subscribe(x => this.currentUser = x);\n  }\n  ngOnInit() {\n    const Id = this.route1.snapshot.queryParamMap.get('i');\n    const token = this.route1.snapshot.queryParamMap.get('t');\n    if(Id === null) { \n      this.text1 = 'This is invalid request.';\n      this.class1 = 'alert alert-danger display-3';\n     }\n    this.quoteService.getQuoteDetailsForSign(Id, token).subscribe( res => {\n      if (res) { let response = res as any;\n        if(response.Message === 'success') {\n          this.quoteService.QuoteData = response.result;\n          this.temptQuoteStatus = Number(this.quoteService.QuoteData.Status);\n          this.isValid = true;\n        }\n        if(response.Message === 'failure') {\n          this.text1 = response.MessageDescription;\n          this.class1 = 'alert alert-warning display-3';\n        }\n      }\n    }, error =>  console.log(error)) ;\n  }\n  SetStatus(Status: number) {\n    this.temptQuoteStatus = Status;\n  }\n  InsertESignature(Status: number) {\n    this.IsLoading = true;\n    const token = this.route1.snapshot.queryParamMap.get('t');\n    if(Status === 4) {\n      const CustBase64 = this.CustomerSingnaturePad.toDataURL('image/png');\n      this.quoteService.QuoteData.CustomerSignature = CustBase64;\n      this.quoteService.QuoteData.Status = 4;\n      }\n      if(Status === 5) {\n        this.quoteService.QuoteData.CustomerSignature = '';\n        this.quoteService.QuoteData.Status = 5;\n        }\n    this.quoteService.updateQuoteSignaturewithRemark(token).subscribe( res => {\n      if (res) { const response = res as any; \n        if(response.Message === 'success') {\n          this.quoteService.QuoteData = response.result;\n          this.temptQuoteStatus = Number(this.quoteService.QuoteData.Status);\n          this.text1 = response.MessageDescription;\n          this.class1 = 'alert alert-success display-5';\n          this.isValid = false;\n          this.IsLoading = false;\n        }\n        if(response.Message === 'failure') {\n          this.text1 = response.MessageDescription;\n          this.class1 = 'alert alert-warning display-5';\n          this.IsLoading = false;\n        }\n      }}, error =>  console.log(error));\n  }\n  cleareCustomerCloserSignature() {\n    this.CustomerSingnaturePad.clear();\n  }\n}\n","<style>\n    .Container {\n        overflow-y: auto !important;\n        overflow-x: hidden;\n        min-height: 22px;\n        max-height: 100vh;\n    }\n\n    .myStatus {\n        width: 100%;\n        background-color: cyan;\n        padding: 6px 6px;\n        margin: 0 0 1px 0;\n        border: 1px solid #ad5a2242;\n    }\n\n    .myStatus a {\n        margin: 0px 0 0 11px;\n        color: black;\n        font-size: initial;\n    }\n\n    .AcceptStatus {\n        margin: 0 5px 0 0;\n        color: green;\n    }\n\n    .OtherStatus {\n        margin: 0 5px 0 0;\n        color: #847a74;\n    }\n\n    .signature {\n        width: 100%;\n        height: 280px;\n        border: 1px solid #ad5a2242;\n    }\n\n    .btnRemoveSection {\n        background-color: #fcb822;\n        color: black;\n        padding: 2px 15px;\n        float: left;\n        margin-top: 2px;\n        cursor: pointer;\n    }\n    .wd-1024 { width: 1024px; }\n</style>\n<div class=\"Container\">\n    <div class=\"row\" >\n        <div class=\"col-sm-0 col-md-3 col-lg-3 col-xl-3\"></div>\n        <div class=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\n            <div class=\"display-4\">Quotation for Signature  <span *ngIf=\"this.isValid\">({{this.quoteService.QuoteData.QuoteId}})</span></div>\n            <hr>\n            <div class=\"form-row\" *ngIf=\"this.isValid\">\n                <div class=\"form-group col-md-12\">\n                    <div class=\"kt-radio-list\">\n                        <div class=\"row\">\n                            <div class=\"myStatus\">\n                                <a href=\"javascript:void(0)\" (click)=\"SetStatus(4)\">\n                                    <ng-container *ngIf=\"temptQuoteStatus===4\">\n                                        <i class=\"fa fa-check-circle AcceptStatus\" aria-hidden=\"true\"></i>\n                                    </ng-container>\n                                    <ng-container *ngIf=\"temptQuoteStatus!==4\">\n                                        <i class=\"far fa-circle OtherStatus\" aria-hidden=\"true\"></i>\n                                    </ng-container>\n                                    Accept\n                                </a>\n                            </div>\n                            <div class=\"signature\" *ngIf=\"temptQuoteStatus===4\">\n                                <div class=\"row forn-group\">\n                                    <div class=\"col\">\n                                        <label>&nbsp;&nbsp;&nbsp;&nbsp;Signature</label>\n                                        <div id=\"CloseSignarePad\" class=\"m-signature-pad CloseSignarePad\">\n                                            <div class=\"m-signature-pad-body\">\n                                                <signature-pad #SignaturePad2 [options]=\"CustomerSignaturePadOption\">\n                                                </signature-pad>\n                                            </div>\n                                        </div>\n                                        <a class=\"btnRemoveSection\"\n                                            (click)=\"cleareCustomerCloserSignature()\"> Clear signature</a>\n                                    </div>\n                                </div>\n                            </div>\n        \n                            <div class=\"myStatus\">\n                                <a href=\"javascript:void(0)\" (click)=\"SetStatus(5)\">\n                                    <ng-container *ngIf=\"temptQuoteStatus===5\">\n                                        <i class=\"fa fa-check-circle AcceptStatus\" aria-hidden=\"true\"></i>\n                                    </ng-container>\n                                    <ng-container *ngIf=\"temptQuoteStatus!==5\">\n                                        <i class=\"far fa-circle OtherStatus\" aria-hidden=\"true\"></i>\n                                    </ng-container>\n                                    Reject\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-row\" *ngIf=\"this.isValid\">\n                <button type=\"submit\" *ngIf=\"!this.IsLoading\" class=\"btn btn-primary btn-block\" (click)=\"InsertESignature(temptQuoteStatus)\"> Save & Send Status</button>\n                <button disabled class=\"btn btn-success btn-block\" *ngIf=\"this.IsLoading\">Loading... Please wait</button>\n            </div>\n            <div class=\"form-row\">\n                <div class=\"col\">\n                    <div class=\"{{class1}}\">{{text1}}</div>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-sm-0 col-md-3 col-lg-3 col-xl-3\"></div>\n    </div>\n</div>"]}