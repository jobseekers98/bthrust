{"version":3,"sources":["./src/app/userprofile/forgot-password/forgot-password-reset.component.ts","./src/app/userprofile/forgot-password/forgot-password-reset.component.html","./node_modules/email-validator/index.js","./src/app/userprofile/userprofile.component.ts","./src/app/userprofile/userprofile.module.ts","./src/app/userprofile/forgot-password/forgot-password.component.ts","./src/app/userprofile/forgot-password/forgot-password.component.html","./src/app/userprofile/forgot-password/forgot-password-otp.component.ts","./src/app/userprofile/forgot-password/forgot-password-otp.component.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;;;;;;;;;;;;;;;ICIrD,0EAA8C;IAAA,uDAAS;IAAA,4DAAM;;;IAAf,0DAAS;IAAT,6EAAS;;;IAsCzC,4EACE;IAAA,iFACF;IAAA,4DAAY;;;IACZ,4EACE;IAAA,kFACF;IAAA,4DAAY;;;IAQd,4FAG6B;;;;IAD3B,kFAAuD;;;IAevD,4EACE;IAAA,8FACF;IAAA,4DAAY;;;IACZ,4EAEE;IAAA,qFACF;IAAA,4DAAY;;;IAYpB,sEAA2E;;;IAH7E,6EAGE;IAAA,2IAAoE;IACpE,kEAAM;IAAA,4DAAS;;;;;IAFjB,0FAA+D;IACvD,0DAAe;IAAf,iFAAe;;;;;IAxF/B,yEACE;IAAA,yEACE;IAAA,8HAA8C;IAE9C,yEACE;IAAA,wEACE;IAAA,yEAAQ;IAAA,0EAAe;IAAA,4DAAS;IAClC,4DAAK;IACL,0EACE;IADI,sUAAuB;IAC3B,yEACE;IAAA,gFAGF;IAF8C,qXAA6C;IADzF,4DAGF;IAAA,4DAAM;IACN,0EACE;IAAA,2EACE;IAAA,4EACE;IAAA,qFACE;IAAA,wFAEE;IAFgB,8WAA0B;IAE1C,mFACF;IAAA,4DAAmB;IACrB,4DAAoB;IACpB,oFAEE;IACA,sFACE;IAAA,6EAAW;IAAA,oEAAQ;IAAA,4DAAY;IAC/B,sGACE;IAAA,oEAA0B;IAC5B,4DAA6B;IAC7B,iFAKA;IAL0C,yXAAgD;IAA1F,4DAKA;IACA,gFACE;IAAA,wDACF;IAAA,4DAAW;IACX,6IACE;IAEF,6IACE;IAEJ,4DAAiB;IAEjB,iGAGwB;IAFD,+XAA+C;IAEtE,4DAAwB;IAExB,+KAGA;IAEA,sFACE;IAAA,6EAAW;IAAA,4EAAgB;IAAA,4DAAY;IACvC,iGAA0F;IAC1F,iFAIA;IAJmC,6XAAoD;IAAvF,4DAIA;IACA,gFACE;IAAA,wDACF;IAAA,4DAAW;IAEX,6IACE;IAEF,6IAEE;IAEJ,4DAAiB;IACnB,4DAAmB;IACnB,oFACE;IAAA,yEAA0C;IAAA,yEAAa;IAAA,4DAAI;IAC7D,4DAAmB;IACrB,4DAAW;IACb,4DAAM;IACV,4DAAM;IACJ,uIAGE;IAEJ,4DAAO;IACT,4DAAM;IAER,4DAAM;IACR,4DAAM;;;;;;;;IA5FG,0DAAa;IAAb,8EAAa;IASgC,0DAA6C;IAA7C,2GAA6C;IAOjE,0DAA0B;IAA1B,wFAA0B;IAQP,0DAAiD;IAAjD,4EAAiD;IAK1C,0DAAgD;IAAhD,8GAAgD;IAOxF,0DACF;IADE,4GACF;IACW,0DAAkF;IAAlF,8GAAkF;IAGlF,0DAAiF;IAAjF,6GAAiF;IAOvE,0DAA2C;IAA3C,+EAA2C;IAIhE,0DAAoB;IAApB,qFAAoB;IAOe,0DAAoD;IAApD,kHAAoD;IAMrF,0DACF;IADE,6GACF;IAEW,0DAA8F;IAA9F,0HAA8F;IAIvG,0DAAkG;IAAlG,8HAAkG;IAY9G,0DAAmG;IAAnG,+HAAmG;;;IAS3G,yEACE;IAAA,0EACE;IAAA,0EAAiC;IAAA,uFAA4B;IAAA,4DAAM;IACnE,yEACE;IAAA,yEAAQ;IAAA,uFAA4B;IAAA,4DAAS;IAC/C,4DAAK;IACL,0EACE;IAAA,0EACE;IAAA,sEACE;IAAA,yEAA0C;IAAA,yEAAa;IAAA,4DAAI;IAC7D,4DAAM;IACR,4DAAM;IACR,4DAAM;IACR,4DAAM;IACR,4DAAM;;ADrGH,MAAM,4BAA4B;IAUvC,YACU,YAAmB,EACpB,OAAqB,EACpB,MAAc,EACd,MAAqB;QAHrB,iBAAY,GAAZ,YAAY,CAAO;QACpB,YAAO,GAAP,OAAO,CAAc;QACpB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QAX/B,YAAO,GAAG,KAAK,CAAC;QAChB,cAAS,GAAG,KAAK,CAAC;QAIlB,UAAK,GAAG,EAAE,CAAC;QAOP,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IAAC,CAAC;IAE/C,QAAQ;QACN,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;YAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;SAAE;QAC3F,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,0CAA0C,CAAC,CAAC;QACvE,IAAI,CAAC,iCAAiC,CAAC,mBAAmB,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,EAAE;YACrF,OAAO,CAAC,GAAG,CAAC,qCAAqC,EAAE,IAAI,CAAC,iCAAiC,CAAC,mBAAmB,CAAC,CAAC;QACjH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,iCAAiC,CAAC,+BAA+B,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,EAAE;YACjG,OAAO,CAAC,GAAG,CAAC,qCAAqC,EAAE,IAAI,CAAC,iCAAiC,CAAC,+BAA+B,CAAC,CAAC;QAC7H,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,WAAW,GAAG,EAAE,CAAC;QAC7C,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,WAAW,GAAG,EAAE,CAAC;QAC7C,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,eAAe,GAAG,EAAE,CAAC;IACnD,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAEhB,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;YACxD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,EAAE,2BAA2B,CAAC,CAAC;YAC5D,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,OAAO,KAAK,CAAC;SACd;QACD,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,eAAe,CAAC,MAAM,KAAK,CAAC,EAAE;YAC5D,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,EAAE,+BAA+B,CAAC,CAAC;YAChE,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,OAAO,KAAK,CAAC;SACd;QACD,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,WAAW,KAAK,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,eAAe,EAAE;YAC3F,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,EAAE,yBAAyB,CAAC,CAAC;YAC1D,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,OAAO,KAAK,CAAC;SACd;QACD,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,GAAG,GAAG,MAAM,CAAC;QACzC,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAE,GAAG,CAAC,EAAE;YAClD,IAAI,GAAG,EAAE;gBAAE,MAAM,GAAG,GAAG,GAAU,CAAC;gBACvB,IAAI,GAAG,CAAC,OAAO,KAAK,SAAS,EAAE;oBAC9B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,EAAE,GAAG,CAAC,kBAAkB,CAAC,CAAC;oBACvD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACrB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACrB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;iBACnB;gBACD,IAAI,GAAG,CAAC,OAAO,KAAK,SAAS,EAAE;oBAC7B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,EAAE,GAAG,CAAC,kBAAkB,CAAC,CAAC;oBACvD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACrB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;iBACpB;aACb;QAAA,CAAC,EAAE,KAAK,CAAC,EAAE,CAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACtC,CAAC;IACD,iBAAiB,CAAC,QAAgB;QAChC,iDAAiD;IACnD,CAAC;;wGAzEU,4BAA4B;4GAA5B,4BAA4B;;;;;;QCVzC,yEACE;QAAA,yEACE;QAAA,0HACE;QA8FF,yHACE;QAcJ,4DAAM;QACR,4DAAM;;QA/Ge,0DAAe;QAAf,6EAAe;QA+Ff,0DAAc;QAAd,4EAAc;;6FDvFtB,4BAA4B;cAJxC,uDAAS;eAAC;gBACT,WAAW,EAAE,wCAAwC;gBACrD,MAAM,EAAE,EAAE;aACX;8TAGC,iCAAiC;kBADhC,uDAAS;mBAAC,mCAAmC,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC;;;;;;;;;;;;;;AEXnD;;AAEb,yCAAyC,EAAE,iCAAiC,EAAE;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC,uBAAuB,EAAE;AAC9D;;AAEA;AACA,C;;;;;;;;;;;;AC7BA;AAAA;AAAA;AAAA;AAAkD;;;AAE3C,MAAM,oBAAoB;IAC/B,QAAQ,KAAI,CAAC;;wFADF,oBAAoB;oGAApB,oBAAoB;QADV,2EAA+B;;6FACzC,oBAAoB;cADhC,uDAAS;eAAC,EAAC,QAAQ,EAAE,iCAAiC,EAAC;;;;;;;;;;;;;;ACDxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACyB;AACV;AACD;AACI;AACE;AACM;AACD;AACT;AACa;AACpB;AACe;AACS;AACnB;AACR;AACgB;AACuB;AACO;AACI;AACN;AACpC;AACA;AACA;AACM;AACS;;;;AAEtE,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,4EAAoB;QACjC,QAAQ,EAAE;YACR,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,mGAAuB,EAAE;YAC/D,EAAE,IAAI,EAAE,qBAAqB,EAAE,SAAS,EAAE,0GAA0B,EAAE;YACtE,EAAE,IAAI,EAAE,uBAAuB,EAAE,SAAS,EAAE,8GAA4B,EAAE;SAC3E,EAAC;CACb,CAAC;AAuCK,MAAM,iBAAiB;;gGAAjB,iBAAiB;4JAAjB,iBAAiB,kBA/BnB;YACP,6DAAY;YACZ,0DAAW;YACX,6DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC7B,qEAAgB;YAChB,wEAAe;YACf,gFAAmB;YACnB,+EAAkB;YAClB,0EAAmB;YACnB,sEAAc;YACd,mFAA2B;YAC3B,oEAAS;YACT,gEAAa;YACb,kEAAmB;YACnB,+EAAiB,CAAC,OAAO,EAAE;YAC3B,wFAA0B;YAC1B,yGAAyB;YACzB,oFAAoB;YACpB,2EAAgB;YAChB,qEAAa;YACb,qEAAa;YACb,qEAAa;SACd,EAEC,gFAAmB;QACnB,+EAAkB;QAClB,0EAAmB;QACnB,sEAAc;mIAIL,iBAAiB,mBApC1B,4EAAoB;QACpB,mGAAuB;QACvB,0GAA0B;QAC1B,8GAA4B,aAG5B,6DAAY;QACZ,0DAAW,iEAEX,qEAAgB;QAChB,wEAAe;QACf,gFAAmB;QACnB,+EAAkB;QAClB,0EAAmB;QACnB,sEAAc;QACd,mFAA2B;QAC3B,oEAAS;QACT,gEAAa;QACb,kEAAmB,mFAEnB,wFAA0B;QAC1B,yGAAyB;QACzB,oFAAoB;QACpB,2EAAgB;QAChB,qEAAa;QACb,qEAAa;QACb,qEAAa,aAGb,gFAAmB;QACnB,+EAAkB;QAClB,0EAAmB;QACnB,sEAAc;6FAIL,iBAAiB;cAtC7B,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,4EAAoB;oBACpB,mGAAuB;oBACvB,0GAA0B;oBAC1B,8GAA4B;iBAC7B;gBACD,OAAO,EAAE;oBACP,6DAAY;oBACZ,0DAAW;oBACX,6DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;oBAC7B,qEAAgB;oBAChB,wEAAe;oBACf,gFAAmB;oBACnB,+EAAkB;oBAClB,0EAAmB;oBACnB,sEAAc;oBACd,mFAA2B;oBAC3B,oEAAS;oBACT,gEAAa;oBACb,kEAAmB;oBACnB,+EAAiB,CAAC,OAAO,EAAE;oBAC3B,wFAA0B;oBAC1B,yGAAyB;oBACzB,oFAAoB;oBACpB,2EAAgB;oBAChB,qEAAa;oBACb,qEAAa;oBACb,qEAAa;iBACd;gBACD,OAAO,EAAE;oBACP,gFAAmB;oBACnB,+EAAkB;oBAClB,0EAAmB;oBACnB,sEAAc;iBACf;gBACD,eAAe,EAAE,EAAE;aACpB;;;;;;;;;;;;;;ACvED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAIA;;;;;;;;;ICA1C,0EAA8C;IAAA,uDAAS;IAAA,4DAAM;;;IAAf,0DAAS;IAAT,6EAAS;;;IAqBjD,sEAA2E;;;ADflF,MAAM,uBAAuB;IAMlC,YACU,YAAmB,EACpB,OAAqB,EACpB,MAAc,EACd,MAAqB;QAHrB,iBAAY,GAAZ,YAAY,CAAO;QACpB,YAAO,GAAP,OAAO,CAAc;QACpB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QAT/B,YAAO,GAAG,KAAK,CAAC;QAChB,cAAS,GAAG,KAAK,CAAC;QAGlB,UAAK,GAAG,EAAE,CAAC;QAMP,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IAAC,CAAC;IAE1B,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,kCAAkC,CAAC,CAAC;IACjE,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAEhB,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,QAAQ,KAAK,EAAE,EAAE;YAC/C,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,EAAE,uBAAuB,CAAC,CAAC;YACxD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,OAAO,KAAK,CAAC;SACd;QACD,IAAI,CAAC,wDAAuB,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE;YAClE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,EAAE,4BAA4B,CAAC,CAAC;YAC7D,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,OAAO,KAAK,CAAC;SACd;QACD,IAAI,CAAC,SAAS,GAAG,iCAAiC,CAAC;QACnD,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,GAAG,GAAG,IAAI,CAAC;QACvC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,WAAW,GAAG,UAAU,CAAC;QACrD,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,WAAW,GAAG,UAAU,CAAC;QACrD,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAE,GAAG,CAAC,EAAE;YAClD,IAAI,GAAG,EAAE;gBAAE,MAAM,GAAG,GAAG,GAAU,CAAC;gBACvB,IAAI,GAAG,CAAC,OAAO,KAAK,SAAS,EAAE;oBAC9B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,EAAE,GAAG,CAAC,kBAAkB,CAAC,CAAC;oBACvD,UAAU,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;oBACnE,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACrB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;iBACrB;gBACD,IAAI,GAAG,CAAC,OAAO,KAAK,SAAS,EAAE;oBAC7B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,EAAE,GAAG,CAAC,kBAAkB,CAAC,CAAC;oBACvD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACrB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;iBACpB;aACb;QAAA,CAAC,EAAE,KAAK,CAAC,EAAE,CAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACtC,CAAC;;8FApDU,uBAAuB;uGAAvB,uBAAuB;QCVpC,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,mHAA8C;QAE9C,yEACE;QAAA,wEACE;QAAA,yEAAQ;QAAA,0EAAe;QAAA,4DAAS;QAClC,4DAAK;QACL,0EACE;QADI,mJAAY,cAAU,IAAC;QAC3B,0EACI;QAAA,4EAAyB;QAAA,kEAAM;QAAA,4DAAQ;QACzC,iFAGF;QAF8C,qNAA6C;QADzF,4DAGF;QAAA,4DAAM;QACN,2EACI;QAAA,uEACI;QAAA,iEACF;QAAA,yEAA0C;QAAA,yEAAa;QAAA,4DAAI;QAC7D,4DAAM;QACR,4DAAM;QACR,8EAEE;QAAA,wHAAoE;QACpE,mEAAM;QAAA,4DAAS;QACnB,4DAAO;QACT,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;QA5BO,0DAAa;QAAb,2EAAa;QAUgC,0DAA6C;QAA7C,wGAA6C;QASnF,0DAAoB;QAApB,iFAAoB;QAEpB,0DAAe;QAAf,6EAAe;;6FDftB,uBAAuB;cAJnC,uDAAS;eAAC;gBACT,WAAW,EAAE,kCAAkC;gBAC/C,MAAM,EAAE,EAAE;aACX;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;ICI1C,0EAA8C;IAAA,uDAAS;IAAA,4DAAM;;;IAAf,0DAAS;IAAT,6EAAS;;;IAwBjD,sEAA2E;;;ADlBlF,MAAM,0BAA0B;IAMrC,YACU,YAAmB,EACpB,OAAqB,EACpB,MAAc,EACd,MAAqB;QAHrB,iBAAY,GAAZ,YAAY,CAAO;QACpB,YAAO,GAAP,OAAO,CAAc;QACpB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QAT/B,YAAO,GAAG,KAAK,CAAC;QAChB,cAAS,GAAG,KAAK,CAAC;QAGlB,UAAK,GAAG,EAAE,CAAC;QAMP,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IAAC,CAAC;IAE1B,QAAQ;QACN,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;YAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;SAAE;QAC3F,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,wCAAwC,CAAC,CAAC;IACvE,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAEhB,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,GAAG,KAAK,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,GAAG,KAAK,IAAI,EAAE;YAC7F,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,EAAE,qBAAqB,CAAC,CAAC;YACtD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,OAAO,KAAK,CAAC;SACd;QACD,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,MAAM,KAAK,CAAC,EAAE;YAC3D,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,EAAE,2BAA2B,CAAC,CAAC;YAC5D,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,OAAO,KAAK,CAAC;SACd;QACD,IAAI,CAAC,SAAS,GAAG,mCAAmC,CAAC;QACrD,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,WAAW,GAAG,UAAU,CAAC;QACrD,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,WAAW,GAAG,UAAU,CAAC;QACrD,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAE,GAAG,CAAC,EAAE;YAClD,IAAI,GAAG,EAAE;gBAAE,MAAM,GAAG,GAAG,GAAU,CAAC;gBACvB,IAAI,GAAG,CAAC,OAAO,KAAK,SAAS,EAAE;oBAC9B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,EAAE,GAAG,CAAC,kBAAkB,CAAC,CAAC;oBACvD,UAAU,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;oBACnE,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACrB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;iBACrB;gBACD,IAAI,GAAG,CAAC,OAAO,KAAK,SAAS,EAAE;oBAC7B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,EAAE,GAAG,CAAC,kBAAkB,CAAC,CAAC;oBACvD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACrB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;iBACpB;aACb;QAAA,CAAC,EAAE,KAAK,CAAC,EAAE,CAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACtC,CAAC;;oGApDU,0BAA0B;0GAA1B,0BAA0B;QCVvC,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,sHAA8C;QAC9C,wEACE;QAAA,yEAAQ;QAAA,0EAAe;QAAA,4DAAS;QAClC,4DAAK;QACL,yEACE;QAAA,0EACE;QADI,sJAAY,cAAU,IAAC;QAC3B,0EACE;QAAA,gFAGF;QAF8C,wNAA6C;QADzF,4DAGF;QAAA,4DAAM;QACN,0EACE;QAAA,6EAAoB;QAAA,+DAAG;QAAA,4DAAQ;QACjC,iFAGF;QAFyC,mNAAwC;QAD/E,4DAGF;QAAA,4DAAM;QACN,2EACE;QAAA,uEACE;QAAA,yEAA0C;QAAA,yEAAa;QAAA,4DAAI;QAC7D,4DAAM;QACR,4DAAM;QACJ,8EAEE;QAAA,2HAAoE;QACpE,mEAAM;QAAA,4DAAS;QACnB,4DAAO;QACT,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;QA/BO,0DAAa;QAAb,2EAAa;QAQgC,0DAA6C;QAA7C,wGAA6C;QAMpD,0DAAwC;QAAxC,mGAAwC;QAQvE,0DAAoB;QAApB,iFAAoB;QAEpB,0DAAe;QAAf,6EAAe;;6FDlBtB,0BAA0B;cAJtC,uDAAS;eAAC;gBACT,WAAW,EAAE,sCAAsC;gBACnD,MAAM,EAAE,EAAE;aACX","file":"userprofile-userprofile-module-es2015.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { LoginService } from 'src/app/services';\nimport { MatPasswordStrengthComponent } from '@angular-material-extensions/password-strength';\nimport { Title } from '@angular/platform-browser';\n@Component({\n  templateUrl: './forgot-password-reset.component.html',\n  styles: []\n})\nexport class ForgotPasswordResetComponent implements OnInit {\n  @ViewChild('passwordComponentWithConfirmation', {static: true})\n  passwordComponentWithConfirmation: MatPasswordStrengthComponent;\n  loading = false;\n  submitted = false;\n  IsDone: boolean;\n  IsValid: boolean;\n  returnUrl: string;\n  error = '';\n  showDetails3: boolean;\n  constructor(\n    private titleService: Title,\n    public service: LoginService,\n    private router: Router,\n    private toastr: ToastrService\n  ) { this.IsValid = true; this.IsDone = false; }\n\n  ngOnInit(): void {\n    if (this.service.forgetpassword.UserName.length === 0) { this.router.navigate(['/auth']); }\n    this.titleService.setTitle('Forgot Password - Reset | Genic Solution');\n    this.passwordComponentWithConfirmation.passwordFormControl.valueChanges.subscribe(() => {\n      console.log('passwordFormControl form control = ', this.passwordComponentWithConfirmation.passwordFormControl);\n    });\n\n    this.passwordComponentWithConfirmation.passwordConfirmationFormControl.valueChanges.subscribe(() => {\n      console.log('passwordFormControl form control = ', this.passwordComponentWithConfirmation.passwordConfirmationFormControl);\n    });\n    this.service.forgetpassword.NewPassword = '';\n    this.service.forgetpassword.OldPassword = '';\n    this.service.forgetpassword.ConfirmPassword = '';\n  }\n  onSubmit() {\n    this.IsValid = true;\n    this.submitted = true;\n    this.loading = true;\n    this.error = '';\n\n    if (this.service.forgetpassword.NewPassword.length === 0) {\n      this.toastr.warning('Warning', 'Please enter New Password');\n      this.IsValid = false;\n      this.loading = false;\n      return false;\n    }\n    if (this.service.forgetpassword.ConfirmPassword.length === 0) {\n      this.toastr.warning('Warning', 'Please enter Confirm Password');\n      this.IsValid = false;\n      this.loading = false;\n      return false;\n    }\n    if (this.service.forgetpassword.NewPassword !== this.service.forgetpassword.ConfirmPassword) {\n      this.toastr.warning('Warning', 'Both password not match');\n      this.IsValid = false;\n      this.loading = false;\n      return false;\n    }\n    this.service.forgetpassword.OTP = '1234';\n    this.service.ForgotPasswordStep3().subscribe( res => {\n      if (res) { const msg = res as any;\n                 if (msg.Message === 'success') {\n                  this.toastr.success('success', msg.MessageDescription);\n                  this.loading = false;\n                  this.IsValid = false;\n                  this.IsDone = true;\n                 }\n                 if (msg.Message === 'failure') {\n                   this.toastr.warning('Warning', msg.MessageDescription);\n                   this.loading = false;\n                   this.IsValid = false;\n                   }\n      }}, error =>  console.log(error));\n  }\n  onStrengthChanged(strength: number) {\n    // console.log('password strength = ', strength);\n  }\n}\n","<div class=\"auth\">\n  <div class=\"container\">\n    <div class=\"row\" *ngIf=\"!IsDone\">\n      <div class=\"card\" style=\"margin: 136px auto 0 auto;width: 600px;\">\n        <div *ngIf=\"error\" class=\"alert alert-danger\">{{error}}</div>\n      \n        <div class=\"card-body pt-0\">\n          <h5 class=\"white-text text-left py-4\">\n            <strong>Forgot Password</strong>\n          </h5>\n          <form (ngSubmit)=\"onSubmit()\" class=\"text-left\" style=\"color: #757575;\" action=\"#!\">\n            <div class=\"md-form\">\n              <input type=\"text\" name=\"service.forgetpassword.UserName\"\n               #service.forgetpassword.UserName=\"ngModel\" [(ngModel)]=\"service.forgetpassword.UserName\"\n                disabled=\"disabled\" class=\"form-control\">\n            </div>\n            <div class=\"md-form\">         \n              <div fxLayout=\"column\" class=\"mt-3\">          \n                <mat-card>\n                  <mat-card-subtitle>\n                    <mat-slide-toggle [(ngModel)]=\"showDetails3\"\n                                      [ngModelOptions]=\"{standalone: true}\">\n                      Show Password Details\n                    </mat-slide-toggle>\n                  </mat-card-subtitle>          \n                  <mat-card-content>\n\n                    <!--password input filed-->\n                    <mat-form-field appearance=\"outline\" [color]=\"passwordComponentWithConfirmation.color\" style=\"width: 100%\">\n                      <mat-label>Password</mat-label>\n                      <mat-pass-toggle-visibility #toggle3 matSuffix>\n                        <i class=\"fa fa-list\"></i>\n                      </mat-pass-toggle-visibility>\n                      <input matInput #passwordWithConfirmation [(ngModel)]=\"service.forgetpassword.NewPassword\"  \n                             [type]=\"toggle3.type\"\n                             [formControl]=\"passwordComponentWithConfirmation.passwordFormControl\"\n                             placeholder=\"Password\"\n                             required>\n                      <!--password hint-->\n                      <mat-hint align=\"end\" aria-live=\"polite\">\n                        {{passwordWithConfirmation.value.length}} / {{passwordComponentWithConfirmation.max}}\n                      </mat-hint>\n                      <mat-error *ngIf=\"passwordComponentWithConfirmation.passwordFormControl.hasError('required')\">\n                        Password is required\n                      </mat-error>\n                      <mat-error *ngIf=\"passwordComponentWithConfirmation.passwordFormControl.hasError('pattern')\">\n                        Password is not valid\n                      </mat-error>\n                    </mat-form-field>\n                    <!--@angular-material-extensions/password-strength's main component-->\n                    <mat-password-strength #passwordComponentWithConfirmation\n                                           (onStrengthChanged)=\"onStrengthChanged($event)\"\n                                           [password]=\"passwordWithConfirmation.value\">\n                    </mat-password-strength>\n                    <!--Password's strength info-->\n                    <mat-password-strength-info\n                      *ngIf=\"showDetails3\"\n                      [passwordComponent]=\"passwordComponentWithConfirmation\">\n                    </mat-password-strength-info>\n                    <!--password input field for confirmation-->\n                    <mat-form-field appearance=\"outline\" class=\"mt-3\" style=\"width: 100%\">\n                      <mat-label>Confirm Password</mat-label>\n                      <mat-pass-toggle-visibility #toggleConfirmPassword matSuffix></mat-pass-toggle-visibility>\n                      <input matInput #passwordToConfirm [(ngModel)]=\"service.forgetpassword.ConfirmPassword\"  \n                             [type]=\"toggleConfirmPassword.type\"\n                             [formControl]=\"passwordComponentWithConfirmation.passwordConfirmationFormControl\"\n                             placeholder=\"Password\">\n                      <!-- password hint-->\n                      <mat-hint align=\"end\" aria-live=\"polite\">\n                        {{passwordToConfirm.value.length}} / {{passwordComponentWithConfirmation.max}}\n                      </mat-hint>\n                      <!-- password error msgs-->\n                      <mat-error *ngIf=\"passwordComponentWithConfirmation.passwordConfirmationFormControl.hasError('required')\">\n                        Password confirmation is required\n                      </mat-error>\n                      <mat-error\n                        *ngIf=\"passwordComponentWithConfirmation.passwordConfirmationFormControl.hasError('notConfirmed')\">\n                        Password is not the same\n                      </mat-error>\n                    </mat-form-field>\n                  </mat-card-content>\n                  <mat-card-content>\n                    <a href=\"javascript:;\" routerLink=\"/auth\">Back to login</a>\n                  </mat-card-content>\n                </mat-card>\n              </div>\n          </div>\n            <button class=\"btn btn-outline-info btn-rounded btn-block my-4 waves-effect z-depth-0\"\n            *ngIf=\"!passwordComponentWithConfirmation.passwordConfirmationFormControl.hasError('notConfirmed')\"\n            [disabled]=\"passwordComponentWithConfirmation.strength !== 100\" type=\"submit\">\n              <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n              Submit</button>\n          </form>\n        </div>\n        \n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"IsDone\">\n      <div class=\"card\" style=\"margin: 136px auto 0 auto;width: 445px; font-size: 25px;\">\n        <div class=\"alert alert-success\">Password change successfully</div>\n        <h5 class=\"card-header info-color white-text text-center py-4\">\n          <strong>Password change successfully</strong>\n        </h5>\n        <div class=\"card-body px-lg-5 pt-0\">\n          <div class=\"d-flex justify-content-around\">\n            <div>\n              <a href=\"javascript:;\" routerLink=\"/auth\">Back to login</a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","\"use strict\";\r\n\r\nvar tester = /^[-!#$%&'*+\\/0-9=?A-Z^_a-z{|}~](\\.?[-!#$%&'*+\\/0-9=?A-Z^_a-z`{|}~])*@[a-zA-Z0-9](-*\\.?[a-zA-Z0-9])*\\.[a-zA-Z](-?[a-zA-Z0-9])+$/;\r\n// Thanks to:\r\n// http://fightingforalostcause.net/misc/2006/compare-email-regex.php\r\n// http://thedailywtf.com/Articles/Validating_Email_Addresses.aspx\r\n// http://stackoverflow.com/questions/201323/what-is-the-best-regular-expression-for-validating-email-addresses/201378#201378\r\nexports.validate = function(email)\r\n{\r\n\tif (!email)\r\n\t\treturn false;\r\n\t\t\r\n\tif(email.length>254)\r\n\t\treturn false;\r\n\r\n\tvar valid = tester.test(email);\r\n\tif(!valid)\r\n\t\treturn false;\r\n\r\n\t// Further checking of some things regex can't handle\r\n\tvar parts = email.split(\"@\");\r\n\tif(parts[0].length>64)\r\n\t\treturn false;\r\n\r\n\tvar domainParts = parts[1].split(\".\");\r\n\tif(domainParts.some(function(part) { return part.length>63; }))\r\n\t\treturn false;\r\n\r\n\treturn true;\r\n}","import { Component, OnInit } from '@angular/core';\n@Component({template: '<router-outlet></router-outlet>'})\nexport class UserprofileComponent implements OnInit  {\n  ngOnInit() {}\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { NgxMaterialTimepickerModule } from 'ngx-material-timepicker';\nimport { PopoverModule } from 'ngx-smart-popover';\nimport { SweetAlert2Module } from '@sweetalert2/ngx-sweetalert2';\nimport { LoadingBarHttpClientModule } from '@ngx-loading-bar/http-client';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { UserprofileComponent } from './userprofile.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { ForgotPasswordOtpComponent } from './forgot-password/forgot-password-otp.component';\nimport { ForgotPasswordResetComponent } from './forgot-password/forgot-password-reset.component';\nimport { MatPasswordStrengthModule } from '@angular-material-extensions/password-strength';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nconst routes: Routes = [\n  { path: '', component: UserprofileComponent,\n            children: [\n              { path: 'forgot-password', component: ForgotPasswordComponent },\n              { path: 'forgot-password-otp', component: ForgotPasswordOtpComponent },\n              { path: 'forgot-password-reset', component: ForgotPasswordResetComponent }\n            ]},\n];\n@NgModule({\n  declarations: [\n    UserprofileComponent,\n    ForgotPasswordComponent,\n    ForgotPasswordOtpComponent,\n    ForgotPasswordResetComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild(routes),\n    HttpClientModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatNativeDateModule,\n    MatInputModule,\n    NgxMaterialTimepickerModule ,\n    NgbModule,\n    PopoverModule,\n    ReactiveFormsModule,\n    SweetAlert2Module.forRoot(),\n    LoadingBarHttpClientModule,\n    MatPasswordStrengthModule,\n    MatSlideToggleModule,\n    MatToolbarModule,\n    MatTabsModule,\n    MatIconModule,\n    MatCardModule,\n  ],\n  exports: [\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatNativeDateModule,\n    MatInputModule\n  ],\n  entryComponents: []\n})\nexport class UserProfileModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { LoginService } from 'src/app/services';\nimport * as EmailValidator from 'email-validator';\nimport { Title } from '@angular/platform-browser';\n@Component({\n  templateUrl: './forgot-password.component.html',\n  styles: []\n})\nexport class ForgotPasswordComponent implements OnInit {\n  loading = false;\n  submitted = false;\n  IsValid: boolean;\n  returnUrl: string;\n  error = '';\n  constructor(\n    private titleService: Title,\n    public service: LoginService,\n    private router: Router,\n    private toastr: ToastrService\n  ) { this.IsValid = true; }\n\n  ngOnInit(): void {\n    this.titleService.setTitle('Forgot Password | Genic Solution');\n  }\n  onSubmit() {\n    this.IsValid = true;\n    this.submitted = true;\n    this.loading = true;\n    this.error = '';\n\n    if (this.service.forgetpassword.UserName === '') {\n      this.toastr.warning('Warning', 'Please enter an email');\n      this.IsValid = false;\n      this.loading = false;\n      return false;\n    }\n    if (!EmailValidator.validate(this.service.forgetpassword.UserName)) {\n      this.toastr.warning('Warning', 'Please enter a valid email');\n      this.IsValid = false;\n      this.loading = false;\n      return false;\n    }\n    this.returnUrl = '/auth/users/forgot-password-otp';\n    this.service.forgetpassword.OTP = null;\n    this.service.forgetpassword.NewPassword = '********';\n    this.service.forgetpassword.OldPassword = '********';\n    this.service.ForgotPasswordStep1().subscribe( res => {\n      if (res) { const msg = res as any;\n                 if (msg.Message === 'success') {\n                  this.toastr.success('success', msg.MessageDescription);\n                  setTimeout(() => { this.router.navigate([this.returnUrl]); }, 500);\n                  this.loading = false;\n                  this.IsValid = false;\n                 }\n                 if (msg.Message === 'failure') {\n                   this.toastr.warning('Warning', msg.MessageDescription);\n                   this.loading = false;\n                   this.IsValid = false;\n                   }\n      }}, error =>  console.log(error));\n  }\n}\n","<div class=\"auth\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"card\" style=\"margin: 136px auto 0 auto;width: 445px;\">\n        <div *ngIf=\"error\" class=\"alert alert-danger\">{{error}}</div>\n      \n        <div class=\"card-body pt-0\">\n          <h5 class=\"white-text text-left py-4\">\n            <strong>Forgot Password</strong>\n          </h5>\n          <form (ngSubmit)=\"onSubmit()\" class=\"text-left\" style=\"color: #757575;\" action=\"#!\">\n            <div class=\"md-form\">\n                <label for=\"txtUserName\">E-mail</label>\n              <input type=\"text\" name=\"service.forgetpassword.UserName\"\n               #service.forgetpassword.UserName=\"ngModel\" [(ngModel)]=\"service.forgetpassword.UserName\"\n                [ngClass]=\"{ 'is-invalid': !IsValid }\" class=\"form-control\">\n            </div>\n            <div class=\"d-flex justify-content-around\">\n                <div>\n                    <br>\n                  <a href=\"javascript:;\" routerLink=\"/auth\">Back to login</a>\n                </div>\n              </div>\n            <button [disabled]=\"loading\" class=\"btn btn-outline-info btn-rounded btn-block my-4 waves-effect z-depth-0\"\n              type=\"submit\">\n              <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n              Submit</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { LoginService } from 'src/app/services';\nimport * as EmailValidator from 'email-validator';\nimport { Title } from '@angular/platform-browser';\n@Component({\n  templateUrl: './forgot-password-otp.component.html',\n  styles: []\n})\nexport class ForgotPasswordOtpComponent implements OnInit {\n  loading = false;\n  submitted = false;\n  IsValid: boolean;\n  returnUrl: string;\n  error = '';\n  constructor(\n    private titleService: Title,\n    public service: LoginService,\n    private router: Router,\n    private toastr: ToastrService\n  ) { this.IsValid = true; }\n\n  ngOnInit(): void {\n    if (this.service.forgetpassword.UserName.length === 0) { this.router.navigate(['/auth']); }\n    this.titleService.setTitle('Forgot Password - OTP | Genic Solution');\n  }\n  onSubmit() {\n    this.IsValid = true;\n    this.submitted = true;\n    this.loading = true;\n    this.error = '';\n\n    if (this.service.forgetpassword.OTP === undefined || this.service.forgetpassword.OTP === null) {\n      this.toastr.warning('Warning', 'Please enter an OTP');\n      this.IsValid = false;\n      this.loading = false;\n      return false;\n    }\n    if (this.service.forgetpassword.OTP.toString().length !== 4) {\n      this.toastr.warning('Warning', 'Please enter an valid OTP');\n      this.IsValid = false;\n      this.loading = false;\n      return false;\n    }\n    this.returnUrl = '/auth/users/forgot-password-reset';\n    this.service.forgetpassword.NewPassword = '********';\n    this.service.forgetpassword.OldPassword = '********';\n    this.service.ForgotPasswordStep2().subscribe( res => {\n      if (res) { const msg = res as any;\n                 if (msg.Message === 'success') {\n                  this.toastr.success('success', msg.MessageDescription);\n                  setTimeout(() => { this.router.navigate([this.returnUrl]); }, 500);\n                  this.loading = false;\n                  this.IsValid = false;\n                 }\n                 if (msg.Message === 'failure') {\n                   this.toastr.warning('Warning', msg.MessageDescription);\n                   this.loading = false;\n                   this.IsValid = false;\n                   }\n      }}, error =>  console.log(error));\n  }\n}\n","<div class=\"auth\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"card\" style=\"margin: 136px auto 0 auto;width: 445px;\">\n        <div *ngIf=\"error\" class=\"alert alert-danger\">{{error}}</div>\n        <h5 class=\"card-header info-color white-text text-center py-4\">\n          <strong>Forgot Password</strong>\n        </h5>\n        <div class=\"card-body px-lg-5 pt-0\">\n          <form (ngSubmit)=\"onSubmit()\" class=\"text-center\" style=\"color: #757575;\" action=\"#!\">\n            <div class=\"md-form\">\n              <input type=\"text\" name=\"service.forgetpassword.UserName\"\n               #service.forgetpassword.UserName=\"ngModel\" [(ngModel)]=\"service.forgetpassword.UserName\"\n                disabled=\"disabled\" class=\"form-control\">\n            </div>\n            <div class=\"md-form\">\n              <label for=\"txtOTP\">OTP</label>\n            <input type=\"password\" name=\"service.forgetpassword.OTP\"\n             #service.forgetpassword.OTP=\"ngModel\" [(ngModel)]=\"service.forgetpassword.OTP\"\n              [ngClass]=\"{ 'is-invalid': !IsValid }\" class=\"form-control\">\n          </div>\n          <div class=\"d-flex justify-content-around\">\n            <div>\n              <a href=\"javascript:;\" routerLink=\"/auth\">Back to login</a>\n            </div>\n          </div>\n            <button [disabled]=\"loading\" class=\"btn btn-outline-info btn-rounded btn-block my-4 waves-effect z-depth-0\"\n              type=\"submit\">\n              <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n              Submit</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>"],"sourceRoot":"webpack:///"}