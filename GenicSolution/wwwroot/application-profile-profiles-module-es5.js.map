{"version":3,"sources":["webpack:///src/app/application/profile/profiles.module.ts","webpack:///src/app/application/profile/password-change.component.ts","webpack:///src/app/application/profile/password-change.component.html","webpack:///node_modules/ngx-select2/__ivy_ngcc__/fesm2015/ngx-select2.js"],"names":["routes","path","component","ProfilesModule","forChild","declarations","imports","exports","PasswordChangeComponent","service","loginservice","toastr","genicprofileservice","isValidChangePassword","isValidOldChangePassword","isValidNewChangePassword","isValidConfirmChangePassword","currentUser","subscribe","x","localPrependUrl","apiUrl","TicketFilter","IsReady","IsReadyQuote","IsReadyInvoice","forgetpassword","UserName","OldPassword","warning","NewPassword","ConfirmPassword","length","putPasswordChange","Token","res","response","Message","success","MessageDescription","setTimeout","window","history","back","error","console","log","strength","showDetails","onStrengthChanged","onsubmitPasswordchange","selector","templateUrl","styles","_c0","_c1","_c2","LSelect2Component_1","LSelect2Component","_renderer","options","required","maxCount","Number","MAX_SAFE_INTEGER","minCount","MIN_SAFE_INTEGER","valueChange","_onChange","_","_onTouched","_jqueryElement","$","selectControll","nativeElement","initSelect2","on","e","data","select2","item","element","disabled","selected","multiple","type","selectedValue","emit","setSelect2Value","changes","hasChanged","value","undefined","fn","isDisabled","c","hasClass","setProperty","Object","assign","targetVal","Array","isArray","map","val","trigger","JSON","stringify","previousValue","currentValue","ɵfac","LSelect2Component_Factory","t","ɵcmp","selectors","viewQuery","LSelect2Component_Query","rf","ctx","_t","first","inputs","outputs","features","provide","useExisting","multi","ngContentSelectors","decls","vars","consts","template","LSelect2Component_Template","encapsulation","ctorParameters","prototype","Boolean","LSelect2Module","ɵmod","ɵinj","factory","LSelect2Module_Factory","args","providers","ngJitMode"],"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","file":"application-profile-profiles-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common'; \r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { LSelect2Module } from 'ngx-select2';\r\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\r\nimport { PasswordChangeComponent } from './password-change.component';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatPasswordStrengthModule } from '@angular-material-extensions/password-strength';\r\nconst routes: Routes = [\r\n  { path: '',\tcomponent: PasswordChangeComponent},\r\n  { path: 'password-change', component: PasswordChangeComponent},\r\n];\r\n@NgModule({\r\n  declarations: [PasswordChangeComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MatDialogModule,\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatNativeDateModule,\r\n    MatInputModule,\r\n    HttpClientModule,\r\n    DataTablesModule,\r\n    FormsModule,\r\n    NgbModule,\r\n    LSelect2Module,\r\n    MatPasswordStrengthModule,\r\n    MatSlideToggleModule,\r\n    MatToolbarModule,\r\n    MatTabsModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(routes),\r\n    NgMultiSelectDropDownModule\r\n  ],\r\n  exports: [\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatNativeDateModule,\r\n    MatInputModule\r\n  ],\r\n})\r\nexport class ProfilesModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from 'src/app/services/login.service';\nimport { Login, AuthenticationService } from 'src/app/services';\nimport { environment } from 'src/environments/environment';\nimport { ToastrService } from 'ngx-toastr';\nimport { GenicProfileService } from 'src/app/services/genicprofile.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-password-change',\n  templateUrl: './password-change.component.html',\n  styles: []\n})\nexport class PasswordChangeComponent implements OnInit {\n  currentUser: Login;\n  localPrependUrl: string;\n  showDetails: boolean;\n  isValidChangePassword = true;\n  isValidOldChangePassword = true;\n  isValidNewChangePassword = true;\n  isValidConfirmChangePassword = true;\n  showDetails3: boolean;\n  constructor(\n    public service: LoginService,\n    public loginservice: AuthenticationService,\n    private toastr: ToastrService,\n    public genicprofileservice: GenicProfileService) {\n    this.loginservice.currentUser.subscribe(x => this.currentUser = x);\n    this.localPrependUrl = environment.apiUrl;\n   }\n\n  ngOnInit() {\n  }\n  onsubmitPasswordchange() {\n    this.genicprofileservice.TicketFilter.IsReady = false;\n    this.genicprofileservice.TicketFilter.IsReadyQuote = false;\n    this.genicprofileservice.TicketFilter.IsReadyInvoice = false;\n    this.isValidChangePassword = true;\n    this.isValidOldChangePassword = true;\n    this.isValidNewChangePassword = true;\n    this.isValidConfirmChangePassword = true;\n    this.service.forgetpassword.UserName = this.currentUser.UserName;\n    if (this.service.forgetpassword.OldPassword === '') {\n      this.isValidChangePassword = false;\n      this.isValidOldChangePassword = false;\n      this.toastr.warning('warning', 'Please enter old password');\n      return false;\n    }\n    if (this.service.forgetpassword.NewPassword === '') {\n      this.isValidChangePassword = false;\n      this.isValidNewChangePassword = false;\n      this.toastr.warning('warning', 'Please enter new password');\n      return false;\n    }\n    if (this.service.forgetpassword.ConfirmPassword === '') {\n      this.isValidChangePassword = false;\n      this.isValidConfirmChangePassword = false;\n      this.toastr.warning('warning', 'Please enter verify password');\n      return false;\n    }\n    if (this.service.forgetpassword.ConfirmPassword.length < 6) {\n      this.isValidChangePassword = false;\n      this.isValidConfirmChangePassword = false;\n      this.toastr.warning('warning', 'Minimum 6-to-16 characters Password length Required');\n      return false;\n    }\n    if (this.service.forgetpassword.NewPassword !== this.service.forgetpassword.ConfirmPassword) {\n      this.isValidChangePassword = false;\n      this.isValidNewChangePassword = false;\n      this.isValidConfirmChangePassword = false;\n      this.toastr.warning('warning', 'Both password not match');\n      return false;\n    }\n    // this.service.putPasswordChange(this.currentUser.Token).subscribe(\n    //   res => {\n    //     if (res.status === 202) {\n    //       this.toastr.success('success', 'update successfully');\n    //       this.service.forgetpassword.OldPassword = '';\n    //       this.service.forgetpassword.NewPassword = '';\n    //       this.service.forgetpassword.ConfirmPassword = '';\n    //       Swal.fire({\n    //         title: 'Your password update successfully!',\n    //         text: 'Use new password when you login next time.',\n    //         type: 'info'\n    //       });\n    //     } else {\n    //       const r: any = res;\n    //       this.toastr.warning('warning', r.body.toString());\n    //     }\n    //   },\n    //   err => {\n    //     const r: any = err;\n    //     this.toastr.error('error', r.body.toString());\n    //     console.log(err.error);\n    //   });\n    this.service.putPasswordChange(this.currentUser.Token).subscribe( res => {\n      if (res) { const response = res as any;\n                if (response.Message === 'success') {\n                  this.toastr.success(response.MessageDescription);\n                  this.service.forgetpassword.OldPassword = '';\n                  this.service.forgetpassword.NewPassword = '';\n                  this.service.forgetpassword.ConfirmPassword = '';\n                  setTimeout(() => {\n                    window.history.back();\n                  }, 2000);\n                  }\n                if (response.Message === 'failure') {\n                  this.toastr.warning(response.MessageDescription);\n                }\n      }}, error =>  console.log(error));\n  }\n  onStrengthChanged(strength: number) {\n   // console.log('password strength = ', strength);\n  }\n  onPasswordStrengShow() {\n    if (this.showDetails) {\n      this.showDetails = false;\n    } else {\n      this.showDetails = true;\n    }\n  }\n}\n","<div class=\"kt-portlet \">\n    <form class=\"kt-form kt-form--label-right\">\n        <div class=\"kt-portlet__body\">\n            <div class=\"kt-section kt-section--first\">\n                <div class=\"kt-section__body\">\n                    <div style=\"display: none;\" class=\"alert alert-solid-danger alert-bold fade show kt-margin-t-20 kt-margin-b-40\"\n                        role=\"alert\">\n                        <div class=\"alert-icon\"><i class=\"fa fa-exclamation-triangle\"></i>\n                        </div>\n                        <div class=\"alert-text\">Configure user passwords to expire\n                            periodically. Users will need warning that their passwords are\n                            going to expire, <br>or they might inadvertently get locked out\n                            of the system!</div>\n                        <div class=\"alert-close\">\n                            <button type=\"button\" class=\"close\" data-dismiss=\"alert\"\n                                aria-label=\"Close\">\n                                <span aria-hidden=\"true\"><i class=\"la la-close\"></i></span>\n                            </button>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <label class=\"col-xl-3\"></label>\n                        <div class=\"col-lg-9 col-xl-6\">\n                            <h3 class=\"kt-section__title kt-section__title-sm\">Change Your Password:</h3>\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label class=\"col-xl-3 col-lg-3 col-form-label\">\n                            </label>\n                        <div class=\"col-lg-9 col-xl-6\">\n                            <input type=\"password\" class=\"form-control\" name=\"OldPassword\"\n                                #OldPassword=\"ngModel\"\n                                [(ngModel)]=\"service.forgetpassword.OldPassword\"\n                                placeholder=\"Current password\">\n                        </div>\n                    </div>\n                   \n                    <div class=\"form-group row\">\n                        <label class=\"col-xl-3 col-lg-3 col-form-label\">\n                            </label>\n                        <div class=\"col-lg-9 col-xl-6\">\n                           \n                                <mat-card>\n                                    <mat-card-subtitle>\n                                      <mat-slide-toggle [(ngModel)]=\"showDetails3\"\n                                                        [ngModelOptions]=\"{standalone: true}\">\n                                        Show Password Details\n                                      </mat-slide-toggle>\n                                    </mat-card-subtitle>          \n                                    <mat-card-content>\n                  \n                                      <!--password input filed-->\n                                      <mat-form-field appearance=\"outline\" [color]=\"passwordComponentWithConfirmation.color\" style=\"width: 100%\">\n                                        <mat-label>New Password</mat-label>\n                                        <mat-pass-toggle-visibility #toggle3 matSuffix>\n                                          <i class=\"fa fa-list\"></i>\n                                        </mat-pass-toggle-visibility>\n                                        <input matInput #passwordWithConfirmation [(ngModel)]=\"service.forgetpassword.NewPassword\"  \n                                               [type]=\"toggle3.type\"\n                                               [formControl]=\"passwordComponentWithConfirmation.passwordFormControl\"\n                                               placeholder=\"Password\"\n                                               required>\n                                        <!--password hint-->\n                                        <mat-hint align=\"end\" aria-live=\"polite\">\n                                          {{passwordWithConfirmation.value.length}} / {{passwordComponentWithConfirmation.max}}\n                                        </mat-hint>\n                                        <mat-error *ngIf=\"passwordComponentWithConfirmation.passwordFormControl.hasError('required')\">\n                                          Password is required\n                                        </mat-error>\n                                        <mat-error *ngIf=\"passwordComponentWithConfirmation.passwordFormControl.hasError('pattern')\">\n                                          Password is not valid\n                                        </mat-error>\n                                      </mat-form-field>\n                                      <!--@angular-material-extensions/password-strength's main component-->\n                                      <mat-password-strength #passwordComponentWithConfirmation\n                                                             (onStrengthChanged)=\"onStrengthChanged($event)\"\n                                                             [password]=\"passwordWithConfirmation.value\">\n                                      </mat-password-strength>\n                                      <!--Password's strength info-->\n                                      <mat-password-strength-info\n                                        *ngIf=\"showDetails3\"\n                                        [passwordComponent]=\"passwordComponentWithConfirmation\">\n                                      </mat-password-strength-info>\n                                      <!--password input field for confirmation-->\n                                      <mat-form-field appearance=\"outline\" class=\"mt-3\" style=\"width: 100%\">\n                                        <mat-label>Confirm Password</mat-label>\n                                        <mat-pass-toggle-visibility #toggleConfirmPassword matSuffix></mat-pass-toggle-visibility>\n                                        <input matInput #passwordToConfirm [(ngModel)]=\"service.forgetpassword.ConfirmPassword\"  \n                                               [type]=\"toggleConfirmPassword.type\"\n                                               [formControl]=\"passwordComponentWithConfirmation.passwordConfirmationFormControl\"\n                                               placeholder=\"Password\">\n                                        <!-- password hint-->\n                                        <mat-hint align=\"end\" aria-live=\"polite\">\n                                          {{passwordToConfirm.value.length}} / {{passwordComponentWithConfirmation.max}}\n                                        </mat-hint>\n                                        <!-- password error msgs-->\n                                        <mat-error *ngIf=\"passwordComponentWithConfirmation.passwordConfirmationFormControl.hasError('required')\">\n                                          Password confirmation is required\n                                        </mat-error>\n                                        <mat-error\n                                          *ngIf=\"passwordComponentWithConfirmation.passwordConfirmationFormControl.hasError('notConfirmed')\">\n                                          Password is not the same\n                                        </mat-error>\n                                      </mat-form-field>\n                                    </mat-card-content>\n                                    <mat-card-content>\n                                    </mat-card-content>\n                                  </mat-card>                                                 \n                            \n                        </div>\n                </div>\n                    <!-- <div class=\"form-group form-group-last row\">\n                        <label class=\"col-xl-3 col-lg-3 col-form-label\">Verify\n                            Password</label>\n                        <div class=\"col-lg-9 col-xl-6\">\n                            <input type=\"password\" class=\"form-control\"\n                                name=\"ConfirmPassword\" #ConfirmPassword=\"ngModel\"\n                                [(ngModel)]=\"service.forgetpassword.ConfirmPassword\"\n                                placeholder=\"Verify password\">\n                        </div>\n                    </div> -->\n                </div>\n            </div>\n        </div>\n        <div class=\"kt-portlet__foot\">\n            <div class=\"kt-form__actions\">\n                <div class=\"row\">\n                    <div class=\"col-lg-3 col-xl-3\">\n                    </div>\n                    <div class=\"col-lg-9 col-xl-9\">\n                        <button type=\"button\" class=\"btn btn-brand btn-bold\"\n                        \n                            (click)=\"onsubmitPasswordchange()\">Change\n                            Password</button>&nbsp;\n                        <button class=\"btn btn-secondary\">Cancel</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </form>\n</div>\n","import { __decorate, __metadata } from 'tslib';\nimport { EventEmitter, Renderer2, ViewChild, ElementRef, Input, Output, Component, forwardRef, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, FormsModule } from '@angular/forms';\n\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"selectControll\"];\nconst _c1 = [[[\"option\"], [\"optgroup\"]]];\nconst _c2 = [\"option, optgroup\"];\nvar LSelect2Component_1;\r\nlet LSelect2Component = LSelect2Component_1 = class LSelect2Component {\r\n    constructor(_renderer) {\r\n        this._renderer = _renderer;\r\n        this.options = {};\r\n        this.required = false;\r\n        this.maxCount = Number.MAX_SAFE_INTEGER;\r\n        this.minCount = Number.MIN_SAFE_INTEGER;\r\n        this.valueChange = new EventEmitter();\r\n        this._onChange = (_) => { };\r\n        this._onTouched = () => { };\r\n    }\r\n    ngOnInit() { }\r\n    ngAfterViewInit() {\r\n        this._jqueryElement = $(this.selectControll.nativeElement);\r\n        this.initSelect2();\r\n        this._jqueryElement.on('select2:select select2:unselect', (e) => {\r\n            let data = this._jqueryElement.select2('data');\r\n            for (let item of data) {\r\n                delete item.element;\r\n                delete item.disabled;\r\n                delete item.selected;\r\n            }\r\n            if (!this.options.multiple) {\r\n                data = (e.type == 'select2:unselect') ? null : data[0];\r\n            }\r\n            this.selectedValue = data;\r\n            this._onChange(data);\r\n            this.valueChange.emit(data);\r\n        });\r\n        if (this.selectedValue) {\r\n            this.setSelect2Value(this.selectedValue);\r\n        }\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (!this._jqueryElement)\r\n            return;\r\n        if (this.hasChanged(changes)) {\r\n            this.initSelect2();\r\n            if (this.selectedValue) {\r\n                this.setSelect2Value(this.selectedValue);\r\n            }\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this._jqueryElement.select2('destroy');\r\n    }\r\n    writeValue(value) {\r\n        this.selectedValue = value;\r\n        if (value !== null && value !== undefined)\r\n            this.setSelect2Value(value);\r\n    }\r\n    registerOnChange(fn) {\r\n        this._onChange = fn;\r\n    }\r\n    registerOnTouched(fn) {\r\n        this._onTouched = fn;\r\n    }\r\n    setDisabledState(isDisabled) {\r\n        this.disabled = isDisabled;\r\n    }\r\n    validate(c) {\r\n        if (this.disabled) {\r\n            return null;\r\n        }\r\n        let length = this.selectedValue ? this.selectedValue.length : 0;\r\n        if (this.required === true && length === 0) {\r\n            return { required: true };\r\n        }\r\n        if (this.minCount > 0 && length < this.minCount) {\r\n            return { minCount: true };\r\n        }\r\n        if (this.maxCount > 0 && length > this.maxCount) {\r\n            return { maxCount: true };\r\n        }\r\n        return null;\r\n    }\r\n    initSelect2() {\r\n        if (this._jqueryElement.hasClass('select2-hidden-accessible') == true) {\r\n            this._jqueryElement.select2('destroy');\r\n            this._renderer.setProperty(this.selectControll.nativeElement, 'innerHTML', '');\r\n        }\r\n        let options = {\r\n            data: this.data\r\n        };\r\n        Object.assign(options, this.options);\r\n        this._jqueryElement.select2(options);\r\n    }\r\n    setSelect2Value(value) {\r\n        if (!this._jqueryElement || !value) {\r\n            this.selectedValue = value;\r\n            return;\r\n        }\r\n        ;\r\n        let targetVal = value['id'] || value;\r\n        if (Array.isArray(value)) {\r\n            targetVal = value.map(x => x['id']);\r\n        }\r\n        this._jqueryElement.val(targetVal).trigger('change');\r\n    }\r\n    hasChanged(changes) {\r\n        if (changes['data'] && JSON.stringify(changes['data'].previousValue) !== JSON.stringify(changes['data'].currentValue)) {\r\n            return true;\r\n        }\r\n        if (changes['options'] && JSON.stringify(changes['options'].previousValue) !== JSON.stringify(changes['options'].currentValue)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n};\nLSelect2Component.ɵfac = function LSelect2Component_Factory(t) { return new (t || LSelect2Component)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\nLSelect2Component.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: LSelect2Component, selectors: [[\"l-select2\"]], viewQuery: function LSelect2Component_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.selectControll = _t.first);\n    } }, inputs: { options: \"options\", required: \"required\", maxCount: \"maxCount\", minCount: \"minCount\", disabled: \"disabled\", data: \"data\" }, outputs: { valueChange: \"valueChange\" }, features: [ɵngcc0.ɵɵProvidersFeature([\n            {\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: forwardRef(() => LSelect2Component_1),\n                multi: true\n            },\n            {\n                provide: NG_VALIDATORS,\n                useExisting: forwardRef(() => LSelect2Component_1),\n                multi: true\n            }\n        ]), ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c2, decls: 3, vars: 1, consts: [[2, \"width\", \"100%\", 3, \"disabled\"], [\"selectControll\", \"\"]], template: function LSelect2Component_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵelementStart(0, \"select\", 0, 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled);\n    } }, encapsulation: 2 });\r\nLSelect2Component.ctorParameters = () => [\r\n    { type: Renderer2 }\r\n];\r\n__decorate([\r\n    ViewChild('selectControll'),\r\n    __metadata(\"design:type\", ElementRef)\r\n], LSelect2Component.prototype, \"selectControll\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Array)\r\n], LSelect2Component.prototype, \"data\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], LSelect2Component.prototype, \"disabled\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object)\r\n], LSelect2Component.prototype, \"options\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], LSelect2Component.prototype, \"required\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Number)\r\n], LSelect2Component.prototype, \"maxCount\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Number)\r\n], LSelect2Component.prototype, \"minCount\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], LSelect2Component.prototype, \"valueChange\", void 0);\r\nLSelect2Component = LSelect2Component_1 = __decorate([ __metadata(\"design:paramtypes\", [Renderer2])\r\n], LSelect2Component);\n\nlet LSelect2Module = class LSelect2Module {\r\n};\nLSelect2Module.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: LSelect2Module });\nLSelect2Module.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function LSelect2Module_Factory(t) { return new (t || LSelect2Module)(); }, imports: [[\n            CommonModule,\n            FormsModule\n        ]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LSelect2Component, [{\n        type: Component,\n        args: [{\n                selector: 'l-select2',\n                template: \"<select #selectControll [disabled]=\\\"disabled\\\" style=\\\"width: 100%\\\">\\r\\n  <ng-content select=\\\"option, optgroup\\\">\\r\\n  </ng-content>\\r\\n</select>\",\n                providers: [\n                    {\n                        provide: NG_VALUE_ACCESSOR,\n                        useExisting: forwardRef(() => LSelect2Component_1),\n                        multi: true\n                    },\n                    {\n                        provide: NG_VALIDATORS,\n                        useExisting: forwardRef(() => LSelect2Component_1),\n                        multi: true\n                    }\n                ]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }]; }, { options: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], maxCount: [{\n            type: Input\n        }], minCount: [{\n            type: Input\n        }], valueChange: [{\n            type: Output\n        }], disabled: [{\n            type: Input\n        }], selectControll: [{\n            type: ViewChild,\n            args: ['selectControll']\n        }], data: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LSelect2Module, { declarations: function () { return [LSelect2Component]; }, imports: function () { return [CommonModule,\n        FormsModule]; }, exports: function () { return [LSelect2Component]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LSelect2Module, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule\n                ],\n                declarations: [\n                    LSelect2Component\n                ],\n                exports: [\n                    LSelect2Component\n                ]\n            }]\n    }], null, null); })();\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { LSelect2Component, LSelect2Module };\n\n//# sourceMappingURL=ngx-select2.js.map"]}