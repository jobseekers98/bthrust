{"version":3,"sources":["webpack:///src/app/userprofile/forgot-password/forgot-password-reset.component.ts","webpack:///src/app/userprofile/forgot-password/forgot-password-reset.component.html","webpack:///node_modules/email-validator/index.js","webpack:///src/app/userprofile/userprofile.component.ts","webpack:///src/app/userprofile/userprofile.module.ts","webpack:///src/app/userprofile/forgot-password/forgot-password.component.ts","webpack:///src/app/userprofile/forgot-password/forgot-password.component.html","webpack:///src/app/userprofile/forgot-password/forgot-password-otp.component.ts","webpack:///src/app/userprofile/forgot-password/forgot-password-otp.component.html"],"names":["ForgotPasswordResetComponent","titleService","service","router","toastr","loading","submitted","error","IsValid","IsDone","forgetpassword","UserName","length","navigate","setTitle","passwordComponentWithConfirmation","passwordFormControl","valueChanges","subscribe","console","log","passwordConfirmationFormControl","NewPassword","OldPassword","ConfirmPassword","warning","OTP","ForgotPasswordStep3","res","msg","Message","success","MessageDescription","strength","templateUrl","styles","tester","exports","validate","email","valid","test","parts","split","domainParts","some","part","UserprofileComponent","template","routes","path","component","children","UserProfileModule","forChild","forRoot","declarations","imports","entryComponents","ForgotPasswordComponent","returnUrl","ForgotPasswordStep1","setTimeout","onSubmit","ForgotPasswordOtpComponent","undefined","toString","ForgotPasswordStep2"],"mappings":"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","file":"userprofile-userprofile-module-es5.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { LoginService } from 'src/app/services';\nimport { MatPasswordStrengthComponent } from '@angular-material-extensions/password-strength';\nimport { Title } from '@angular/platform-browser';\n@Component({\n  templateUrl: './forgot-password-reset.component.html',\n  styles: []\n})\nexport class ForgotPasswordResetComponent implements OnInit {\n  @ViewChild('passwordComponentWithConfirmation', {static: true})\n  passwordComponentWithConfirmation: MatPasswordStrengthComponent;\n  loading = false;\n  submitted = false;\n  IsDone: boolean;\n  IsValid: boolean;\n  returnUrl: string;\n  error = '';\n  showDetails3: boolean;\n  constructor(\n    private titleService: Title,\n    public service: LoginService,\n    private router: Router,\n    private toastr: ToastrService\n  ) { this.IsValid = true; this.IsDone = false; }\n\n  ngOnInit(): void {\n    if (this.service.forgetpassword.UserName.length === 0) { this.router.navigate(['/auth']); }\n    this.titleService.setTitle('Forgot Password - Reset | Genic Solution');\n    this.passwordComponentWithConfirmation.passwordFormControl.valueChanges.subscribe(() => {\n      console.log('passwordFormControl form control = ', this.passwordComponentWithConfirmation.passwordFormControl);\n    });\n\n    this.passwordComponentWithConfirmation.passwordConfirmationFormControl.valueChanges.subscribe(() => {\n      console.log('passwordFormControl form control = ', this.passwordComponentWithConfirmation.passwordConfirmationFormControl);\n    });\n    this.service.forgetpassword.NewPassword = '';\n    this.service.forgetpassword.OldPassword = '';\n    this.service.forgetpassword.ConfirmPassword = '';\n  }\n  onSubmit() {\n    this.IsValid = true;\n    this.submitted = true;\n    this.loading = true;\n    this.error = '';\n\n    if (this.service.forgetpassword.NewPassword.length === 0) {\n      this.toastr.warning('Warning', 'Please enter New Password');\n      this.IsValid = false;\n      this.loading = false;\n      return false;\n    }\n    if (this.service.forgetpassword.ConfirmPassword.length === 0) {\n      this.toastr.warning('Warning', 'Please enter Confirm Password');\n      this.IsValid = false;\n      this.loading = false;\n      return false;\n    }\n    if (this.service.forgetpassword.NewPassword !== this.service.forgetpassword.ConfirmPassword) {\n      this.toastr.warning('Warning', 'Both password not match');\n      this.IsValid = false;\n      this.loading = false;\n      return false;\n    }\n    this.service.forgetpassword.OTP = '1234';\n    this.service.ForgotPasswordStep3().subscribe( res => {\n      if (res) { const msg = res as any;\n                 if (msg.Message === 'success') {\n                  this.toastr.success('success', msg.MessageDescription);\n                  this.loading = false;\n                  this.IsValid = false;\n                  this.IsDone = true;\n                 }\n                 if (msg.Message === 'failure') {\n                   this.toastr.warning('Warning', msg.MessageDescription);\n                   this.loading = false;\n                   this.IsValid = false;\n                   }\n      }}, error =>  console.log(error));\n  }\n  onStrengthChanged(strength: number) {\n    // console.log('password strength = ', strength);\n  }\n}\n","<div class=\"auth\">\n  <div class=\"container\">\n    <div class=\"row\" *ngIf=\"!IsDone\">\n      <div class=\"card\" style=\"margin: 136px auto 0 auto;width: 600px;\">\n        <div *ngIf=\"error\" class=\"alert alert-danger\">{{error}}</div>\n      \n        <div class=\"card-body pt-0\">\n          <h5 class=\"white-text text-left py-4\">\n            <strong>Forgot Password</strong>\n          </h5>\n          <form (ngSubmit)=\"onSubmit()\" class=\"text-left\" style=\"color: #757575;\" action=\"#!\">\n            <div class=\"md-form\">\n              <input type=\"text\" name=\"service.forgetpassword.UserName\"\n               #service.forgetpassword.UserName=\"ngModel\" [(ngModel)]=\"service.forgetpassword.UserName\"\n                disabled=\"disabled\" class=\"form-control\">\n            </div>\n            <div class=\"md-form\">         \n              <div fxLayout=\"column\" class=\"mt-3\">          \n                <mat-card>\n                  <mat-card-subtitle>\n                    <mat-slide-toggle [(ngModel)]=\"showDetails3\"\n                                      [ngModelOptions]=\"{standalone: true}\">\n                      Show Password Details\n                    </mat-slide-toggle>\n                  </mat-card-subtitle>          \n                  <mat-card-content>\n\n                    <!--password input filed-->\n                    <mat-form-field appearance=\"outline\" [color]=\"passwordComponentWithConfirmation.color\" style=\"width: 100%\">\n                      <mat-label>Password</mat-label>\n                      <mat-pass-toggle-visibility #toggle3 matSuffix>\n                        <i class=\"fa fa-list\"></i>\n                      </mat-pass-toggle-visibility>\n                      <input matInput #passwordWithConfirmation [(ngModel)]=\"service.forgetpassword.NewPassword\"  \n                             [type]=\"toggle3.type\"\n                             [formControl]=\"passwordComponentWithConfirmation.passwordFormControl\"\n                             placeholder=\"Password\"\n                             required>\n                      <!--password hint-->\n                      <mat-hint align=\"end\" aria-live=\"polite\">\n                        {{passwordWithConfirmation.value.length}} / {{passwordComponentWithConfirmation.max}}\n                      </mat-hint>\n                      <mat-error *ngIf=\"passwordComponentWithConfirmation.passwordFormControl.hasError('required')\">\n                        Password is required\n                      </mat-error>\n                      <mat-error *ngIf=\"passwordComponentWithConfirmation.passwordFormControl.hasError('pattern')\">\n                        Password is not valid\n                      </mat-error>\n                    </mat-form-field>\n                    <!--@angular-material-extensions/password-strength's main component-->\n                    <mat-password-strength #passwordComponentWithConfirmation\n                                           (onStrengthChanged)=\"onStrengthChanged($event)\"\n                                           [password]=\"passwordWithConfirmation.value\">\n                    </mat-password-strength>\n                    <!--Password's strength info-->\n                    <mat-password-strength-info\n                      *ngIf=\"showDetails3\"\n                      [passwordComponent]=\"passwordComponentWithConfirmation\">\n                    </mat-password-strength-info>\n                    <!--password input field for confirmation-->\n                    <mat-form-field appearance=\"outline\" class=\"mt-3\" style=\"width: 100%\">\n                      <mat-label>Confirm Password</mat-label>\n                      <mat-pass-toggle-visibility #toggleConfirmPassword matSuffix></mat-pass-toggle-visibility>\n                      <input matInput #passwordToConfirm [(ngModel)]=\"service.forgetpassword.ConfirmPassword\"  \n                             [type]=\"toggleConfirmPassword.type\"\n                             [formControl]=\"passwordComponentWithConfirmation.passwordConfirmationFormControl\"\n                             placeholder=\"Password\">\n                      <!-- password hint-->\n                      <mat-hint align=\"end\" aria-live=\"polite\">\n                        {{passwordToConfirm.value.length}} / {{passwordComponentWithConfirmation.max}}\n                      </mat-hint>\n                      <!-- password error msgs-->\n                      <mat-error *ngIf=\"passwordComponentWithConfirmation.passwordConfirmationFormControl.hasError('required')\">\n                        Password confirmation is required\n                      </mat-error>\n                      <mat-error\n                        *ngIf=\"passwordComponentWithConfirmation.passwordConfirmationFormControl.hasError('notConfirmed')\">\n                        Password is not the same\n                      </mat-error>\n                    </mat-form-field>\n                  </mat-card-content>\n                  <mat-card-content>\n                    <a href=\"javascript:;\" routerLink=\"/auth\">Back to login</a>\n                  </mat-card-content>\n                </mat-card>\n              </div>\n          </div>\n            <button class=\"btn btn-outline-info btn-rounded btn-block my-4 waves-effect z-depth-0\"\n            *ngIf=\"!passwordComponentWithConfirmation.passwordConfirmationFormControl.hasError('notConfirmed')\"\n            [disabled]=\"passwordComponentWithConfirmation.strength !== 100\" type=\"submit\">\n              <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n              Submit</button>\n          </form>\n        </div>\n        \n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"IsDone\">\n      <div class=\"card\" style=\"margin: 136px auto 0 auto;width: 445px; font-size: 25px;\">\n        <div class=\"alert alert-success\">Password change successfully</div>\n        <h5 class=\"card-header info-color white-text text-center py-4\">\n          <strong>Password change successfully</strong>\n        </h5>\n        <div class=\"card-body px-lg-5 pt-0\">\n          <div class=\"d-flex justify-content-around\">\n            <div>\n              <a href=\"javascript:;\" routerLink=\"/auth\">Back to login</a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","\"use strict\";\r\n\r\nvar tester = /^[-!#$%&'*+\\/0-9=?A-Z^_a-z{|}~](\\.?[-!#$%&'*+\\/0-9=?A-Z^_a-z`{|}~])*@[a-zA-Z0-9](-*\\.?[a-zA-Z0-9])*\\.[a-zA-Z](-?[a-zA-Z0-9])+$/;\r\n// Thanks to:\r\n// http://fightingforalostcause.net/misc/2006/compare-email-regex.php\r\n// http://thedailywtf.com/Articles/Validating_Email_Addresses.aspx\r\n// http://stackoverflow.com/questions/201323/what-is-the-best-regular-expression-for-validating-email-addresses/201378#201378\r\nexports.validate = function(email)\r\n{\r\n\tif (!email)\r\n\t\treturn false;\r\n\t\t\r\n\tif(email.length>254)\r\n\t\treturn false;\r\n\r\n\tvar valid = tester.test(email);\r\n\tif(!valid)\r\n\t\treturn false;\r\n\r\n\t// Further checking of some things regex can't handle\r\n\tvar parts = email.split(\"@\");\r\n\tif(parts[0].length>64)\r\n\t\treturn false;\r\n\r\n\tvar domainParts = parts[1].split(\".\");\r\n\tif(domainParts.some(function(part) { return part.length>63; }))\r\n\t\treturn false;\r\n\r\n\treturn true;\r\n}","import { Component, OnInit } from '@angular/core';\n@Component({template: '<router-outlet></router-outlet>'})\nexport class UserprofileComponent implements OnInit  {\n  ngOnInit() {}\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { NgxMaterialTimepickerModule } from 'ngx-material-timepicker';\nimport { PopoverModule } from 'ngx-smart-popover';\nimport { SweetAlert2Module } from '@sweetalert2/ngx-sweetalert2';\nimport { LoadingBarHttpClientModule } from '@ngx-loading-bar/http-client';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { UserprofileComponent } from './userprofile.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { ForgotPasswordOtpComponent } from './forgot-password/forgot-password-otp.component';\nimport { ForgotPasswordResetComponent } from './forgot-password/forgot-password-reset.component';\nimport { MatPasswordStrengthModule } from '@angular-material-extensions/password-strength';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nconst routes: Routes = [\n  { path: '', component: UserprofileComponent,\n            children: [\n              { path: 'forgot-password', component: ForgotPasswordComponent },\n              { path: 'forgot-password-otp', component: ForgotPasswordOtpComponent },\n              { path: 'forgot-password-reset', component: ForgotPasswordResetComponent }\n            ]},\n];\n@NgModule({\n  declarations: [\n    UserprofileComponent,\n    ForgotPasswordComponent,\n    ForgotPasswordOtpComponent,\n    ForgotPasswordResetComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild(routes),\n    HttpClientModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatNativeDateModule,\n    MatInputModule,\n    NgxMaterialTimepickerModule ,\n    NgbModule,\n    PopoverModule,\n    ReactiveFormsModule,\n    SweetAlert2Module.forRoot(),\n    LoadingBarHttpClientModule,\n    MatPasswordStrengthModule,\n    MatSlideToggleModule,\n    MatToolbarModule,\n    MatTabsModule,\n    MatIconModule,\n    MatCardModule,\n  ],\n  exports: [\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatNativeDateModule,\n    MatInputModule\n  ],\n  entryComponents: []\n})\nexport class UserProfileModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { LoginService } from 'src/app/services';\nimport * as EmailValidator from 'email-validator';\nimport { Title } from '@angular/platform-browser';\n@Component({\n  templateUrl: './forgot-password.component.html',\n  styles: []\n})\nexport class ForgotPasswordComponent implements OnInit {\n  loading = false;\n  submitted = false;\n  IsValid: boolean;\n  returnUrl: string;\n  error = '';\n  constructor(\n    private titleService: Title,\n    public service: LoginService,\n    private router: Router,\n    private toastr: ToastrService\n  ) { this.IsValid = true; }\n\n  ngOnInit(): void {\n    this.titleService.setTitle('Forgot Password | Genic Solution');\n  }\n  onSubmit() {\n    this.IsValid = true;\n    this.submitted = true;\n    this.loading = true;\n    this.error = '';\n\n    if (this.service.forgetpassword.UserName === '') {\n      this.toastr.warning('Warning', 'Please enter an email');\n      this.IsValid = false;\n      this.loading = false;\n      return false;\n    }\n    if (!EmailValidator.validate(this.service.forgetpassword.UserName)) {\n      this.toastr.warning('Warning', 'Please enter a valid email');\n      this.IsValid = false;\n      this.loading = false;\n      return false;\n    }\n    this.returnUrl = '/auth/users/forgot-password-otp';\n    this.service.forgetpassword.OTP = null;\n    this.service.forgetpassword.NewPassword = '********';\n    this.service.forgetpassword.OldPassword = '********';\n    this.service.ForgotPasswordStep1().subscribe( res => {\n      if (res) { const msg = res as any;\n                 if (msg.Message === 'success') {\n                  this.toastr.success('success', msg.MessageDescription);\n                  setTimeout(() => { this.router.navigate([this.returnUrl]); }, 500);\n                  this.loading = false;\n                  this.IsValid = false;\n                 }\n                 if (msg.Message === 'failure') {\n                   this.toastr.warning('Warning', msg.MessageDescription);\n                   this.loading = false;\n                   this.IsValid = false;\n                   }\n      }}, error =>  console.log(error));\n  }\n}\n","<div class=\"auth\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"card\" style=\"margin: 136px auto 0 auto;width: 445px;\">\n        <div *ngIf=\"error\" class=\"alert alert-danger\">{{error}}</div>\n      \n        <div class=\"card-body pt-0\">\n          <h5 class=\"white-text text-left py-4\">\n            <strong>Forgot Password</strong>\n          </h5>\n          <form (ngSubmit)=\"onSubmit()\" class=\"text-left\" style=\"color: #757575;\" action=\"#!\">\n            <div class=\"md-form\">\n                <label for=\"txtUserName\">E-mail</label>\n              <input type=\"text\" name=\"service.forgetpassword.UserName\"\n               #service.forgetpassword.UserName=\"ngModel\" [(ngModel)]=\"service.forgetpassword.UserName\"\n                [ngClass]=\"{ 'is-invalid': !IsValid }\" class=\"form-control\">\n            </div>\n            <div class=\"d-flex justify-content-around\">\n                <div>\n                    <br>\n                  <a href=\"javascript:;\" routerLink=\"/auth\">Back to login</a>\n                </div>\n              </div>\n            <button [disabled]=\"loading\" class=\"btn btn-outline-info btn-rounded btn-block my-4 waves-effect z-depth-0\"\n              type=\"submit\">\n              <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n              Submit</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { LoginService } from 'src/app/services';\nimport * as EmailValidator from 'email-validator';\nimport { Title } from '@angular/platform-browser';\n@Component({\n  templateUrl: './forgot-password-otp.component.html',\n  styles: []\n})\nexport class ForgotPasswordOtpComponent implements OnInit {\n  loading = false;\n  submitted = false;\n  IsValid: boolean;\n  returnUrl: string;\n  error = '';\n  constructor(\n    private titleService: Title,\n    public service: LoginService,\n    private router: Router,\n    private toastr: ToastrService\n  ) { this.IsValid = true; }\n\n  ngOnInit(): void {\n    if (this.service.forgetpassword.UserName.length === 0) { this.router.navigate(['/auth']); }\n    this.titleService.setTitle('Forgot Password - OTP | Genic Solution');\n  }\n  onSubmit() {\n    this.IsValid = true;\n    this.submitted = true;\n    this.loading = true;\n    this.error = '';\n\n    if (this.service.forgetpassword.OTP === undefined || this.service.forgetpassword.OTP === null) {\n      this.toastr.warning('Warning', 'Please enter an OTP');\n      this.IsValid = false;\n      this.loading = false;\n      return false;\n    }\n    if (this.service.forgetpassword.OTP.toString().length !== 4) {\n      this.toastr.warning('Warning', 'Please enter an valid OTP');\n      this.IsValid = false;\n      this.loading = false;\n      return false;\n    }\n    this.returnUrl = '/auth/users/forgot-password-reset';\n    this.service.forgetpassword.NewPassword = '********';\n    this.service.forgetpassword.OldPassword = '********';\n    this.service.ForgotPasswordStep2().subscribe( res => {\n      if (res) { const msg = res as any;\n                 if (msg.Message === 'success') {\n                  this.toastr.success('success', msg.MessageDescription);\n                  setTimeout(() => { this.router.navigate([this.returnUrl]); }, 500);\n                  this.loading = false;\n                  this.IsValid = false;\n                 }\n                 if (msg.Message === 'failure') {\n                   this.toastr.warning('Warning', msg.MessageDescription);\n                   this.loading = false;\n                   this.IsValid = false;\n                   }\n      }}, error =>  console.log(error));\n  }\n}\n","<div class=\"auth\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"card\" style=\"margin: 136px auto 0 auto;width: 445px;\">\n        <div *ngIf=\"error\" class=\"alert alert-danger\">{{error}}</div>\n        <h5 class=\"card-header info-color white-text text-center py-4\">\n          <strong>Forgot Password</strong>\n        </h5>\n        <div class=\"card-body px-lg-5 pt-0\">\n          <form (ngSubmit)=\"onSubmit()\" class=\"text-center\" style=\"color: #757575;\" action=\"#!\">\n            <div class=\"md-form\">\n              <input type=\"text\" name=\"service.forgetpassword.UserName\"\n               #service.forgetpassword.UserName=\"ngModel\" [(ngModel)]=\"service.forgetpassword.UserName\"\n                disabled=\"disabled\" class=\"form-control\">\n            </div>\n            <div class=\"md-form\">\n              <label for=\"txtOTP\">OTP</label>\n            <input type=\"password\" name=\"service.forgetpassword.OTP\"\n             #service.forgetpassword.OTP=\"ngModel\" [(ngModel)]=\"service.forgetpassword.OTP\"\n              [ngClass]=\"{ 'is-invalid': !IsValid }\" class=\"form-control\">\n          </div>\n          <div class=\"d-flex justify-content-around\">\n            <div>\n              <a href=\"javascript:;\" routerLink=\"/auth\">Back to login</a>\n            </div>\n          </div>\n            <button [disabled]=\"loading\" class=\"btn btn-outline-info btn-rounded btn-block my-4 waves-effect z-depth-0\"\n              type=\"submit\">\n              <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n              Submit</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>"]}