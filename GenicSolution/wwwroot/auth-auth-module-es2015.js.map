{"version":3,"sources":["./src/app/auth/from-drive.component.ts","./src/app/auth/auth.component.ts","./src/app/auth/auth.component.html","./src/app/auth/customer-ticket-feedback.component.ts","./src/app/auth/customer-ticket-feedback.component.html","./src/app/auth/auth.module.ts","./src/app/auth/customer-quote-for-signature.component.ts","./src/app/auth/customer-quote-for-signature.component.html"],"names":[],"mappings":"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","file":"auth-auth-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Login } from '../services';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\n@Component({\r\n  template: `\r\n           <div *ngIf=\"loading\" class=\"row\" style=\"background-color: blue;font-size: 15px;color: white;\">\r\n              <div class=\"col text-center\">\r\n                <div class=\"spinner-grow text-success\" role=\"status\">\r\n                  <span class=\"sr-only\">Loading...</span>\r\n                </div>Authenticate...\r\n              </div>\r\n          </div>\r\n          `,\r\n  styles: [``]\r\n})\r\nexport class FromDriveComponent implements OnInit {\r\n  currentUser: Login;\r\n  loading: boolean = false;\r\n  constructor(\r\n    public service: AuthenticationService,\r\n    private router: Router,\r\n    private route1: ActivatedRoute,\r\n    private toastr: ToastrService\r\n    ) {\r\n        this.service.currentUser.subscribe(x => this.currentUser = x);\r\n       \r\n    }\r\n    ngOnInit(): void {\r\n      try {\r\n      const token = this.route1.snapshot.queryParamMap.get('t');\r\n      const aut = this.route1.snapshot.queryParamMap.get('a');\r\n      if (token === null) { this.router.navigate(['/auth/']); }\r\n      if (aut === null) { this.router.navigate(['/auth/']); }\r\n      if (this.currentUser === null) {\r\n          this.login(aut);\r\n      } else {\r\n        if(this.currentUser.Token === token) {\r\n          this.router.navigate(['/dashboard/']);\r\n          } else { this.login(aut); }\r\n      } \r\n    }\r\n    catch { this.router.navigate(['/auth/']); }\r\n  }\r\n\r\n  login(Id) {\r\n    this.loading = true;\r\n    this.service.Drivelogin(Id).subscribe(res => {\r\n      if (res) { const response = res as any;\r\n        if (response.Message === 'success') {\r\n          this.router.navigate(['/dashboard/']);\r\n          this.loading = false;\r\n        }\r\n        if (response.Message === 'failure') {\r\n          this.toastr.warning(response.MessageDescription);\r\n          this.loading = false;\r\n          }\r\n      }\r\n    }, error => { console.log(error); this.loading = false;  });\r\n  }\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Title } from '@angular/platform-browser';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { first } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { Login } from '../services';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styles: [``]\n})\nexport class AuthComponent implements OnInit {\n  currentUser: Login;\n  title = 'ClientApp';\n  loginForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n  error = '';\n  localPrependUrl: string;\n  constructor(\n    public titleService: Title,\n    public service: AuthenticationService,\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService\n    ) {\n        this.service.currentUser.subscribe(x => this.currentUser = x);\n        this.localPrependUrl = environment.apiUrl;\n        if (this.service.currentUserValue) {\n         // this.router.navigate(['/']);\n         }\n    }\n    ngOnInit(): void {\n      this.loginForm = this.formBuilder.group({\n          UserName: ['', Validators.required],\n          Password: ['', Validators.required]\n      });\n      this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n      this.titleService.setTitle('Login | Genic Solution');\n  }\n  get f() { return this.loginForm.controls; }\n\n    onSubmit() {\n        this.error = '';\n        this.submitted = true;\n        if (this.loginForm.invalid) { return; }\n        this.loading = true;\n        this.service.login(this.f.UserName.value, this.f.Password.value).pipe(first()).subscribe(\n                res => { this.router.navigate([this.returnUrl]); },\n                error => {\n                  switch (error.status) {\n                          case 404 : this.toastr.warning('warning', this.ErrorMessage(error.status));\n                                     this.error = this.ErrorMessage(error.status); break;\n                          case 401 : this.toastr.warning('warning', this.ErrorMessage(error.status));\n                                     this.error = this.ErrorMessage(error.status); break;\n                          case 400 : this.toastr.warning('warning', this.ErrorMessage(error.status));\n                                     this.error = this.ErrorMessage(error.status); break;\n                          default : this.toastr.error('error', error.statusText); break;\n                        }\n                });\n        this.loading = false;\n    }\n\nErrorMessage(code: number): string {\n  switch (code) {\n    case 404: return 'Invalid username & password';\n    case 401: return 'Your account is inactive';\n    case 400: return 'Make sure your Username and Password should be Case Sensitive';\n  }\n}\n}\n\n","<div class=\"auth\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"card\" >\n        <div *ngIf=\"error\" class=\"alert alert-danger\">{{error}}</div>\n        \n        <div class=\"card-body pt-0\">\n          <h2 class=\" white-text text-left py-4\">\n            <strong>Sign in</strong>  </h2>\n            <p>Enter your detail below to continue. </p>\n          <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" class=\"text-left\" style=\"color: #757575;\" action=\"#!\">\n            <div class=\"md-form\">\n              <label for=\"txtUserName\">E-mail</label>\n              <input type=\"text\" formControlName=\"UserName\" id=\"txtUserName\"\n                [ngClass]=\"{ 'is-invalid': submitted && f.UserName.errors }\" class=\"form-control\">\n               \n              <div *ngIf=\"submitted && f.UserName.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.UserName.errors.required\">Username is required</div>\n              </div>\n            </div>\n            <div class=\"md-form\">\n              <label for=\"txtPassword\">Password</label>\n              <input type=\"password\" formControlName=\"Password\" id=\"txtPassword\"\n                [ngClass]=\"{ 'is-invalid': submitted && f.Password.errors }\" class=\"form-control\">\n            \n              <div *ngIf=\"submitted && f.Password.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.Password.errors.required\">Password is required</div>\n              </div>\n            </div>\n            <div class=\"d-flex justify-content-between\">\n              <div>\n                <div class=\"form-check\">\n                  <input type=\"checkbox\" class=\"form-check-input\" formControlName=\"rememberMe\" id=\"rememberMe\">\n                  <label class=\"form-check-label\" for=\"materialLoginFormRemember\">Remember me</label>\n                </div>\n              </div>\n              <div>\n                <a href=\"javascript:;\" routerLink=\"/auth/users/forgot-password\">Forgot password?</a>\n              </div>\n            </div>\n            <button [disabled]=\"loading\" class=\"btn btn-outline-info btn-rounded btn-block my-4 waves-effect z-depth-0\"\n              type=\"submit\">\n              <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n              Sign in</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Login } from 'src/app/services/login.mudule';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { GenericService } from '../services/generic.service';\n\n@Component({\n  selector: 'app-customer-ticket-feedback',\n  templateUrl: 'customer-ticket-feedback.component.html',\n  styles: []\n})\nexport class CustomerTicketFeedbackComponent implements OnInit {\n  currentUser: Login;\n  class1: string;\n  text1: string;\n  isValid: boolean = false;\n  IsLoading: boolean = false;\n  tempdata: any;\n  _feedbackcount: number = 0;\n  ratingcount: number = 0;\n  alreadyfeedback: boolean = false;\n  val: string = '';\n  constructor(\n    private route1: ActivatedRoute,\n    public loginservice: AuthenticationService,\n    public genericservice: GenericService\n  ) { this.loginservice.currentUser.subscribe(x => this.currentUser = x); }\n  ngOnInit() {\n    const Id = this.route1.snapshot.queryParamMap.get('i');\n    const rating = this.route1.snapshot.queryParamMap.get('r');\n    const token = this.route1.snapshot.queryParamMap.get('t');\n    if(Id === null || rating === null || token === null) { \n      this.text1 = \"We're sorry. We were not able to find a match.\";\n      this.class1 = 'alert alert-danger display-4';\n     }\n     let _rating = Number(rating);\n     this.genericservice.ratingcount = _rating;\n    this.genericservice.getTicketFreedback(Id, _rating,  token).subscribe( res => {\n      if (res) { let response = res as any;\n        this.genericservice.ratingcount = response.result.Rating;\n        this.ratingcount = this.genericservice.ratingcount;\n        if(response.Message === 'success') {\n          this.tempdata = response\n          this.isValid = true;\n        }\n        if(response.Message === 'failure') {\n          this.text1 = response.MessageDescription;\n          this.class1 = 'alert alert-warning display-5';\n          this.alreadyfeedback = true;\n          //var description = <HTMLInputElement>document.getElementById('Description').valu;\n          this.val = response.result.RatingFeedback;\n          \n        }\n      }\n    }, error =>  console.log(error)) ;\n  }\n  submit() {\n    this.IsLoading = true;\n    const Id = this.route1.snapshot.queryParamMap.get('i');\n    const token = this.route1.snapshot.queryParamMap.get('t');\n    let _rating = this.genericservice.ratingcount;\n    var description = <HTMLInputElement>document.getElementById('Description');\n    this.genericservice.putTicketFreedback(Id, _rating, description.value, token).subscribe( res => {\n      if (res) { const response = res as any; \n        if(response.Message === 'success') {\n          this.text1 = response.MessageDescription;\n          this.class1 = 'alert alert-success display-4';\n          this.isValid = false;\n          this.IsLoading = false;\n        }\n        if(response.Message === 'failure') {\n          this.text1 = response.MessageDescription;\n          this.class1 = 'alert alert-warning display-4';\n          this.IsLoading = false;\n        }\n      }}, error =>  console.log(error));\n  }\n  onkeypress(v: string) {\n    this._feedbackcount = v.length;\n  }\n  rating(r: number) {\n    this.ratingcount = r;\n  }\n}\n","<div class=\"Container\">\n    <div class=\"row p-5\">\n        <div class=\"col-sm-0 col-md-1 col-lg-2 col-xl-3\"></div>\n        <div class=\"col-sm-12 col-md-10 col-lg-8 col-xl-6 border-1\">\n            <div class=\"display-4 text-center\">Job Feedback<span *ngIf=\"this.isValid\">(#{{tempdata.result.TicketId}})</span></div>\n            <hr>\n            <div class=\"form-row\" *ngIf=\"this.isValid\">\n                <div class=\"form-group col-md-12\">\n                    <generic-ticket-feedback [(ratingcount)]=\"ratingcount\" [Editable]=\"1\" [Status]=\"'CLOSED'\"></generic-ticket-feedback>\n                    <div class=\"row mt-5\">\n                        <div class=\"col\">\n                            <h3>please let me know your feedback</h3>\n                            <textarea rows=\"4\" id=\"Description\"\n                                (keydown)=\"onkeypress($event.target.value)\" (keyup)=\"onkeypress($event.target.value)\"\n                                class=\"form-control\" maxlength=\"500\"\n                                placeholder=\"please let me know your feedback\"></textarea>\n                            <div class=\"ticket-feedback\">{{_feedbackcount}}/500</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-row\" *ngIf=\"this.isValid\">\n                <button type=\"submit\" *ngIf=\"!this.IsLoading\" class=\"btn btn-primary btn-block\" (click)=\"submit()\">\n                  <strong>submit</strong></button>\n                <button disabled class=\"btn btn-success btn-block\" *ngIf=\"this.IsLoading\">Loading... Please\n                    wait</button>\n            </div>\n            <div *ngIf=\"alreadyfeedback\">\n                <div class=\"form-group col-md-12\">\n                    <generic-ticket-feedback [(ratingcount)]=\"ratingcount\" [Editable]=\"0\" [Status]=\"'CLOSED'\"></generic-ticket-feedback>\n                    <div class=\"row mt-5\">\n                        <div class=\"col\">\n                            <textarea rows=\"10\" id=\"Description\"\n                                class=\"form-control\" maxlength=\"500\" [value]=\"val\"\n                                placeholder=\"please let me know your feedback\" disabled></textarea>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-row text-center\">\n                <div class=\"col\">\n                    <div class=\"{{class1}}\">{{text1}}</div>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-sm-0 col-md-1 col-lg-2 col-xl-3\"></div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthComponent } from './auth.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FromDriveComponent } from './from-drive.component';\nimport { CustomerQuoteForSignatureComponent } from './customer-quote-for-signature.component';\nimport { SignaturePadModule } from 'angular2-signaturepad';\nimport { CustomerTicketFeedbackComponent } from './customer-ticket-feedback.component';\nimport { TicketFeedbackComponentModule } from '../generic-utils/Ticket-Feedback-Component/TicketFeedbackComponent.module';\n\nconst routes: Routes = [\n                        { path: '',\tcomponent: AuthComponent }, \n                        { path: 'from-drive',\tcomponent: FromDriveComponent },\n                        { path: 'customer-quote-for-signature', component: CustomerQuoteForSignatureComponent },\n                        { path: 'customer-ticket-feedback', component: CustomerTicketFeedbackComponent },\n                        \n                      ];\n@NgModule({\n  declarations: [AuthComponent, FromDriveComponent, CustomerQuoteForSignatureComponent, CustomerTicketFeedbackComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    SignaturePadModule,\n    TicketFeedbackComponentModule,\n    RouterModule.forChild(routes),\n  ]\n})\nexport class AuthModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Login } from 'src/app/services/login.mudule';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { UserlogService } from 'src/app/services/userlog.service';\nimport { QuoteService } from 'src/app/services/quote.service';\nimport { SignaturePad } from 'angular2-signaturepad';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-customer-quote-for-signature',\n  templateUrl: 'customer-quote-for-signature.component.html',\n  styles: []\n})\nexport class CustomerQuoteForSignatureComponent implements OnInit {\n  @ViewChild('SignaturePad2', { static: false }) CustomerSingnaturePad: SignaturePad;\n  CustomerSignaturePadOption = {\n    ' minWidth': 2, pecColor: 'rgb(66,133,244)', backgroundcolor: 'rgb(255,255,255)', canvasWidth: 500, canvasHeight: 200 };\n  currentUser: Login;\n  temptQuoteStatus = 0;\n  class1: string;\n  text1: string;\n  isValid: boolean = false;\n  IsLoading: boolean = false;\n  constructor(\n    private route1: ActivatedRoute,\n    public logService: UserlogService,\n    public loginservice: AuthenticationService,\n    public quoteService: QuoteService\n  ) {\n    this.loginservice.currentUser.subscribe(x => this.currentUser = x);\n  }\n  ngOnInit() {\n    const Id = this.route1.snapshot.queryParamMap.get('i');\n    const token = this.route1.snapshot.queryParamMap.get('t');\n    if(Id === null) { \n      this.text1 = 'This is invalid request.';\n      this.class1 = 'alert alert-danger display-3';\n     }\n    this.quoteService.getQuoteDetailsForSign(Id, token).subscribe( res => {\n      if (res) { let response = res as any;\n        if(response.Message === 'success') {\n          this.quoteService.QuoteData = response.result;\n          this.temptQuoteStatus = Number(this.quoteService.QuoteData.Status);\n          this.isValid = true;\n        }\n        if(response.Message === 'failure') {\n          this.text1 = response.MessageDescription;\n          this.class1 = 'alert alert-warning display-3';\n        }\n      }\n    }, error =>  console.log(error)) ;\n  }\n  SetStatus(Status: number) {\n    this.temptQuoteStatus = Status;\n  }\n  InsertESignature(Status: number) {\n    this.IsLoading = true;\n    const token = this.route1.snapshot.queryParamMap.get('t');\n    if(Status === 4) {\n      const CustBase64 = this.CustomerSingnaturePad.toDataURL('image/png');\n      this.quoteService.QuoteData.CustomerSignature = CustBase64;\n      this.quoteService.QuoteData.Status = 4;\n      }\n      if(Status === 5) {\n        this.quoteService.QuoteData.CustomerSignature = '';\n        this.quoteService.QuoteData.Status = 5;\n        }\n    this.quoteService.updateQuoteSignaturewithRemark(token).subscribe( res => {\n      if (res) { const response = res as any; \n        if(response.Message === 'success') {\n          this.quoteService.QuoteData = response.result;\n          this.temptQuoteStatus = Number(this.quoteService.QuoteData.Status);\n          this.text1 = response.MessageDescription;\n          this.class1 = 'alert alert-success display-5';\n          this.isValid = false;\n          this.IsLoading = false;\n        }\n        if(response.Message === 'failure') {\n          this.text1 = response.MessageDescription;\n          this.class1 = 'alert alert-warning display-5';\n          this.IsLoading = false;\n        }\n      }}, error =>  console.log(error));\n  }\n  cleareCustomerCloserSignature() {\n    this.CustomerSingnaturePad.clear();\n  }\n}\n","<style>\n    .Container {\n        overflow-y: auto !important;\n        overflow-x: hidden;\n        min-height: 22px;\n        max-height: 100vh;\n    }\n\n    .myStatus {\n        width: 100%;\n        background-color: cyan;\n        padding: 6px 6px;\n        margin: 0 0 1px 0;\n        border: 1px solid #ad5a2242;\n    }\n\n    .myStatus a {\n        margin: 0px 0 0 11px;\n        color: black;\n        font-size: initial;\n    }\n\n    .AcceptStatus {\n        margin: 0 5px 0 0;\n        color: green;\n    }\n\n    .OtherStatus {\n        margin: 0 5px 0 0;\n        color: #847a74;\n    }\n\n    .signature {\n        width: 100%;\n        height: 280px;\n        border: 1px solid #ad5a2242;\n    }\n\n    .btnRemoveSection {\n        background-color: #fcb822;\n        color: black;\n        padding: 2px 15px;\n        float: left;\n        margin-top: 2px;\n        cursor: pointer;\n    }\n    .wd-1024 { width: 1024px; }\n</style>\n<div class=\"Container\">\n    <div class=\"row\" >\n        <div class=\"col-sm-0 col-md-3 col-lg-3 col-xl-3\"></div>\n        <div class=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\n            <div class=\"display-4\">Quotation for Signature  <span *ngIf=\"this.isValid\">({{this.quoteService.QuoteData.QuoteId}})</span></div>\n            <hr>\n            <div class=\"form-row\" *ngIf=\"this.isValid\">\n                <div class=\"form-group col-md-12\">\n                    <div class=\"kt-radio-list\">\n                        <div class=\"row\">\n                            <div class=\"myStatus\">\n                                <a href=\"javascript:void(0)\" (click)=\"SetStatus(4)\">\n                                    <ng-container *ngIf=\"temptQuoteStatus===4\">\n                                        <i class=\"fa fa-check-circle AcceptStatus\" aria-hidden=\"true\"></i>\n                                    </ng-container>\n                                    <ng-container *ngIf=\"temptQuoteStatus!==4\">\n                                        <i class=\"far fa-circle OtherStatus\" aria-hidden=\"true\"></i>\n                                    </ng-container>\n                                    Accept\n                                </a>\n                            </div>\n                            <div class=\"signature\" *ngIf=\"temptQuoteStatus===4\">\n                                <div class=\"row forn-group\">\n                                    <div class=\"col\">\n                                        <label>&nbsp;&nbsp;&nbsp;&nbsp;Signature</label>\n                                        <div id=\"CloseSignarePad\" class=\"m-signature-pad CloseSignarePad\">\n                                            <div class=\"m-signature-pad-body\">\n                                                <signature-pad #SignaturePad2 [options]=\"CustomerSignaturePadOption\">\n                                                </signature-pad>\n                                            </div>\n                                        </div>\n                                        <a class=\"btnRemoveSection\"\n                                            (click)=\"cleareCustomerCloserSignature()\"> Clear signature</a>\n                                    </div>\n                                </div>\n                            </div>\n        \n                            <div class=\"myStatus\">\n                                <a href=\"javascript:void(0)\" (click)=\"SetStatus(5)\">\n                                    <ng-container *ngIf=\"temptQuoteStatus===5\">\n                                        <i class=\"fa fa-check-circle AcceptStatus\" aria-hidden=\"true\"></i>\n                                    </ng-container>\n                                    <ng-container *ngIf=\"temptQuoteStatus!==5\">\n                                        <i class=\"far fa-circle OtherStatus\" aria-hidden=\"true\"></i>\n                                    </ng-container>\n                                    Reject\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-row\" *ngIf=\"this.isValid\">\n                <button type=\"submit\" *ngIf=\"!this.IsLoading\" class=\"btn btn-primary btn-block\" (click)=\"InsertESignature(temptQuoteStatus)\"> Save & Send Status</button>\n                <button disabled class=\"btn btn-success btn-block\" *ngIf=\"this.IsLoading\">Loading... Please wait</button>\n            </div>\n            <div class=\"form-row\">\n                <div class=\"col\">\n                    <div class=\"{{class1}}\">{{text1}}</div>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-sm-0 col-md-3 col-lg-3 col-xl-3\"></div>\n    </div>\n</div>"],"sourceRoot":"webpack:///"}