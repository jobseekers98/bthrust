{"version":3,"sources":["./src/app/application/ticket-reschedule-popup/ticket-reschedule-popup.component.ts","./src/app/application/ticket-reschedule-popup/ticket-reschedule-popup.component.html"],"names":[],"mappings":"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","file":"default~application-calendar-calendar-module~application-ticket-reschedule-popup-ticket-reschedule-p~a3e4bb1e-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { NgbTimeAdapter, NgbDateAdapter, NgbDateStruct, NgbDate } from '@ng-bootstrap/ng-bootstrap';\nimport { TicketService } from 'src/app/services/ticket.service';\nimport { NgbDateToStringAdapter } from 'src/app/ngb-date-to-string-adapter';\nimport { NgbTimeToStringAdapter } from 'src/app/ngb-time-to-string-adapter';\nimport { ToastrService } from 'ngx-toastr';\nimport { EngineerService } from 'src/app/services/engineer.service';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs/internal/Subject';\nimport { Login, AuthenticationService } from 'src/app/services';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { GenicProfileService } from 'src/app/services/genicprofile.service';\nimport { Engineer } from 'src/app/services/engineer.module';\n\n@Component({\n  selector: 'app-ticket-reschedule-popup',\n  templateUrl: './ticket-reschedule-popup.component.html',\n  styles: [`.custom-day { text-align: center; padding: 0.185rem 0.25rem; border-radius: 0.25rem; display: inline-block; width: 2rem; }\n  .custom-day:hover, .custom-day.focused { background-color: #e6e6e6; color: #fff; }\n  .isHoliday { background-color: #eae6e6 !important;color: red !important; cursor: alias; }\n  .hidden { display: none; }\n  .isDisabledDate {color: #eae7e7;}`],\n  providers: [\n    { provide: NgbDateAdapter, useClass: NgbDateToStringAdapter },\n    { provide: NgbTimeAdapter, useClass: NgbTimeToStringAdapter }],\n})\nexport class TicketReschedulePopupComponent implements OnInit {\n  refresh: Subject<any> = new Subject();\n  savechanges = false;\n  currentUTCDate = new Date();\n  // Notification Param\n  oldScheduleDate: any = Date();\n  oldScheduleTime: any = '';\n  // Notification Param\n  meridian = true;\n  localdate = new Date(Date.UTC(this.currentUTCDate.getFullYear(),\n                  this.currentUTCDate.getMonth(),\n                  this.currentUTCDate.getDate(), 0, 0, 0));\n  minDate = {\n              year: Number(this.currentUTCDate.getFullYear()),\n              month: Number(this.currentUTCDate.getMonth() + 1),\n              day: Number(this.currentUTCDate.getDate())\n            };\n  maxDate = {\n              year: Number(this.currentUTCDate.getFullYear()) + 2,\n              month: Number(this.currentUTCDate.getMonth() + 1),\n              day: Number(this.currentUTCDate.getDate())\n            };\n  currentUser: Login;\n  ShowEngineerList: boolean;\n  spinnerShow: boolean;\n  oldTicketTeam: any = [];\n  public radioData: any;\n  LastAppointmentDateStart: string;\n  LastAppointmentDateEnd: string;\n  loader: boolean;\n  Iscalendarshow: boolean;\n  date: {year: number, month: number};\n  disabledDates: NgbDateStruct[] = [];\n  isDisabled = (date: NgbDateStruct, current: {month: number, year: number}) => {\n    return this.disabledDates.find(x => NgbDate.from(x).equals(date)) ? true : false;\n  }\n  isDisabledCss = (date: NgbDate) => {\n    return this.disabledDates.find(x => NgbDate.from(x).equals(date)) ? true : false;\n  }\n  IsEditable: boolean;\n  constructor(\n    public dialogRef: MatDialogRef<TicketReschedulePopupComponent>,\n    public service: TicketService,\n    private toastr: ToastrService,\n    private router: Router,\n    public genicProfile: GenicProfileService,\n    public loginservice: AuthenticationService,\n    public engineerservice: EngineerService,\n    public notifyService: NotificationService\n  ) {\n    this.loginservice.currentUser.subscribe(x => this.currentUser = x);\n    this.IsEditable = true;\n   }\n\n  ngOnInit() {\n      this.radioData = 'O';\n      this.loader = false;\n      this.ShowEngineerList = false;\n      this.spinnerShow = false;\n      // Notification Param\n      this.oldScheduleDate = this.service.formData.OneOffAppointmentDate;\n      this.oldScheduleTime = this.service.formData.OneOffStartTime;\n      // Notification Param\n      this.service.getTicketById(this.currentUser.Token, this.service.formData.Id).subscribe( res => {\n        if (res) { const response = res as any;\n                   if (response.Message === 'success') {\n                      this.service.formData = response.result;\n                      this.oldTicketTeam = this.service.formData.TicketTeams;\n                   this.LastAppointmentDateStart = this.service.formData.AppointmentStart;\n                   this.LastAppointmentDateEnd = this.service.formData.AppointmentEnd;\n                    }\n                   if (response.Message === 'failure') {\n                      this.toastr.warning('warning', response.MessageDescription);\n                    }\n      }}, error =>  console.log(error));\n      this.engineerservice.getEngineerListSync(this.currentUser.Token).subscribe( res => {\n          if (res) { const response = res as any;\n                     this.engineerservice.Engineerlist = response.result as Engineer[];\n          }}, error =>  console.log(error));\n      this.refrestTicketTeamlist();\n      this.BindEngineerList();\n\n      // Disabled Dates\n      this.disabledSelectDate();\n      setTimeout(() => {\n        if (this.currentUser.Type === 'Engineer') {\n        if (this.engineerservice.formData.CreateForAllDate === 'SameDate') {\n          this.maxDate = {\n           year: Number(this.currentUTCDate.getFullYear()),\n           month: Number(this.currentUTCDate.getMonth() + 1),\n           day: Number(this.currentUTCDate.getDate())\n         };\n        }}\n      }, 500);\n      setTimeout(() => {\n        switch(this.service.formData.Status){\n          case 'UPCOMING':\n          case 'OVERDUE':\n          case 'HOLD':\n          this.IsEditable = true;\n          break;\n          default: this.IsEditable = false; break;\n        }\n      }, 1000);\n  }\n  refrestTicketTeamlist() {\n    this.service.refrestTicketTeamlist(this.service.formData.Id, this.currentUser.Token).subscribe( res => {\n      if (res) { const response = res as any;\n                 if (response.Message === 'success') {\n                    this.service.TicketTeamList = response.result;\n                  }\n    }}, error =>  console.log(error));\n  }\n  onSubmit() {\n    this.spinnerShow = true;\n    if (this.service.formData.AppointmentStart !== null && this.service.formData.AppointmentEnd !== null) {\n      if (new Date(this.service.formData.AppointmentStart) > new Date(this.service.formData.AppointmentEnd)) {\n        this.toastr.warning('warning', 'Start Time is lessthen end time');\n        this.spinnerShow = false;\n        return false;\n      }\n    }\n    this.service.formData.OneOffAppointmentDate = this.service.formData.AppointmentStart;\n    const sTime = new Date(this.service.formData.AppointmentStart);\n    const eTime = new Date(this.service.formData.AppointmentEnd);\n    this.service.formData.OneOffStartTime =\n                              sTime.getUTCHours().toString().padStart(2, '0') + ':' +\n                              sTime.getUTCMinutes().toString().padStart(2, '0') + ':' +\n                              sTime.getUTCSeconds().toString().padStart(2, '0') + '.' +\n                              sTime.getUTCMilliseconds().toString().padStart(3, '0');\n    this.service.formData.OneOffEndTime =\n                              eTime.getUTCHours().toString().padStart(2, '0') + ':' +\n                              eTime.getUTCMinutes().toString().padStart(2, '0') + ':' +\n                              eTime.getUTCSeconds().toString().padStart(2, '0') + '.' +\n                              eTime.getUTCMilliseconds().toString().padStart(3, '0');\n    if (this.radioData === 'R') {\n      this.service.AssignedEngineerForAllTickets(this.currentUser.Token).then(\n            res => {\n              if (res.status === 202) {\n                this.toastr.success('Selected Engineers is assigned to all ' + this.currentUser.Ticket + 's');\n                this.SendReScheduleTicketEmailNotification(this.service.formData.Id);\n              }\n            }\n          );\n    } else {\n      this.service.RescheduledTicket(this.currentUser.Token).subscribe( res => {\n        if (res) { const response = res as any;\n                   if (response.Message === 'success') {\n                    this.SendReScheduleTicketEmailNotification(this.service.formData.Id);\n                    }\n                   if (response.Message === 'failure') {\n                      this.toastr.warning('warning', response.MessageDescription);\n                    }\n      }}, error =>  console.log(error));\n    }\n\n    setTimeout(() => {\n      let s = this.savechanges;\n      this.dialogRef.close({ s });\n      this.spinnerShow = false;\n      this.toastr.success('Update successfully');\n      }, 1000);\n  }\n\n  // Send ReSchedule notification\n  SendReScheduleTicketEmailNotification(TicketId) {\n    this.notifyService.ReScheduleTicketEmailNotification(this.oldTicketTeam, TicketId, this.currentUser.Id, this.oldScheduleDate, this.oldScheduleTime)\n    .subscribe( resp => {\n    }, error =>  console.log(error));\n  }\n\n  public AddEngineersToTicket(index: number, checked: boolean, engineerid: string, engineername: string) {\n    if (this.service.formData.TicketId === undefined || this.service.formData.TicketId === '') {\n      this.router.navigate(['/tickets/ticket-create']);\n      return false;\n    }\n    if (checked) {\n      this.service.formData.TicketTeams.push({\n        Id: 0,\n        TicketId: this.service.formData.Id,\n        EngineerId: engineerid,\n        EngineerName: engineername,\n        EngineerLogo: null\n      });\n    } else {\n      this.service.formData.TicketTeams.splice(index, 1);\n      this.engineerservice.Engineerlist.push({\n        Id: engineerid,\n        EngineerName: engineername\n      });\n    }\n    this.service.formData.Reallocate = true;\n    this.BindEngineerList();\n  }\n  onAppointmentDateTimeSelect() {\n    this.ShowEngineerList = false;\n    this.service.formData.Rescheduled = true;\n    this.service.formData.AppointmentEnd = this.service.formData.AppointmentStart;\n    this.service.formData.AppointmentStart = this.service.formData.AppointmentStart.split('T')[0] + 'T10:00:00Z';\n    this.service.formData.AppointmentEnd = this.service.formData.AppointmentStart.split('T')[0] + 'T11:00:00Z';\n  }\n  onAppointmentTimeSelect() {\n    this.ShowEngineerList = false;\n    this.service.formData.Rescheduled = true;\n  }\n  OnGetAvailableEngineers() {\n    this.loader = true;\n    if (new Date(this.service.formData.AppointmentStart) >= new Date(this.service.formData.AppointmentEnd)) {\n      this.toastr.warning('warning', 'Start Time is lessthen end time');\n      this.loader = false;\n      return false;\n    }\n    if (this.service.formData.AppointmentStart === undefined || this.service.formData.AppointmentStart === null ||\n    this.service.formData.AppointmentEnd === undefined || this.service.formData.AppointmentEnd === null) {\n      this.toastr.warning('Warning', 'Please select appointment date & time!');\n      this.loader = false;\n      return false;\n     }\n    this.ShowEngineerList = true;\n    let stime = this.service.formData.AppointmentStart.replace('-', '').replace('-', '');\n    stime = stime.replace(':', '').replace(':', '').replace('T', '').replace('Z', '');\n    let etime = this.service.formData.AppointmentEnd.replace('-', '').replace('-', '');\n    etime = etime.replace(':', '').replace(':', '').replace('T', '').replace('Z', '');\n    this.engineerservice.releseTemporaryEngineerFromTicket(this.service.formData.Id, this.currentUser.Token, 'relese').subscribe( res => {\n      this.engineerservice.refrestUnallocatedTimeEngineerList(stime, etime, this.currentUser.Token);\n      this.loader = false;\n    }, error =>  console.log(error));\n    this.service.formData.TicketTeams = [];\n  }\n  disabledSelectDate() {\n    this.genicProfile.DisabledDateList(this.currentUser.Token).subscribe( res => {\n      if (res) {\n       let obj: any;\n       obj = res;\n       obj.forEach(element => {\n         this.disabledDates.push({year: element.year, month: element.month, day: element.day});\n       });\n       this.isDisabled = (date: NgbDateStruct, current: {month: number, year: number}) => {\n          return this.disabledDates.find(x => NgbDate.from(x).equals(date)) ? true : false;\n        };\n      }\n    }, error =>  console.log(error));\n  }\n  showcalendar() {\n    if (this.Iscalendarshow) {\n      this.Iscalendarshow = false;\n    } else {\n      this.Iscalendarshow = true;\n    }\n  }\n  private BindEngineerList() {\n    setTimeout(() => {\n      let demoClasses = null;\n      demoClasses = document.querySelectorAll('.engineer-list-class');\n      demoClasses.forEach(element => {\n        this.service.formData.TicketTeams.forEach(el => {\n          if (element.id === el.EngineerId) {\n            element.innerHTML = '';\n          }\n        });\n      });\n      this.refresh.next();\n     }, 100);\n  }\n  close() {\n    this.dialogRef.close();\n  }\n}\n","<style>\n  .tableBodyScroll tbody {\n    display: block;\n    max-height: 200px;\n    overflow-y: scroll;\n  }\n  \n  .tableBodyScroll thead,\n  tbody tr {\n    display: table;\n    width: 100%;\n    table-layout: fixed;\n  }\n  </style>\n<h5 class=\"dispaly-4\">Reschedule & Reallocate\n<button class=\"btn btn-outline-danger pull-right\" mat-dialog-close (click)=\"close()\">X</button>\n</h5>\n<h5 class=\"dispaly-4\">\n  {{this.currentUser.Ticket}} # {{service.formData.TicketId}}\n  <span *ngIf=\"service.formData.TicketType === 'One-Off Ticket'\"> (One-Off {{this.currentUser.Ticket}})</span>\n  <span *ngIf=\"service.formData.TicketType === 'Recurring Ticket'\"> (Recurring {{this.currentUser.Ticket}})</span>\n</h5>\n<h5 class=\"dispaly-4\">{{ LastAppointmentDateStart | date: 'EEEE, MMMM d, y':'+0000' }}\n{{ LastAppointmentDateStart | date: 'HH:mm' + ' to ':'+0000' }}\n{{ LastAppointmentDateEnd | date: 'HH:mm':'+0000' }}\n\n</h5>\n<h5>\n  {{service.formData.CustomerCompanyName}}\n</h5>\n<h6>\n  {{service.formData.CustomerAddress}}\n</h6>\n<hr>\n<form #form=\"ngForm\" autocomplete=\"off\" (submit)=\"onSubmit()\">\n<div class=\"form-row\">\n  <div class=\"form-group col-md-12\">\n    <div class=\"col-md-12\" *ngIf=\"this.IsEditable\">\n      <div class=\"form-group row\">\n        <div class=\"col-md-4\">\n          <label>Appointment Date<span\n              class=\"text-danger\">*</span></label>\n              <div class=\"btooltip\"> <i class=\"fa fa-question-circle text-info\" style=\"cursor: help;\" ></i>\n                <span class=\"btooltiptext\">Red Highlighted date is National Holiday, to make it Working Day please go to Settings - Business Hours - Holiday - Enable Working</span>\n              </div>\n              <div class=\"input-group\">\n                <ng-template #customDay let-date let-currentMonth=\"currentMonth\" let-selected=\"selected\" let-disabled=\"disabled\" let-focused=\"focused\">\n                  <span class=\"custom-day\" [class.focused]=\"focused\"\n                        [class.bg-primary]=\"selected\" \n                        [class.hidden]=\"date.month !== currentMonth\" \n                        [class.isDisabledDate]=\"disabled\"\n                        [class.isHoliday]=\"isDisabledCss(date)\">\n                    {{ date.day }}\n                  </span>\n                </ng-template>\n                  <ngb-datepicker\n                      [minDate]=\"minDate\"\n                      [maxDate]=\"maxDate\"\n                      name=\"AppointmentStart\"\n                      [markDisabled]=\"isDisabled\"\n                      [dayTemplate]=\"customDay\"\n                      #AppointmentStart=\"ngModel\"\n                      (select)=\"onAppointmentDateTimeSelect()\"\n                      [(ngModel)]=\"service.formData.AppointmentStart\"\n                      (navigate)=\"date=$event.next\">\n                  </ngb-datepicker>\n              </div>\n        </div>\n        <div class=\"col-md-8\">\n          <div class=\"form-group row\">             \n            <div class=\"col-md-6 padd-right-0\">\n                <label>Start Time</label>\n                <div class=\"input-group\">\n                    <div class=\"input-group\">\n                        <ngb-timepicker (click)=\"onAppointmentTimeSelect()\" [meridian]=\"meridian\"\n                            name=\"AppointmentStart\" [readonlyInputs]=\"true\" \n                            [(ngModel)]=\"service.formData.AppointmentStart\">\n                        </ngb-timepicker>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-md-6 padd-left-0\">\n                <label>End Time</label>\n                <div class=\"input-group\">\n                    <ngb-timepicker (click)=\"onAppointmentTimeSelect()\" [meridian]=\"meridian\"\n                        name=\"AppointmentEnd\" [readonlyInputs]=\"true\" \n                        [(ngModel)]=\"service.formData.AppointmentEnd\">\n                    </ngb-timepicker>\n                </div>\n            </div>\n\n            <div class=\"col-md-12 text-center\">\n              <br>\n              <strong>\n                  {{ service.formData.AppointmentStart | date: 'EEEE, MMMM d, y':'+0000' }}</strong>\n              <br>\n              <strong>\n                  {{ service.formData.AppointmentStart | date: 'HH:mm' + ' to ':'+0000' }}</strong>\n              <strong>\n                  {{ service.formData.AppointmentEnd | date: 'HH:mm':'+0000' }}</strong>\n              <br>\n          </div>\n            <div *ngIf=\"!loader\" class=\"col-md-12\">\n              <a  href=\"javascript:;\" class=\"btn btn-primary btn-block\" (click)=\"OnGetAvailableEngineers()\" >\n                Get available {{this.currentUser.Engineer}}s\n              </a>\n          </div>\n          <div *ngIf=\"loader\" class=\"col-md-12\">\n            <div class=\"progress\" style=\"height: 40px;\">\n              <div class=\"progress-bar progress-bar-striped progress-bar-animated\" role=\"progressbar\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 100%\"></div>\n            </div>\n          </div>\n        </div>\n        </div>\n      </div>\n      <div class=\"row\" style=\"display: none;\">\n        <div class=\"col-md-6\">\n          <div class=\"padd-top-10\">\n            <label class=\"kt-checkbox kt-checkbox--solid kt-checkbox--brand\">\n              <input type=\"checkbox\"  name=\"Rescheduled\"\n              #Rescheduled=\"ngModel\"\n              [(ngModel)]=\"service.formData.Rescheduled\" >\n              Mark as Rescheduled\n              <span></span>\n            </label>\n          </div>\n        </div>\n        <div class=\"col-md-6\">\n          <div class=\"padd-top-10\">\n          <label class=\"kt-checkbox kt-checkbox--solid kt-checkbox--brand\">\n            <input type=\"checkbox\"  name=\"Reallocate\"\n            #Reallocate=\"ngModel\"\n            [(ngModel)]=\"service.formData.Reallocate\" >\n            Mark as Reallocated\n            <span></span>\n          </label>\n        </div>\n        </div>\n      </div>\n      <div class=\"row\">\n          <div *ngIf=\"ShowEngineerList\" class=\"col-md-12\">\n              <table class=\"table table-striped properies-table-info ng-star-inserted table-bordered table-hover table-checkable tableBodyScroll ng-star-inserted\"\n                  *ngIf=\"engineerservice.Engineerlist.length > 0\" >\n                  <thead>\n                    <tr>\n                      <th colspan=\"2\">\n                        Available {{this.currentUser.Engineer}}s List\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                      <tr *ngFor=\"let x of  engineerservice.Engineerlist; let i=index; async\" class=\"engineer-list-class\" id=\"{{x.Id}}\">\n                          <td width=\"10%\"> \n                                <a\n                                (click)=\"AddEngineersToTicket(i, true, x.Id, x.EngineerName)\" href=\"javascript:;\"><i class=\"fa fa-plus text-success\"></i> </a>\n                          </td>\n                          <td width=\"90%\">{{x.EngineerName}}\n                            <span class=\"kt-badge kt-badge--success kt-badge--inline kt-badge--pill\"\n                            *ngIf=\"x.Type === 1\">Supervisor</span>\n                            <span class=\"kt-badge kt-badge--warning kt-badge--inline kt-badge--pill\"\n                            *ngIf=\"x.Type === 2\">Foreman</span>\n                          </td>\n                      </tr>\n                  </tbody>\n              </table>\n              <div *ngIf=\"engineerservice.Engineerlist.length === 0\" class=\"alert alert-warning\">\n                {{this.currentUser.Engineer}} not available at this time. </div>\n          </div>\n          <div class=\"col-md-12\">\n                  <table\n                      class=\"table table-striped properies-table-info ng-star-inserted table-bordered table-hover table-checkable tableBodyScroll ng-star-inserted\"\n                       >\n                      <thead>\n                        <tr>\n                          <th>\n                            Assigned {{this.currentUser.Engineer}}s List\n                          </th>\n                          <th style=\"text-align: right;\">\n                            <a href=\"javascript:;\" class=\"btn btn-secondary calendar\" title=\"Assigned {{this.currentUser.Engineer}}s List\" (click)=\"showcalendar()\">\n                              <i class=\"fa fa-users\"></i> \n                              <div *ngIf=\"Iscalendarshow\" style=\"position: absolute; z-index: 99999; background-color: white;right: 0px;\">\n                                  <table class=\"table table-striped properies-table-info\" style=\"width: 210px;\">\n                                    <tbody>\n                                      <tr *ngFor=\"let x of oldTicketTeam; let i=index; async\">\n                                        <td>{{x.EngineerName}} \n                                        </td>\n                                      </tr>\n                                    </tbody>\n                                  </table>\n                              </div>\n                          </a>\n                          </th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                          <tr *ngFor=\"let x of service.formData?.TicketTeams; let i=index; async\">\n                              <td width=\"10%\"><a (click)=\"AddEngineersToTicket(i, false, x.EngineerId, x.EngineerName)\" href=\"javascript:;\"><i class=\"fa fa-minus text-danger\"></i> </a></td>\n                              <td width=\"90%\">{{x.EngineerName}} \n                              </td>\n                          </tr>\n                      </tbody>\n                  </table>\n                  <div *ngIf=\"service.formData?.TicketTeams.length === 0\" class=\"alert alert-warning\">\n                    {{this.currentUser.Engineer}}s not assigned yet!</div>\n              </div>\n              <div *ngIf=\"service.formData.TicketType === 'Recurring Ticket'\" class=\"col-md-12\">\n                  <div class=\"row\" *ngIf=\"currentUser.Type !== 'Engineer'\">\n                    <div class=\"container\">\n                      <div class=\"kt-radio-list text-color-red\">\n                        <label\n                            class=\"kt-radio kt-radio--bold kt-radio--brand\">\n                            <input type=\"radio\" class=\"custom-control-input\" value=\"O\" [(ngModel)]=\"radioData\" name=\"radioData\">\n                                update only {{service.formData.TicketId}} {{this.currentUser.Ticket}} \n                            <span></span>\n                        </label>\n                         <label\n                            class=\"kt-radio kt-radio--bold kt-radio--brand\">\n                            <input type=\"radio\" class=\"custom-control-input\" value=\"R\" [(ngModel)]=\"radioData\" name=\"radioData\">\n                                update all upcoming {{this.currentUser.Ticket}} link to  {{service.formData.TicketId}} {{this.currentUser.Ticket}} \n                            <span></span>\n                        </label>  \n                    </div>\n                </div>\n                  </div>\n              </div>\n            </div>\n            <div class=\"row\">\n                  <div class=\"col-md-12  text-right\">\n                    <button type=\"submit\" class=\"btn btn-primary\">Save changes <i *ngIf=\"spinnerShow\" class=\"la la-spinner fa-spin\" ></i> </button>\n                </div>\n            </div>\n    </div>\n    <div class=\"col-md-12\" *ngIf=\"!this.IsEditable\">\n      <div class=\"alert alert-warning\">\n        {{this.currentUser.Ticket}} Can't reschedule when {{this.currentUser.Ticket}} Status is {{this.service.formData.Status}} \n      </div>\n    </div>\n  </div>\n</div>\n</form>"],"sourceRoot":"webpack:///"}