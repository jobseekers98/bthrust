{"version":3,"sources":["webpack:///src/app/services/property.model.ts","webpack:///src/app/generic-utils/Quote-Status-Component/QuoteStatusComponent.module.ts","webpack:///src/app/services/report.module.ts","webpack:///src/app/services/genic-zone.service.ts","webpack:///src/app/services/customer.model.ts","webpack:///src/app/services/report.service.ts","webpack:///src/app/generic-utils/Quote-Status-Component/QuoteStatusComponent.component.ts"],"names":["Property","InternalObject","AutoCaptureParms","QuoteStatusComponentModule","imports","declarations","exports","ReportsFilter","ReportsWarranty","ProductWarranty","ReportsUnWarranty","GenicZoneService","http","setDefaultGenicZone","setDefaultZoneCoordinates","GenicZoneList","ZoneCoordinatesList","localZoneList","EngineerWiseZoneList","GenicZoneData","ZoneId","ZoneName","CountryName","IsActive","IsAssigned","ZoneCoordinatesData","Id","Coordinates","get","apiUrl","toPromise","then","res","post","headers","observe","pipe","zoneId","Status","put","EngineerId","providedIn","Customer","ArrayofKey","CustomerContactPerson","CustomerDepartmentType","CustomerDepartment","ReportService","token","sdate","edate","type","eid","status","response","tid","SDate","EDate","CId","PId","UId","strSearch","id","QuoteStatusComponent","selector","template"],"mappings":"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","file":"common-es5.js","sourcesContent":["export class Property {\n    Id?: string;\n    CustomerId?: string;\n    PropertyId?: string;\n    AddressStreet1?: string;\n    AddressStreet2?: string;\n    AddressUnitNo?: string;\n    AddressCity?: string;\n    AddressState?: string;\n    AddressZipCode?: string;\n    AddressCountry?: string;\n    CustomerName?: string;\n    CompanyName?: string;\n    TotalTicket?: number;\n    Latitude?: string;\n    Longitude?: string;\n    Remarks?: string;\n    IsActive?: boolean;\n}\nexport class InternalObject {\n    TodayDate?: string;\n    Type?: string;\n    DateFrom?: string;\n    DateTo?: string;\n}\nexport class AutoCaptureParms {\n    street_number?: string;\n    route?: string;\n    premise?: string;\n    administrative_area_level_2?: string;\n    sublocality?: string;\n    sublocality_level_3?: string;\n    sublocality_level_2?: string;\n    sublocality_level_1?: string;\n    neighborhood?: string;\n    administrative_area_level_1?: string;\n    locality?: string;\n    political?: string;\n    postal_code?: string;\n    country?: string;\n    lat?: string | number;\n    lng?: string | number;\n    zoom?: number;\n    options?: any;\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { QuoteStatusComponent } from './QuoteStatusComponent.component';\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule],\r\n  declarations: [QuoteStatusComponent],\r\n  exports: [QuoteStatusComponent]\r\n})\r\nexport class QuoteStatusComponentModule {}\r\n","\nexport class ReportsFilter {\n  Id: string;\n  StartDate: string;\n  EndDate: string;\n  Status: string;\n  Engineer: string;\n  Department: number;\n  Type: string;\n}\nexport class ReportsWarranty {\n  Id: number;\n  ItemName: string;\n  UniqId: string;\n  InstallationDate: string;\n  ExpiryDate: string;\n  Status: string;\n  CustomerId: string;\n  ProductId: string;\n  Customer: string;\n  IsDateActive: boolean;\n  IsFrom: string;\n  TicketId: string;\n  ItemUnitCost: string;\n}\nexport class ProductWarranty {\n  Id: number;\n  UniqId: string;\n  InstallationDate: string;\n  ExpiryDate: string;\n  CustomerId: string;\n  ProductId: string;\n  Type: string;\n  WarrantyDays: number;\n}\nexport class ReportsUnWarranty {\n  Id: number;\n  ItemName: string;\n  TicketId: string;\n  OneOffAppointmentDate: string;\n  TicketClosedDate: string;\n  Status: string;\n  Customer: string;\n  Type: string;\n}\n","import { Injectable } from '@angular/core';\nimport { GenicZone, ZoneCoordinates, EngineerWiseZone } from './genic-zone';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GenicZoneService {\n  GenicZoneData: GenicZone;\n  GenicZoneList: GenicZone[];\n  localZoneList: GenicZone[]; // basicaly used for searching purpose.\n\n  ZoneCoordinatesData: ZoneCoordinates;\n  ZoneCoordinatesList: ZoneCoordinates[];\n\n  EngineerWiseZoneList: GenicZone[];\n  LocalEngineerWiseZoneList: GenicZone[];\n\n  constructor(private http: HttpClient) {\n    this.setDefaultGenicZone();\n    this.setDefaultZoneCoordinates();\n\n    this.GenicZoneList = [];\n    this.ZoneCoordinatesList = [];\n    this.localZoneList = [];\n    this.EngineerWiseZoneList = [];\n  }\n\n  setDefaultGenicZone() {\n    this.GenicZoneData = {\n      ZoneId: 0,\n      ZoneName: '',\n      CountryName: 'Singapore',\n      IsActive: true,\n      IsAssigned: false,\n      ZoneCoordinatesList: [],\n    };\n  }\n  setDefaultZoneCoordinates() {\n    this.ZoneCoordinatesData = {\n      Id: 0,\n      ZoneId: 0,\n      Coordinates: '',\n    };\n  }\n\nGetGenicZone() {\n  this.http.get(environment.apiUrl + '/api/GenicZone/GetGenicZone').toPromise().then(res =>\n    this.GenicZoneList = res as GenicZone[]);\n}\npostGenicZone() {\n  return this.http.post(environment.apiUrl + '/api/GenicZone/postGenicZone' , this.GenicZoneData , {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json'}),\n    observe: 'response' }).pipe();\n}\nupdateZoneStatus(zoneId: number, Status: boolean) {\nreturn this.http.put(environment.apiUrl + '/api/GenicZone/updateZoneStatus/' + zoneId + '/' + Status , {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json'}),\n  observe: 'response' }).toPromise();\n}\n\nremoveGenicZone(zoneId: number) {\n  return this.http.delete(environment.apiUrl + '/api/GenicZone/removeGenicZone/' + zoneId , {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json'}),\n    observe: 'response' }).pipe();\n  }\n// Get Zone list to assign an engineer\nGetEngineerWiseZone(EngineerId?: string) {\n  this.http.get(environment.apiUrl + '/api/GenicZone/GetEngineerWiseZone/' + EngineerId ).toPromise().then(res =>\n    this.EngineerWiseZoneList = res as GenicZone[]);\n}\n}\n","import { Property } from './property.model';\n\nexport class Customer {\n    Id?: string;\n    CustomerId?: string;\n    NameTitle?: string;\n    FirstName?: string;\n    LastName?: string;\n    CompanyName?: string;\n    ClientReminders?: boolean;\n    PrintEmailOnWorkOuder?: boolean;\n    ClientFollowUpEmails?: boolean;\n    UseCompanyNameAsPrimaryName?: boolean;\n    RefferdBy?: string;\n    AddressStreet1?: string;\n    AddressStreet2?: string;\n    AddressUnitNo?: string;\n    AddressCity?: string;\n    AddressState?: string;\n    AddressZipCode?: string;\n    AddressCountry?: string;\n    Latitude?: string;\n    Longitude?: string;\n    IsAddressSame?: boolean;\n    CustomerLogo?: string;\n    Status?: boolean; // 0=Suspended, 1=Active, 2=Cancelled, 3=All\n    CreatedUtcDate?: Date;\n    SMTPId?: number;\n    ArrayofKeys?: ArrayofKey[];\n    Properties?: Property[];\n    CustomerContactPerson?: CustomerContactPerson[];\n    CustomerDepartment?: CustomerDepartment[];\n}\nexport class ArrayofKey {\n    Id?: number;\n    CustomerId?: string;\n    Type?: string;\n    Key?: string;\n    Value?: string;\n    IsDefault?: boolean;\n}\nexport class CustomerContactPerson {\n    Id?: number;\n    CustomerId?: string;\n    NameTitle?: string;\n    FirstName?: string;\n    LastName?: string;\n    Email?: string;\n    Phone?: string;\n    IsDefaultContact?: boolean;\n}\nexport class CustomerDepartmentType {\n    Id?: number;\n    Name?: string;\n    IsAssigned: boolean;\n}\nexport class CustomerDepartment {\n    Id?: number;\n    CustomerId?: string;\n    SMTPSettingsId?: number;\n    SMTPName?: string;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport {  ReportsFilter, ReportsWarranty, ReportsUnWarranty, ProductWarranty } from './report.module';\nimport { environment } from 'src/environments/environment';\nimport { map } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReportService {\n  ReportsFilter: ReportsFilter;\n\n  ReportsWarranty: ReportsWarranty;\n  ReportsWarrantyList: ReportsWarranty[];\n  ReportsWarrantyListActive: ReportsWarranty[];\n  ReportsWarrantyListExpire: ReportsWarranty[];\n\n  ReportsUnWarrantyList: ReportsUnWarranty[];\n\n  ProductWarranty: ProductWarranty;\n  constructor(private http: HttpClient) {\n    this.ProductWarranty = new ProductWarranty();\n   }\n    public refrestTicketReports(token: string, sdate: string, edate: string, type: string, eid: string, status) {\n      return this.http.get(environment.apiUrl + '/api/Reports/TicketReports/' + token + '/' + sdate + '/' + edate +\n      '/' + type + '/' + eid + '/' + status).pipe(map(\n        response => {\n        return response; }));\n    }\n    public refrestEngineerReports(token: string, sdate: string, edate: string, type: string) {\n      return this.http.get(environment.apiUrl + '/api/Reports/EngineerReports/'  + token + '/' + sdate + '/' + edate +\n      '/' + type ).pipe(map( response => {\n        return response; }));\n    }\n    public refrestEngineerwiseReports(token: string, sdate: string, edate: string,eid: string ) {\n      return this.http.get(environment.apiUrl + '/api/Reports/EngineerWiseReports/'  + token + '/' + sdate + '/' + edate + '/' + eid  ).pipe(map( response => {\n        return response; }));\n    }\n    public refrestEngineerAttendanceReports(token: string, sdate: string, edate: string,eid: string ) {\n      return this.http.get(environment.apiUrl + '/api/Reports/EngineerAttendanceReport/'  + token + '/' + sdate + '/' + edate + '/' + eid  ).pipe(map( response => {\n        return response; }));\n    }\n    public refrestEngineerwise2Reports(token: string, sdate: string, edate: string,eid: string ) {\n      return this.http.get(environment.apiUrl + '/api/Reports/EngineerWise2Reports/'  + token + '/' + sdate + '/' + edate + '/' + eid  ).pipe(map( response => {\n        return response; }));\n    }\n    public refrestVisitsReports(token: string, sdate: string, edate: string, type: string, eid: string, tid: string) {\n      return this.http.get(environment.apiUrl + '/api/Reports/Visits/'  + token + '/' + sdate + '/' + edate + '/' +\n      type + '/' + eid + '/' + tid).pipe(map(\n         response => {\n        return response; }));\n    }\n    public refrestWarrantyList(token: string, SDate: string, EDate: string, CId: string, PId: string, UId: string) {\n      return this.http.get(environment.apiUrl + '/api/Reports/Warranty/' + token + '/' + SDate + '/' + EDate + '/' +\n                          CId + '/' + PId + '/' + UId).pipe(map(response => response));\n  }\n  public WarrantyForMaintance(token: string, CId: string, UId: string) {\n    return this.http.get(environment.apiUrl + '/api/Reports/WarrantyForMaintance/' + token + '/' + CId + '/' + UId)\n    .pipe(map(response => response));\n}\n  public refrestUnWarrantyList(token: string, strSearch: string) {\n    return this.http.get(environment.apiUrl + '/api/Reports/WithOutWarranty/' + token + '/' + strSearch)\n    .pipe(map(response => response));\n}\ngetproductById(token: string, Id: number) {\n  return this.http.get(environment.apiUrl + '/api/Tickets/GetTicketItemById/' + token + '/' + Id)\n  .pipe(map(  response => response));\n}\ngetproductwarrantyById(token: string, Id: number) {\n  return this.http.get(environment.apiUrl + '/api/Products/GetProductWarrantyById/' + token + '/' + Id)\n  .pipe(map(  response => response));\n}\npublic postProductWarranty(token: string) {\n  return this.http.post(environment.apiUrl + '/api/Products/AddItemInProduct/' + token, this.ProductWarranty, {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' }), observe: 'response'\n  }).pipe();\n}\npublic putProductWarranty(token: string) {\n  return this.http.put(environment.apiUrl + '/api/Products/UpdateItemInProduct/' + token, this.ProductWarranty, {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' }), observe: 'response'\n  }).pipe();\n}\npublic deleteProductWarranty(token: string, id: number) {\n  return this.http.delete(environment.apiUrl + '/api/Products/Deleteproductwarranty/' + token + '/' + id, {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' }), observe: 'response'\n  }).toPromise();\n}\n}\n\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'generic-quote-status',\r\n  template: `\r\n  <span *ngIf=\"Status === 1\" class=\"ticketstatus quotestatusdraft uppercase\">Draft</span>\r\n  <span *ngIf=\"Status === 2\" class=\"ticketstatus quotestatuspending uppercase\">Pending</span>\r\n  <span *ngIf=\"Status === 3\" class=\"ticketstatus quotestatusapproved uppercase\">Approved</span>\r\n  <span *ngIf=\"Status === 4\" class=\"ticketstatus quotestatusaccepeted uppercase\">Accepted</span>\r\n  <span *ngIf=\"Status === 5\" class=\"ticketstatus quotestatusrejected uppercase\">Rejected</span>\r\n  <span *ngIf=\"Status === 6\" class=\"ticketstatus quotestatuscancelled uppercase\">Cancelled</span>\r\n  `\r\n})\r\nexport class QuoteStatusComponent {\r\n  @Input() Status: number;\r\n}\r\n"]}